/*
 * This file has been automatically generated by Soupply and released under the MIT license.
 * Generated from data/java315.xml
 */
// module soupply.java315.clientbound;

const Clientbound = {

	SpawnObject: class extends Buffer {

		static get ID(){ return 0; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, uuid=new Uint8Array(16), type=0, position={x:0,y:0,z:0}, pitch=0, yaw=0, data=0, velocity={x:0,y:0,z:0}) {
			super();
			this.entityId = entityId;
			this.uuid = uuid;
			this.type = type;
			this.position = position;
			this.pitch = pitch;
			this.yaw = yaw;
			this.data = data;
			this.velocity = velocity;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(0);
			this.writeVaruint(this.entity_id);
			this.writeBytes(this.uuid);
			this.writeByte(this.type);
			this.writeBigEndianDouble(this.position.x);
			this.writeBigEndianDouble(this.position.y);
			this.writeBigEndianDouble(this.position.z);
			this.writeByte(this.pitch);
			this.writeByte(this.yaw);
			this.writeBigEndianInt(this.data);
			this.writeBigEndianShort(this.velocity.x);
			this.writeBigEndianShort(this.velocity.y);
			this.writeBigEndianShort(this.velocity.z);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.uuid=this.readBytes(16);
			this.type=this.readByte();
			this.position={};
			this.position.x=this.readBigEndianDouble();
			this.position.y=this.readBigEndianDouble();
			this.position.z=this.readBigEndianDouble();
			this.pitch=this.readByte();
			this.yaw=this.readByte();
			this.data=this.readBigEndianInt();
			this.velocity={};
			this.velocity.x=this.readBigEndianShort();
			this.velocity.y=this.readBigEndianShort();
			this.velocity.z=this.readBigEndianShort();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.SpawnObject().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SpawnObject(entity_id: " + this.entity_id + ", uuid: " + this.uuid + ", type: " + this.type + ", position: " + this.position + ", pitch: " + this.pitch + ", yaw: " + this.yaw + ", data: " + this.data + ", velocity: " + this.velocity + ")";
		}

	}
	,

	SpawnExperienceOrb: class extends Buffer {

		static get ID(){ return 1; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, position={x:0,y:0,z:0}, count=0) {
			super();
			this.entityId = entityId;
			this.position = position;
			this.count = count;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(1);
			this.writeVaruint(this.entity_id);
			this.writeBigEndianDouble(this.position.x);
			this.writeBigEndianDouble(this.position.y);
			this.writeBigEndianDouble(this.position.z);
			this.writeBigEndianShort(this.count);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.position={};
			this.position.x=this.readBigEndianDouble();
			this.position.y=this.readBigEndianDouble();
			this.position.z=this.readBigEndianDouble();
			this.count=this.readBigEndianShort();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.SpawnExperienceOrb().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SpawnExperienceOrb(entity_id: " + this.entity_id + ", position: " + this.position + ", count: " + this.count + ")";
		}

	}
	,

	SpawnGlobalEntity: class extends Buffer {

		static get ID(){ return 2; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// type
		static get THUNDERBOLT(){ return 1; };

		constructor(entityId=0, type=0, position={x:0,y:0,z:0}) {
			super();
			this.entityId = entityId;
			this.type = type;
			this.position = position;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(2);
			this.writeVaruint(this.entity_id);
			this.writeByte(this.type);
			this.writeBigEndianDouble(this.position.x);
			this.writeBigEndianDouble(this.position.y);
			this.writeBigEndianDouble(this.position.z);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.type=this.readByte();
			this.position={};
			this.position.x=this.readBigEndianDouble();
			this.position.y=this.readBigEndianDouble();
			this.position.z=this.readBigEndianDouble();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.SpawnGlobalEntity().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SpawnGlobalEntity(entity_id: " + this.entity_id + ", type: " + this.type + ", position: " + this.position + ")";
		}

	}
	,

	SpawnMob: class extends Buffer {

		static get ID(){ return 3; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, uuid=new Uint8Array(16), type=0, position={x:0,y:0,z:0}, yaw=0, pitch=0, headPitch=0, velocity={x:0,y:0,z:0}, metadata=new Metadata()) {
			super();
			this.entityId = entityId;
			this.uuid = uuid;
			this.type = type;
			this.position = position;
			this.yaw = yaw;
			this.pitch = pitch;
			this.headPitch = headPitch;
			this.velocity = velocity;
			this.metadata = metadata;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(3);
			this.writeVaruint(this.entity_id);
			this.writeBytes(this.uuid);
			this.writeVaruint(this.type);
			this.writeBigEndianDouble(this.position.x);
			this.writeBigEndianDouble(this.position.y);
			this.writeBigEndianDouble(this.position.z);
			this.writeByte(this.yaw);
			this.writeByte(this.pitch);
			this.writeByte(this.head_pitch);
			this.writeBigEndianShort(this.velocity.x);
			this.writeBigEndianShort(this.velocity.y);
			this.writeBigEndianShort(this.velocity.z);
			this.writeBytes(this.metadata.encode());
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.uuid=this.readBytes(16);
			this.type=this.readVaruint();
			this.position={};
			this.position.x=this.readBigEndianDouble();
			this.position.y=this.readBigEndianDouble();
			this.position.z=this.readBigEndianDouble();
			this.yaw=this.readByte();
			this.pitch=this.readByte();
			this.head_pitch=this.readByte();
			this.velocity={};
			this.velocity.x=this.readBigEndianShort();
			this.velocity.y=this.readBigEndianShort();
			this.velocity.z=this.readBigEndianShort();
			this.metadata=Metadata.fromBuffer(this._buffer);
			this._buffer=this.metadata._buffer;
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.SpawnMob().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SpawnMob(entity_id: " + this.entity_id + ", uuid: " + this.uuid + ", type: " + this.type + ", position: " + this.position + ", yaw: " + this.yaw + ", pitch: " + this.pitch + ", head_pitch: " + this.head_pitch + ", velocity: " + this.velocity + ", metadata: " + this.metadata + ")";
		}

	}
	,

	SpawnPainting: class extends Buffer {

		static get ID(){ return 4; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// direction
		static get SOUTH(){ return 0; };
		static get WEST(){ return 1; };
		static get NORTH(){ return 2; };
		static get EAST(){ return 3; };

		constructor(entityId=0, uuid=new Uint8Array(16), title="", position=0, direction=0) {
			super();
			this.entityId = entityId;
			this.uuid = uuid;
			this.title = title;
			this.position = position;
			this.direction = direction;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(4);
			this.writeVaruint(this.entity_id);
			this.writeBytes(this.uuid);
			var dhc5arz=this.encodeString(this.title);
			this.writeVaruint(dhc5arz.length);
			this.writeBytes(dhc5arz);
			this.writeBigEndianLong(this.position);
			this.writeByte(this.direction);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.uuid=this.readBytes(16);
			var dhc5arz=this.readVaruint();
			this.title=this.decodeString(this.readBytes(dhc5arz));
			this.position=this.readBigEndianLong();
			this.direction=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.SpawnPainting().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SpawnPainting(entity_id: " + this.entity_id + ", uuid: " + this.uuid + ", title: " + this.title + ", position: " + this.position + ", direction: " + this.direction + ")";
		}

	}
	,

	SpawnPlayer: class extends Buffer {

		static get ID(){ return 5; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, uuid=new Uint8Array(16), position={x:0,y:0,z:0}, yaw=0, pitch=0, metadata=new Metadata()) {
			super();
			this.entityId = entityId;
			this.uuid = uuid;
			this.position = position;
			this.yaw = yaw;
			this.pitch = pitch;
			this.metadata = metadata;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(5);
			this.writeVaruint(this.entity_id);
			this.writeBytes(this.uuid);
			this.writeBigEndianDouble(this.position.x);
			this.writeBigEndianDouble(this.position.y);
			this.writeBigEndianDouble(this.position.z);
			this.writeByte(this.yaw);
			this.writeByte(this.pitch);
			this.writeBytes(this.metadata.encode());
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.uuid=this.readBytes(16);
			this.position={};
			this.position.x=this.readBigEndianDouble();
			this.position.y=this.readBigEndianDouble();
			this.position.z=this.readBigEndianDouble();
			this.yaw=this.readByte();
			this.pitch=this.readByte();
			this.metadata=Metadata.fromBuffer(this._buffer);
			this._buffer=this.metadata._buffer;
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.SpawnPlayer().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SpawnPlayer(entity_id: " + this.entity_id + ", uuid: " + this.uuid + ", position: " + this.position + ", yaw: " + this.yaw + ", pitch: " + this.pitch + ", metadata: " + this.metadata + ")";
		}

	}
	,

	Animation: class extends Buffer {

		static get ID(){ return 6; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// animation
		static get SWING_MAIN_ARM(){ return 0; };
		static get TAKE_DAMAGE(){ return 1; };
		static get LEAVE_BED(){ return 2; };
		static get SWING_OFFHAND(){ return 3; };
		static get CRITICAL_EFFECT(){ return 4; };
		static get MAGICAL_CRITICAL_EFFECT(){ return 5; };

		constructor(entityId=0, animation=0) {
			super();
			this.entityId = entityId;
			this.animation = animation;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(6);
			this.writeVaruint(this.entity_id);
			this.writeByte(this.animation);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.animation=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.Animation().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Animation(entity_id: " + this.entity_id + ", animation: " + this.animation + ")";
		}

	}
	,

	Statistics: class extends Buffer {

		static get ID(){ return 7; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(statistics=[]) {
			super();
			this.statistics = statistics;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(7);
			this.writeVaruint(this.statistics.length);
			for(var dhc5dfan in this.statistics) {
				this.writeBytes(this.statistics[dhc5dfan].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var aramcrdl=this.readVaruint();
			this.statistics=[];
			for(var dhc5dfan=0;dhc5dfan<aramcrdl;dhc5dfan++) {
				this.statistics[dhc5dfan]=Types.Statistic.fromBuffer(this._buffer);
				this._buffer=this.statistics[dhc5dfan]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.Statistics().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Statistics(statistics: " + this.statistics + ")";
		}

	}
	,

	BlockBreakAnimation: class extends Buffer {

		static get ID(){ return 8; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, position=0, stage=0) {
			super();
			this.entityId = entityId;
			this.position = position;
			this.stage = stage;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(8);
			this.writeVaruint(this.entity_id);
			this.writeBigEndianLong(this.position);
			this.writeByte(this.stage);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.position=this.readBigEndianLong();
			this.stage=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.BlockBreakAnimation().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "BlockBreakAnimation(entity_id: " + this.entity_id + ", position: " + this.position + ", stage: " + this.stage + ")";
		}

	}
	,

	UpdateBlockEntity: class extends Buffer {

		static get ID(){ return 9; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// action
		static get MOB_SPAWNER_DATA(){ return 1; };
		static get COMMAND_BLOCK_TEXT(){ return 2; };
		static get BEACON_POWERS(){ return 3; };
		static get MOB_HEAD_DATA(){ return 4; };
		static get FLOWER_POT_FLOWER(){ return 5; };
		static get BANNER_DATA(){ return 6; };
		static get STRUCTURE_DATA(){ return 7; };
		static get END_GATEWAY_DESTINATION(){ return 8; };
		static get SIGN_TEXT(){ return 9; };
		static get SHULKER_BOX_DECLARATION(){ return 10; };

		constructor(position=0, action=0, nbt=null) {
			super();
			this.position = position;
			this.action = action;
			this.nbt = nbt;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(9);
			this.writeBigEndianLong(this.position);
			this.writeByte(this.action);
			this.writeBytes(this.nbt);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position=this.readBigEndianLong();
			this.action=this.readByte();
			this.nbt=Array.from(this._buffer);
			this._buffer=[];
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.UpdateBlockEntity().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "UpdateBlockEntity(position: " + this.position + ", action: " + this.action + ", nbt: " + this.nbt + ")";
		}

	}
	,

	BlockAction: class extends Buffer {

		static get ID(){ return 10; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// action
		static get NOTE_BLOCK_HARP(){ return 0; };
		static get NOTE_BLOCK_BASS_DRUM(){ return 1; };
		static get NOTE_BLOCK_SNARE_DRUM(){ return 2; };
		static get NOTE_BLOCK_CLICKS(){ return 3; };
		static get NOTE_BLOCK_STICKS(){ return 3; };
		static get NOTE_BLOCK_BASS_GUITAR(){ return 4; };
		static get PISTON_EXTEND(){ return 0; };
		static get PISTON_RETRACT(){ return 1; };
		static get CHEST_WATCHERS(){ return 1; };
		static get BEACON_RECALCULATE(){ return 1; };
		static get MOB_SPAWNER_RESET_DELAY(){ return 1; };
		static get END_GATEWAY_YELLOW_BEAM(){ return 1; };

		// parameter
		static get PISTON_DOWN(){ return 0; };
		static get PISTON_UP(){ return 1; };
		static get PISTON_SOUTH(){ return 2; };
		static get PISTON_WEST(){ return 3; };
		static get PISTON_NORTH(){ return 4; };
		static get PISTON_EAST(){ return 5; };

		constructor(position=0, action=0, parameter=0, blockType=0) {
			super();
			this.position = position;
			this.action = action;
			this.parameter = parameter;
			this.blockType = blockType;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(10);
			this.writeBigEndianLong(this.position);
			this.writeByte(this.action);
			this.writeByte(this.parameter);
			this.writeVaruint(this.block_type);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position=this.readBigEndianLong();
			this.action=this.readByte();
			this.parameter=this.readByte();
			this.block_type=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.BlockAction().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "BlockAction(position: " + this.position + ", action: " + this.action + ", parameter: " + this.parameter + ", block_type: " + this.block_type + ")";
		}

	}
	,

	BlockChange: class extends Buffer {

		static get ID(){ return 11; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position=0, block=0) {
			super();
			this.position = position;
			this.block = block;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(11);
			this.writeBigEndianLong(this.position);
			this.writeVaruint(this.block);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position=this.readBigEndianLong();
			this.block=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.BlockChange().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "BlockChange(position: " + this.position + ", block: " + this.block + ")";
		}

	}
	,

	BossBar: class extends Buffer {

		static get ID(){ return 12; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// action (variant)
		static get ADD(){ return 0; };
		static get REMOVE(){ return 1; };
		static get UPDATE_HEALTH(){ return 2; };
		static get UPDATE_TITLE(){ return 3; };
		static get UPDATE_STYLE(){ return 4; };
		static get UPDATE_FLAGS(){ return 5; };

		constructor(uuid=new Uint8Array(16), action=0) {
			super();
			this.uuid = uuid;
			this.action = action;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(12);
			this.writeBytes(this.uuid);
			this.writeVaruint(this.action);
			switch(this.action) {
				case 0:
					this.writeBytes(this.uuid);
					this.writeVaruint(this.action);
					break;
				case 1:
					this.writeBytes(this.uuid);
					this.writeVaruint(this.action);
					break;
				case 2:
					this.writeBytes(this.uuid);
					this.writeVaruint(this.action);
					break;
				case 3:
					this.writeBytes(this.uuid);
					this.writeVaruint(this.action);
					break;
				case 4:
					this.writeBytes(this.uuid);
					this.writeVaruint(this.action);
					break;
				case 5:
					this.writeBytes(this.uuid);
					this.writeVaruint(this.action);
					break;
				default: break;
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.uuid=this.readBytes(16);
			this.action=this.readVaruint();
			switch(this.action) {
				case 0:
					var dhc5arz=this.readVaruint();
					this.title=this.decodeString(this.readBytes(dhc5arz));
					this.health=this.readBigEndianFloat();
					this.color=this.readVaruint();
					this.division=this.readVaruint();
					this.flags=this.readByte();
					break;
				case 1:
					break;
				case 2:
					this.health=this.readBigEndianFloat();
					break;
				case 3:
					var dhc5arz=this.readVaruint();
					this.title=this.decodeString(this.readBytes(dhc5arz));
					break;
				case 4:
					this.color=this.readVaruint();
					this.division=this.readVaruint();
					break;
				case 5:
					this.flags=this.readByte();
					break;
				default: break;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.BossBar().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "BossBar(uuid: " + this.uuid + ", action: " + this.action + ")";
		}

	}
	,

	ServerDifficulty: class extends Buffer {

		static get ID(){ return 13; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// difficulty
		static get PEACEFUL(){ return 0; };
		static get EASY(){ return 1; };
		static get NORMAL(){ return 2; };
		static get HARD(){ return 3; };

		constructor(difficulty=0) {
			super();
			this.difficulty = difficulty;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(13);
			this.writeByte(this.difficulty);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.difficulty=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.ServerDifficulty().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ServerDifficulty(difficulty: " + this.difficulty + ")";
		}

	}
	,

	TabComplete: class extends Buffer {

		static get ID(){ return 14; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(matches=[]) {
			super();
			this.matches = matches;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(14);
			this.writeVaruint(this.matches.length);
			for(var dhc5yrav in this.matches) {
				var dhc5yrav=this.encodeString(this.matches[dhc5yrav]);
				this.writeVaruint(dhc5yrav.length);
				this.writeBytes(dhc5yrav);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var arambfyh=this.readVaruint();
			this.matches=[];
			for(var dhc5yrav=0;dhc5yrav<arambfyh;dhc5yrav++) {
				var dhc5yrav=this.readVaruint();
				this.matches[dhc5yrav]=this.decodeString(this.readBytes(dhc5yrav));
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.TabComplete().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "TabComplete(matches: " + this.matches + ")";
		}

	}
	,

	ChatMessage: class extends Buffer {

		static get ID(){ return 15; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// position
		static get CHAT(){ return 0; };
		static get SYSTEM_MESSAGE(){ return 1; };
		static get ABOVE_HOTBAR(){ return 2; };

		constructor(message="", position=0) {
			super();
			this.message = message;
			this.position = position;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(15);
			var dhc5znyd=this.encodeString(this.message);
			this.writeVaruint(dhc5znyd.length);
			this.writeBytes(dhc5znyd);
			this.writeByte(this.position);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5znyd=this.readVaruint();
			this.message=this.decodeString(this.readBytes(dhc5znyd));
			this.position=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.ChatMessage().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ChatMessage(message: " + this.message + ", position: " + this.position + ")";
		}

	}
	,

	MultiBlockChange: class extends Buffer {

		static get ID(){ return 16; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(chunk={x:0,z:0}, changes=[]) {
			super();
			this.chunk = chunk;
			this.changes = changes;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(16);
			this.writeBigEndianInt(this.chunk.x);
			this.writeBigEndianInt(this.chunk.z);
			this.writeVaruint(this.changes.length);
			for(var dhc5afzv in this.changes) {
				this.writeBytes(this.changes[dhc5afzv].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.chunk={};
			this.chunk.x=this.readBigEndianInt();
			this.chunk.z=this.readBigEndianInt();
			var aramyhbd=this.readVaruint();
			this.changes=[];
			for(var dhc5afzv=0;dhc5afzv<aramyhbd;dhc5afzv++) {
				this.changes[dhc5afzv]=Types.BlockChange.fromBuffer(this._buffer);
				this._buffer=this.changes[dhc5afzv]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.MultiBlockChange().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "MultiBlockChange(chunk: " + this.chunk + ", changes: " + this.changes + ")";
		}

	}
	,

	ConfirmTransaction: class extends Buffer {

		static get ID(){ return 17; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(window=0, action=0, accepted=false) {
			super();
			this.window = window;
			this.action = action;
			this.accepted = accepted;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(17);
			this.writeByte(this.window);
			this.writeBigEndianShort(this.action);
			this.writeBool(this.accepted);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.window=this.readByte();
			this.action=this.readBigEndianShort();
			this.accepted=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.ConfirmTransaction().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ConfirmTransaction(window: " + this.window + ", action: " + this.action + ", accepted: " + this.accepted + ")";
		}

	}
	,

	CloseWindow: class extends Buffer {

		static get ID(){ return 18; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(window=0) {
			super();
			this.window = window;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(18);
			this.writeByte(this.window);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.window=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.CloseWindow().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "CloseWindow(window: " + this.window + ")";
		}

	}
	,

	OpenWindow: class extends Buffer {

		static get ID(){ return 19; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(window=0, type="", title="", slots=0) {
			super();
			this.window = window;
			this.type = type;
			this.title = title;
			this.slots = slots;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(19);
			this.writeByte(this.window);
			var dhc5eb=this.encodeString(this.type);
			this.writeVaruint(dhc5eb.length);
			this.writeBytes(dhc5eb);
			var dhc5arz=this.encodeString(this.title);
			this.writeVaruint(dhc5arz.length);
			this.writeBytes(dhc5arz);
			this.writeByte(this.slots);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.window=this.readByte();
			var dhc5eb=this.readVaruint();
			this.type=this.decodeString(this.readBytes(dhc5eb));
			var dhc5arz=this.readVaruint();
			this.title=this.decodeString(this.readBytes(dhc5arz));
			this.slots=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.OpenWindow().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "OpenWindow(window: " + this.window + ", type: " + this.type + ", title: " + this.title + ", slots: " + this.slots + ")";
		}

	}
	,

	WindowItems: class extends Buffer {

		static get ID(){ return 20; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(window=0, slots=null) {
			super();
			this.window = window;
			this.slots = slots;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(20);
			this.writeByte(this.window);
			this.writeBigEndianShort(this.slots.length);
			for(var dhc5b9c in this.slots) {
				this.writeBytes(this.slots[dhc5b9c].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.window=this.readByte();
			var aramcxdm=this.readBigEndianShort();
			this.slots=[];
			for(var dhc5b9c=0;dhc5b9c<aramcxdm;dhc5b9c++) {
				this.slots[dhc5b9c]=Types.Slot.fromBuffer(this._buffer);
				this._buffer=this.slots[dhc5b9c]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.WindowItems().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "WindowItems(window: " + this.window + ", slots: " + this.slots + ")";
		}

	}
	,

	WindowProperty: class extends Buffer {

		static get ID(){ return 21; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// property
		static get FURNANCE_FIRE_ICON(){ return 0; };
		static get FURNACE_MAX_FUEL_BURN_TIME(){ return 1; };
		static get FURNACE_PROGRESS_ARROW(){ return 2; };
		static get FURNCE_MAX_PROGRESS(){ return 3; };
		static get ENCHANTMENT_LEVEL_REQUIREMENT_TOP(){ return 0; };
		static get ENCHANTMENT_LEVEL_REQUIREMENT_MIDDLE(){ return 1; };
		static get ENCHANTMENT_LEVEL_REQUIREMENT_BOTTOM(){ return 2; };
		static get ENCHANTMENT_SEED(){ return 3; };
		static get ENCHANTMENT_ID_TOP(){ return 4; };
		static get ENCHANTMENT_ID_MIDDLE(){ return 5; };
		static get ENCHANTMENT_ID_BOTTOM(){ return 6; };
		static get ENCHANTMENT_LEVEL_TOP(){ return 7; };
		static get ENCHANTMENT_LEVEL_MIDDLE(){ return 8; };
		static get ENCHANTMENT_LEVEL_BOTTOM(){ return 9; };
		static get BEACON_POWER_LEVEL(){ return 0; };
		static get BEACON_FIRST_EFFECT(){ return 1; };
		static get BEACON_SECOND_EFFECT(){ return 2; };
		static get ANVIL_REPAIR_COST(){ return 0; };
		static get BREWING_STAND_BREW_TIME(){ return 0; };

		constructor(window=0, property=0, value=0) {
			super();
			this.window = window;
			this.property = property;
			this.value = value;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(21);
			this.writeByte(this.window);
			this.writeBigEndianShort(this.property);
			this.writeBigEndianShort(this.value);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.window=this.readByte();
			this.property=this.readBigEndianShort();
			this.value=this.readBigEndianShort();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.WindowProperty().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "WindowProperty(window: " + this.window + ", property: " + this.property + ", value: " + this.value + ")";
		}

	}
	,

	SetSlot: class extends Buffer {

		static get ID(){ return 22; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(window=0, slot=0, item=null) {
			super();
			this.window = window;
			this.slot = slot;
			this.item = item;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(22);
			this.writeByte(this.window);
			this.writeBigEndianShort(this.slot);
			this.writeBytes(this.item.encode());
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.window=this.readByte();
			this.slot=this.readBigEndianShort();
			this.item=Types.Slot.fromBuffer(this._buffer);
			this._buffer=this.item._buffer;
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.SetSlot().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetSlot(window: " + this.window + ", slot: " + this.slot + ", item: " + this.item + ")";
		}

	}
	,

	SetCooldown: class extends Buffer {

		static get ID(){ return 23; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(item=0, cooldown=0) {
			super();
			this.item = item;
			this.cooldown = cooldown;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(23);
			this.writeVaruint(this.item);
			this.writeVaruint(this.cooldown);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.item=this.readVaruint();
			this.cooldown=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.SetCooldown().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetCooldown(item: " + this.item + ", cooldown: " + this.cooldown + ")";
		}

	}
	,

	PluginMessage: class extends Buffer {

		static get ID(){ return 24; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(channel="", data=null) {
			super();
			this.channel = channel;
			this.data = data;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(24);
			var dhc5afbv=this.encodeString(this.channel);
			this.writeVaruint(dhc5afbv.length);
			this.writeBytes(dhc5afbv);
			this.writeBytes(this.data);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5afbv=this.readVaruint();
			this.channel=this.decodeString(this.readBytes(dhc5afbv));
			this.data=Array.from(this._buffer);
			this._buffer=[];
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.PluginMessage().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PluginMessage(channel: " + this.channel + ", data: " + this.data + ")";
		}

	}
	,

	NamedSoundEffect: class extends Buffer {

		static get ID(){ return 25; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(name="", category=0, position={x:0,y:0,z:0}, volume=.0, pitch=.0) {
			super();
			this.name = name;
			this.category = category;
			this.position = position;
			this.volume = volume;
			this.pitch = pitch;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(25);
			var dhc5y1=this.encodeString(this.name);
			this.writeVaruint(dhc5y1.length);
			this.writeBytes(dhc5y1);
			this.writeVaruint(this.category);
			this.writeBigEndianInt(this.position.x);
			this.writeBigEndianInt(this.position.y);
			this.writeBigEndianInt(this.position.z);
			this.writeBigEndianFloat(this.volume);
			this.writeBigEndianFloat(this.pitch);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5y1=this.readVaruint();
			this.name=this.decodeString(this.readBytes(dhc5y1));
			this.category=this.readVaruint();
			this.position={};
			this.position.x=this.readBigEndianInt();
			this.position.y=this.readBigEndianInt();
			this.position.z=this.readBigEndianInt();
			this.volume=this.readBigEndianFloat();
			this.pitch=this.readBigEndianFloat();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.NamedSoundEffect().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "NamedSoundEffect(name: " + this.name + ", category: " + this.category + ", position: " + this.position + ", volume: " + this.volume + ", pitch: " + this.pitch + ")";
		}

	}
	,

	Disconnect: class extends Buffer {

		static get ID(){ return 26; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(reason="") {
			super();
			this.reason = reason;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(26);
			var dhc5zfb4=this.encodeString(this.reason);
			this.writeVaruint(dhc5zfb4.length);
			this.writeBytes(dhc5zfb4);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5zfb4=this.readVaruint();
			this.reason=this.decodeString(this.readBytes(dhc5zfb4));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.Disconnect().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Disconnect(reason: " + this.reason + ")";
		}

	}
	,

	EntityStatus: class extends Buffer {

		static get ID(){ return 27; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// status
		static get SPAWN_TIPPED_ARROW_PARTICLE_EFFECTS(){ return 0; };
		static get PLAY_JUMPING_ANIMATION_AND_PARTICLES(){ return 1; };
		static get RESET_SPAWNER_DELAY(){ return 1; };
		static get PLAY_HURT_ANIMATION_AND_SOUND(){ return 2; };
		static get PLAY_DEATH_ANIMATION_AND_SOUND(){ return 3; };
		static get PLAY_ATTACK_ANIMATION_AND_SOUND(){ return 4; };
		static get SPAWN_SMOKE_PARTICLES(){ return 6; };
		static get SPAWN_HEART_PARTICLES(){ return 7; };
		static get PLAY_SHAKING_WATER_ANIMATION(){ return 8; };
		static get FINISHED_CONSUMING(){ return 9; };
		static get PLAY_EATING_GRASS_ANIMATION(){ return 10; };
		static get IGNITE_MINECART_TNT(){ return 10; };
		static get HOLD_POPPY(){ return 11; };
		static get SPAWN_VILLAGER_MATING_HEART_PARTICLES(){ return 12; };
		static get SPAWN_VILLAGER_ANGRY_PARTICLES(){ return 13; };
		static get SPAWN_VILLAGER_HAPPY_PARTICLES(){ return 14; };
		static get SPAWN_WITCH_MAGIC_PARTICLES(){ return 15; };
		static get PLAY_ZOMBIE_CURE_FINISHED_SOUND(){ return 16; };
		static get SPAWN_FIREWORK_EXPLOSION_EFFECT(){ return 17; };
		static get SPAWN_LOVE_PARTICLES(){ return 18; };
		static get RESET_SQUID_ROTATION(){ return 19; };
		static get SPAWN_EXPLOSION_PARTICLES(){ return 20; };
		static get PLAY_GUARDIAN_SOUND_EFFECT(){ return 21; };
		static get ENABLE_REDUCED_DEBUG_SCREEN(){ return 22; };
		static get DISABLE_REDUCED_DEBUG_SCREEN(){ return 23; };
		static get SET_OP_PERMISSION_LEVEL_0(){ return 24; };
		static get SET_OP_PERMISSION_LEVEL_1(){ return 25; };
		static get SET_OP_PERMISSION_LEVEL_2(){ return 26; };
		static get SET_OP_PERMISSION_LEVEL_3(){ return 27; };
		static get SET_OP_PERMISSION_LEVEL_4(){ return 28; };
		static get PLAY_SHIELD_BLOCK_SOUND(){ return 29; };
		static get PLAY_SHIELD_BREAK_SOUND(){ return 30; };
		static get HOOK_KNOCKBACK(){ return 31; };
		static get PLAY_HIT_SOUND(){ return 32; };
		static get PLAY_THORNS_HURT_ANIMATION_AND_SOUND(){ return 33; };
		static get REMOVE_POPPY(){ return 34; };
		static get PLAY_TOTEM_UNDYING_ANIMATION(){ return 35; };

		constructor(entityId=0, status=0) {
			super();
			this.entityId = entityId;
			this.status = status;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(27);
			this.writeBigEndianInt(this.entity_id);
			this.writeByte(this.status);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readBigEndianInt();
			this.status=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.EntityStatus().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityStatus(entity_id: " + this.entity_id + ", status: " + this.status + ")";
		}

	}
	,

	Explosion: class extends Buffer {

		static get ID(){ return 28; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position={x:0,y:0,z:0}, radius=.0, records=null, motion={x:0,y:0,z:0}) {
			super();
			this.position = position;
			this.radius = radius;
			this.records = records;
			this.motion = motion;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(28);
			this.writeBigEndianFloat(this.position.x);
			this.writeBigEndianFloat(this.position.y);
			this.writeBigEndianFloat(this.position.z);
			this.writeBigEndianFloat(this.radius);
			this.writeBigEndianInt(this.records.length);
			for(var dhc5zncr in this.records) {
				this.writeByte(this.records[dhc5zncr].x);
				this.writeByte(this.records[dhc5zncr].y);
				this.writeByte(this.records[dhc5zncr].z);
			}
			this.writeBigEndianFloat(this.motion.x);
			this.writeBigEndianFloat(this.motion.y);
			this.writeBigEndianFloat(this.motion.z);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position={};
			this.position.x=this.readBigEndianFloat();
			this.position.y=this.readBigEndianFloat();
			this.position.z=this.readBigEndianFloat();
			this.radius=this.readBigEndianFloat();
			var aramcvbj=this.readBigEndianInt();
			this.records=[];
			for(var dhc5zncr=0;dhc5zncr<aramcvbj;dhc5zncr++) {
				this.records[dhc5zncr]={};
				this.records[dhc5zncr].x=this.readByte();
				this.records[dhc5zncr].y=this.readByte();
				this.records[dhc5zncr].z=this.readByte();
			}
			this.motion={};
			this.motion.x=this.readBigEndianFloat();
			this.motion.y=this.readBigEndianFloat();
			this.motion.z=this.readBigEndianFloat();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.Explosion().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Explosion(position: " + this.position + ", radius: " + this.radius + ", records: " + this.records + ", motion: " + this.motion + ")";
		}

	}
	,

	UnloadChunk: class extends Buffer {

		static get ID(){ return 29; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position={x:0,z:0}) {
			super();
			this.position = position;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(29);
			this.writeBigEndianInt(this.position.x);
			this.writeBigEndianInt(this.position.z);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position={};
			this.position.x=this.readBigEndianInt();
			this.position.z=this.readBigEndianInt();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.UnloadChunk().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "UnloadChunk(position: " + this.position + ")";
		}

	}
	,

	ChangeGameState: class extends Buffer {

		static get ID(){ return 30; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// reason
		static get INVALID_BED(){ return 0; };
		static get END_RAINING(){ return 1; };
		static get BEGIN_RAINING(){ return 2; };
		static get CHANGE_GAMEMODE(){ return 3; };
		static get EXIT_END(){ return 4; };
		static get DEMO_MESSAGE(){ return 5; };
		static get ARROW_HITTING_PLAYER(){ return 6; };
		static get FADE_VALUE(){ return 7; };
		static get FADE_TIME(){ return 8; };
		static get PLAY_ELDER_GUARDIAN_MOB_APPEARANCE(){ return 10; };

		// value
		static get SURVIVAL(){ return 0; };
		static get CREATIVE(){ return 1; };
		static get ADVENTURE(){ return 2; };
		static get SPECTATOR(){ return 3; };
		static get RESPAWN_IMMEDIATELY(){ return 0; };
		static get RESPAWN_AFTER_CREDITS(){ return 1; };
		static get SHOW_DEMO_SCREEN(){ return 0; };
		static get TELL_MOVEMENT_CONTROLS(){ return 101; };
		static get TELL_JUMP_CONTROLS(){ return 102; };
		static get TELL_INVENTORY_CONTROLS(){ return 103; };
		static get BRIGHT(){ return 0; };
		static get DARK(){ return 1; };

		constructor(reason=0, value=.0) {
			super();
			this.reason = reason;
			this.value = value;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(30);
			this.writeByte(this.reason);
			this.writeBigEndianFloat(this.value);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.reason=this.readByte();
			this.value=this.readBigEndianFloat();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.ChangeGameState().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ChangeGameState(reason: " + this.reason + ", value: " + this.value + ")";
		}

	}
	,

	KeepAlive: class extends Buffer {

		static get ID(){ return 31; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(id=0) {
			super();
			this.id = id;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(31);
			this.writeVaruint(this.id);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.KeepAlive().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "KeepAlive(id: " + this.id + ")";
		}

	}
	,

	ChunkData: class extends Buffer {

		static get ID(){ return 32; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position={x:0,z:0}, full=false, sections=0, data=[], tilesCount=0, tiles=null) {
			super();
			this.position = position;
			this.full = full;
			this.sections = sections;
			this.data = data;
			this.tilesCount = tilesCount;
			this.tiles = tiles;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(32);
			this.writeBigEndianInt(this.position.x);
			this.writeBigEndianInt(this.position.z);
			this.writeBool(this.full);
			this.writeVaruint(this.sections);
			this.writeVaruint(this.data.length);
			this.writeBytes(this.data);
			this.writeVaruint(this.tiles_count);
			this.writeBytes(this.tiles);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position={};
			this.position.x=this.readBigEndianInt();
			this.position.z=this.readBigEndianInt();
			this.full=this.readBool();
			this.sections=this.readVaruint();
			var aramzfy=this.readVaruint();
			this.data=this.readBytes(aramzfy);
			this.tiles_count=this.readVaruint();
			this.tiles=Array.from(this._buffer);
			this._buffer=[];
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.ChunkData().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ChunkData(position: " + this.position + ", full: " + this.full + ", sections: " + this.sections + ", data: " + this.data + ", tiles_count: " + this.tiles_count + ", tiles: " + this.tiles + ")";
		}

	}
	,

	Effect: class extends Buffer {

		static get ID(){ return 33; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// effect id
		static get DISPENSER_DISPENSE(){ return 1000; };
		static get DISPENSER_FAIL_DISPENSE(){ return 1001; };
		static get DISPENSER_SHOOT(){ return 1002; };
		static get ENDER_EYE_LAUNCH(){ return 1003; };
		static get FIREWORK_SHOT(){ return 1004; };
		static get IRON_DOOR_OPEN(){ return 1005; };
		static get WOODEN_DOOR_OPEN(){ return 1006; };
		static get WOODEN_TRAPDOOR_OPEN(){ return 1007; };
		static get FENCE_GATE_OPEN(){ return 1008; };
		static get FIRE_EXTINGUISH(){ return 1009; };
		static get PLAY_RECORD(){ return 1010; };
		static get IRON_DOOR_CLOSE(){ return 1011; };
		static get WOODEN_DOOR_CLOSE(){ return 1012; };
		static get WOODEN_TRAPDOOR_CLOSE(){ return 1013; };
		static get FENCE_GATE_CLOSE(){ return 1014; };
		static get GHAST_WARN(){ return 1015; };
		static get GHAST_SHOOT(){ return 1016; };
		static get ENDERDRAGON_SHOOT(){ return 1017; };
		static get BLAZE_SHOOT(){ return 1018; };
		static get ZOMBIE_ATTACK_WOOD_DOOR(){ return 1019; };
		static get ZOMBIE_ATTACK_IRON_DOOR(){ return 1020; };
		static get ZOMBIE_BREAK_WOOD_DOOR(){ return 1021; };
		static get WITHER_BREAK_BLOCK(){ return 1022; };
		static get WITHER_SPAWN(){ return 1023; };
		static get WITHER_SHOOT(){ return 1024; };
		static get BAT_TAKE_OFF(){ return 1025; };
		static get ZOMBIE_INFECT_VILLAGER(){ return 1026; };
		static get ZOMBIE_VILLAGER_CONVERT(){ return 1027; };
		static get ENDER_DRAGON_BREATH(){ return 1028; };
		static get ANVIL_BREAK(){ return 1029; };
		static get ANVIL_USE(){ return 1030; };
		static get ANVIL_LAND(){ return 1031; };
		static get PORTAL_TRAVEL(){ return 1032; };
		static get CHORUS_FLOWER_GROW(){ return 1033; };
		static get CHORUS_FLOWER_DIE(){ return 1034; };
		static get BREWING_STAND_BREW(){ return 1035; };
		static get IRON_TRAPDOOR_OPEN(){ return 1036; };
		static get IRON_TRAPDOOR_CLOSE(){ return 1037; };
		static get SPAWN_10_SMOKE_PARTICLES(){ return 2000; };
		static get BREAK_BREAK_PARTICLES_AND_SOUND(){ return 2001; };
		static get SPLASH_POTION_PARTICLES_AND_SOUND(){ return 2002; };
		static get ENDER_EYE_BREAK_PARTICLES_AND_SOUND(){ return 2003; };
		static get MOB_SPAWN_PARTICLES(){ return 2004; };
		static get BONEMEAL_PARTICLES(){ return 2005; };
		static get DRAGON_BREATH(){ return 2006; };
		static get END_GATEWAY_SPAWN(){ return 3000; };
		static get ENDERDRAGON_GROWL(){ return 3001; };

		constructor(effectId=0, position=0, data=0, disableVolume=false) {
			super();
			this.effectId = effectId;
			this.position = position;
			this.data = data;
			this.disableVolume = disableVolume;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(33);
			this.writeBigEndianInt(this.effect_id);
			this.writeBigEndianLong(this.position);
			this.writeBigEndianInt(this.data);
			this.writeBool(this.disable_volume);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.effect_id=this.readBigEndianInt();
			this.position=this.readBigEndianLong();
			this.data=this.readBigEndianInt();
			this.disable_volume=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.Effect().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Effect(effect_id: " + this.effect_id + ", position: " + this.position + ", data: " + this.data + ", disable_volume: " + this.disable_volume + ")";
		}

	}
	,

	Particle: class extends Buffer {

		static get ID(){ return 34; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// particle id
		static get EXPLODE(){ return 0; };
		static get LARGE_EXPLOSION(){ return 1; };
		static get HUGE_EXPLOSION(){ return 2; };
		static get FIREWORK_SPARK(){ return 3; };
		static get BUBBLE(){ return 4; };
		static get SPLASH(){ return 5; };
		static get WAKE(){ return 6; };
		static get SUSPENDED(){ return 7; };
		static get DEPTH_SUSPEND(){ return 8; };
		static get CRIT(){ return 9; };
		static get MAGIC_CRIT(){ return 10; };
		static get SMOKE(){ return 11; };
		static get LARGE_SMOKE(){ return 12; };
		static get SPELL(){ return 13; };
		static get INSTANT_SPELL(){ return 14; };
		static get MOB_SPELL(){ return 15; };
		static get MOB_SPELL_AMBIENT(){ return 16; };
		static get WITCH_MAGIC(){ return 17; };
		static get DRIP_WATER(){ return 18; };
		static get DRIP_LAVA(){ return 19; };
		static get ANGRY_VILLAGER(){ return 20; };
		static get HAPPY_VILLAGER(){ return 21; };
		static get TOWN_AURA(){ return 22; };
		static get NOTE(){ return 23; };
		static get PORTAL(){ return 24; };
		static get ENCHANTMENT_TABLE(){ return 25; };
		static get FLAME(){ return 26; };
		static get LAVA(){ return 27; };
		static get FOOTSTEP(){ return 28; };
		static get CLOUD(){ return 29; };
		static get RED_DUST(){ return 30; };
		static get SNOWBALL_POOF(){ return 31; };
		static get SNOW_SHOVEL(){ return 32; };
		static get SLIME(){ return 33; };
		static get HEART(){ return 34; };
		static get BARRIER(){ return 35; };
		static get ITEM_CRACK(){ return 36; };
		static get BLOCK_CRACK(){ return 37; };
		static get BLOCK_DUST(){ return 38; };
		static get DROPLET(){ return 39; };
		static get TAKE(){ return 40; };
		static get MOB_APPEARANCE(){ return 41; };
		static get DRAGON_BREATH(){ return 42; };
		static get ENDROD(){ return 43; };
		static get DAMAGE_INDICATOR(){ return 44; };
		static get SWEEP_ATTACK(){ return 45; };
		static get FALLING_DUST(){ return 46; };

		constructor(particleId=0, longDistance=false, position={x:0,y:0,z:0}, offset={x:0,y:0,z:0}, data=.0, count=0, additionalData=new Uint32Array(2)) {
			super();
			this.particleId = particleId;
			this.longDistance = longDistance;
			this.position = position;
			this.offset = offset;
			this.data = data;
			this.count = count;
			this.additionalData = additionalData;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(34);
			this.writeBigEndianInt(this.particle_id);
			this.writeBool(this.long_distance);
			this.writeBigEndianFloat(this.position.x);
			this.writeBigEndianFloat(this.position.y);
			this.writeBigEndianFloat(this.position.z);
			this.writeBigEndianFloat(this.offset.x);
			this.writeBigEndianFloat(this.offset.y);
			this.writeBigEndianFloat(this.offset.z);
			this.writeBigEndianFloat(this.data);
			this.writeBigEndianInt(this.count);
			for(var dhc5zrdl in this.additional_data) {
				this.writeVaruint(this.additional_data[dhc5zrdl]);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.particle_id=this.readBigEndianInt();
			this.long_distance=this.readBool();
			this.position={};
			this.position.x=this.readBigEndianFloat();
			this.position.y=this.readBigEndianFloat();
			this.position.z=this.readBigEndianFloat();
			this.offset={};
			this.offset.x=this.readBigEndianFloat();
			this.offset.y=this.readBigEndianFloat();
			this.offset.z=this.readBigEndianFloat();
			this.data=this.readBigEndianFloat();
			this.count=this.readBigEndianInt();
			var aramyrar=2;
			this.additional_data=[];
			for(var dhc5zrdl=0;dhc5zrdl<aramyrar;dhc5zrdl++) {
				this.additional_data[dhc5zrdl]=this.readVaruint();
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.Particle().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Particle(particle_id: " + this.particle_id + ", long_distance: " + this.long_distance + ", position: " + this.position + ", offset: " + this.offset + ", data: " + this.data + ", count: " + this.count + ", additional_data: " + this.additional_data + ")";
		}

	}
	,

	JoinGame: class extends Buffer {

		static get ID(){ return 35; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// gamemode
		static get SURVIVAL(){ return 0; };
		static get CREATIVE(){ return 1; };
		static get ADVENTURE(){ return 2; };
		static get SPECTATOR(){ return 3; };

		// dimension
		static get NETHER(){ return -1; };
		static get OVERWORLD(){ return 0; };
		static get END(){ return 1; };

		// difficulty
		static get PEACEFUL(){ return 0; };
		static get EASY(){ return 1; };
		static get NORMAL(){ return 2; };
		static get HARD(){ return 3; };

		// level type
		static get INFINITY(){ return default; };
		static get FLAT(){ return flat; };
		static get AMPLIFIED(){ return amplified; };
		static get LARGE_BIOMES(){ return largeBiomes; };

		constructor(entityId=0, gamemode=0, dimension=0, difficulty=0, maxPlayers=0, levelType="", reducedDebug=false) {
			super();
			this.entityId = entityId;
			this.gamemode = gamemode;
			this.dimension = dimension;
			this.difficulty = difficulty;
			this.maxPlayers = maxPlayers;
			this.levelType = levelType;
			this.reducedDebug = reducedDebug;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(35);
			this.writeBigEndianInt(this.entity_id);
			this.writeByte(this.gamemode);
			this.writeBigEndianInt(this.dimension);
			this.writeByte(this.difficulty);
			this.writeByte(this.max_players);
			var dhc5zzb9=this.encodeString(this.level_type);
			this.writeVaruint(dhc5zzb9.length);
			this.writeBytes(dhc5zzb9);
			this.writeBool(this.reduced_debug);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readBigEndianInt();
			this.gamemode=this.readByte();
			this.dimension=this.readBigEndianInt();
			this.difficulty=this.readByte();
			this.max_players=this.readByte();
			var dhc5zzb9=this.readVaruint();
			this.level_type=this.decodeString(this.readBytes(dhc5zzb9));
			this.reduced_debug=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.JoinGame().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "JoinGame(entity_id: " + this.entity_id + ", gamemode: " + this.gamemode + ", dimension: " + this.dimension + ", difficulty: " + this.difficulty + ", max_players: " + this.max_players + ", level_type: " + this.level_type + ", reduced_debug: " + this.reduced_debug + ")";
		}

	}
	,

	Map: class extends Buffer {

		static get ID(){ return 36; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(mapId=0, scale=0, showIcons=false, icons=[], colums=0, rows=0, offset={x:0,z:0}, data=[]) {
			super();
			this.mapId = mapId;
			this.scale = scale;
			this.showIcons = showIcons;
			this.icons = icons;
			this.colums = colums;
			this.rows = rows;
			this.offset = offset;
			this.data = data;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(36);
			this.writeVaruint(this.map_id);
			this.writeByte(this.scale);
			this.writeBool(this.show_icons);
			this.writeVaruint(this.icons.length);
			for(var dhc5y9c in this.icons) {
				this.writeBytes(this.icons[dhc5y9c].encode());
			}
			this.writeByte(this.colums);
			this.writeByte(this.rows);
			this.writeByte(this.offset.x);
			this.writeByte(this.offset.z);
			this.writeVaruint(this.data.length);
			this.writeBytes(this.data);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.map_id=this.readVaruint();
			this.scale=this.readByte();
			this.show_icons=this.readBool();
			var aramanbm=this.readVaruint();
			this.icons=[];
			for(var dhc5y9c=0;dhc5y9c<aramanbm;dhc5y9c++) {
				this.icons[dhc5y9c]=Types.Icon.fromBuffer(this._buffer);
				this._buffer=this.icons[dhc5y9c]._buffer;
			}
			this.colums=this.readByte();
			this.rows=this.readByte();
			this.offset={};
			this.offset.x=this.readByte();
			this.offset.z=this.readByte();
			var aramzfy=this.readVaruint();
			this.data=this.readBytes(aramzfy);
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.Map().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Map(map_id: " + this.map_id + ", scale: " + this.scale + ", show_icons: " + this.show_icons + ", icons: " + this.icons + ", colums: " + this.colums + ", rows: " + this.rows + ", offset: " + this.offset + ", data: " + this.data + ")";
		}

	}
	,

	EntityRelativeMove: class extends Buffer {

		static get ID(){ return 37; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, delta={x:0,y:0,z:0}, onGround=false) {
			super();
			this.entityId = entityId;
			this.delta = delta;
			this.onGround = onGround;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(37);
			this.writeVaruint(this.entity_id);
			this.writeBigEndianShort(this.delta.x);
			this.writeBigEndianShort(this.delta.y);
			this.writeBigEndianShort(this.delta.z);
			this.writeBool(this.on_ground);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.delta={};
			this.delta.x=this.readBigEndianShort();
			this.delta.y=this.readBigEndianShort();
			this.delta.z=this.readBigEndianShort();
			this.on_ground=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.EntityRelativeMove().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityRelativeMove(entity_id: " + this.entity_id + ", delta: " + this.delta + ", on_ground: " + this.on_ground + ")";
		}

	}
	,

	EntityLookAndRelativeMove: class extends Buffer {

		static get ID(){ return 38; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, delta={x:0,y:0,z:0}, yaw=0, pitch=0, onGround=false) {
			super();
			this.entityId = entityId;
			this.delta = delta;
			this.yaw = yaw;
			this.pitch = pitch;
			this.onGround = onGround;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(38);
			this.writeVaruint(this.entity_id);
			this.writeBigEndianShort(this.delta.x);
			this.writeBigEndianShort(this.delta.y);
			this.writeBigEndianShort(this.delta.z);
			this.writeByte(this.yaw);
			this.writeByte(this.pitch);
			this.writeBool(this.on_ground);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.delta={};
			this.delta.x=this.readBigEndianShort();
			this.delta.y=this.readBigEndianShort();
			this.delta.z=this.readBigEndianShort();
			this.yaw=this.readByte();
			this.pitch=this.readByte();
			this.on_ground=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.EntityLookAndRelativeMove().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityLookAndRelativeMove(entity_id: " + this.entity_id + ", delta: " + this.delta + ", yaw: " + this.yaw + ", pitch: " + this.pitch + ", on_ground: " + this.on_ground + ")";
		}

	}
	,

	EntityLook: class extends Buffer {

		static get ID(){ return 39; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, yaw=0, pitch=0, onGround=false) {
			super();
			this.entityId = entityId;
			this.yaw = yaw;
			this.pitch = pitch;
			this.onGround = onGround;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(39);
			this.writeVaruint(this.entity_id);
			this.writeByte(this.yaw);
			this.writeByte(this.pitch);
			this.writeBool(this.on_ground);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.yaw=this.readByte();
			this.pitch=this.readByte();
			this.on_ground=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.EntityLook().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityLook(entity_id: " + this.entity_id + ", yaw: " + this.yaw + ", pitch: " + this.pitch + ", on_ground: " + this.on_ground + ")";
		}

	}
	,

	Entity: class extends Buffer {

		static get ID(){ return 40; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0) {
			super();
			this.entityId = entityId;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(40);
			this.writeVaruint(this.entity_id);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.Entity().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Entity(entity_id: " + this.entity_id + ")";
		}

	}
	,

	VehicleMove: class extends Buffer {

		static get ID(){ return 41; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position={x:0,y:0,z:0}, yaw=.0, pitch=.0) {
			super();
			this.position = position;
			this.yaw = yaw;
			this.pitch = pitch;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(41);
			this.writeBigEndianDouble(this.position.x);
			this.writeBigEndianDouble(this.position.y);
			this.writeBigEndianDouble(this.position.z);
			this.writeBigEndianFloat(this.yaw);
			this.writeBigEndianFloat(this.pitch);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position={};
			this.position.x=this.readBigEndianDouble();
			this.position.y=this.readBigEndianDouble();
			this.position.z=this.readBigEndianDouble();
			this.yaw=this.readBigEndianFloat();
			this.pitch=this.readBigEndianFloat();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.VehicleMove().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "VehicleMove(position: " + this.position + ", yaw: " + this.yaw + ", pitch: " + this.pitch + ")";
		}

	}
	,

	OpenSignEditor: class extends Buffer {

		static get ID(){ return 42; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position=0) {
			super();
			this.position = position;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(42);
			this.writeBigEndianLong(this.position);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position=this.readBigEndianLong();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.OpenSignEditor().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "OpenSignEditor(position: " + this.position + ")";
		}

	}
	,

	PlayerAbilities: class extends Buffer {

		static get ID(){ return 43; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// flags
		static get INVULNERABLE(){ return 1; };
		static get FLYING(){ return 2; };
		static get ALLOW_FLYING(){ return 4; };
		static get CREATIVE_MODE(){ return 8; };

		constructor(flags=0, flyingSpeed=.0, fovModifier=.0) {
			super();
			this.flags = flags;
			this.flyingSpeed = flyingSpeed;
			this.fovModifier = fovModifier;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(43);
			this.writeByte(this.flags);
			this.writeBigEndianFloat(this.flying_speed);
			this.writeBigEndianFloat(this.fov_modifier);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.flags=this.readByte();
			this.flying_speed=this.readBigEndianFloat();
			this.fov_modifier=this.readBigEndianFloat();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.PlayerAbilities().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PlayerAbilities(flags: " + this.flags + ", flying_speed: " + this.flying_speed + ", fov_modifier: " + this.fov_modifier + ")";
		}

	}
	,

	CombatEvent: class extends Buffer {

		static get ID(){ return 44; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// event id (variant)
		static get ENTER_COMBAT(){ return 0; };
		static get END_COMBAT(){ return 1; };
		static get ENTITY_DEAD(){ return 2; };

		constructor(eventId=0) {
			super();
			this.eventId = eventId;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(44);
			this.writeByte(this.event_id);
			switch(this.eventId) {
				case 0:
					this.writeByte(this.event_id);
					break;
				case 1:
					this.writeByte(this.event_id);
					break;
				case 2:
					this.writeByte(this.event_id);
					break;
				default: break;
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.event_id=this.readByte();
			switch(this.eventId) {
				case 0:
					break;
				case 1:
					this.duration=this.readVaruint();
					this.entity_id=this.readBigEndianInt();
					break;
				case 2:
					this.player_id=this.readVaruint();
					this.entity_id=this.readBigEndianInt();
					var dhc5znyd=this.readVaruint();
					this.message=this.decodeString(this.readBytes(dhc5znyd));
					break;
				default: break;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.CombatEvent().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "CombatEvent(event_id: " + this.event_id + ")";
		}

	}
	,

	PlayerListItem: class extends Buffer {

		static get ID(){ return 45; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// action (variant)
		static get ADD_PLAYER(){ return 0; };
		static get UPDATE_GAMEMODE(){ return 1; };
		static get UPDATE_LATENCY(){ return 2; };
		static get UPDATE_DISPLAY_NAME(){ return 3; };
		static get REMOVE_PLAYER(){ return 4; };

		constructor(action=0) {
			super();
			this.action = action;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(45);
			this.writeVaruint(this.action);
			switch(this.action) {
				case 0:
					this.writeVaruint(this.action);
					break;
				case 1:
					this.writeVaruint(this.action);
					break;
				case 2:
					this.writeVaruint(this.action);
					break;
				case 3:
					this.writeVaruint(this.action);
					break;
				case 4:
					this.writeVaruint(this.action);
					break;
				default: break;
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.action=this.readVaruint();
			switch(this.action) {
				case 0:
					var aramcxev=this.readVaruint();
					this.players=[];
					for(var dhc5bfzj=0;dhc5bfzj<aramcxev;dhc5bfzj++) {
						this.players[dhc5bfzj]=Types.ListAddPlayer.fromBuffer(this._buffer);
						this._buffer=this.players[dhc5bfzj]._buffer;
					}
					break;
				case 1:
					var aramcxev=this.readVaruint();
					this.players=[];
					for(var dhc5bfzj=0;dhc5bfzj<aramcxev;dhc5bfzj++) {
						this.players[dhc5bfzj]=Types.ListUpdateGamemode.fromBuffer(this._buffer);
						this._buffer=this.players[dhc5bfzj]._buffer;
					}
					break;
				case 2:
					var aramcxev=this.readVaruint();
					this.players=[];
					for(var dhc5bfzj=0;dhc5bfzj<aramcxev;dhc5bfzj++) {
						this.players[dhc5bfzj]=Types.ListUpdateLatency.fromBuffer(this._buffer);
						this._buffer=this.players[dhc5bfzj]._buffer;
					}
					break;
				case 3:
					var aramcxev=this.readVaruint();
					this.players=[];
					for(var dhc5bfzj=0;dhc5bfzj<aramcxev;dhc5bfzj++) {
						this.players[dhc5bfzj]=Types.ListUpdateDisplayName.fromBuffer(this._buffer);
						this._buffer=this.players[dhc5bfzj]._buffer;
					}
					break;
				case 4:
					var aramcxev=this.readVaruint();
					this.players=[];
					for(var dhc5bfzj=0;dhc5bfzj<aramcxev;dhc5bfzj++) {
						this.players[dhc5bfzj]=this.readBytes(16);
					}
					break;
				default: break;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.PlayerListItem().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PlayerListItem(action: " + this.action + ")";
		}

	}
	,

	PlayerPositionAndLook: class extends Buffer {

		static get ID(){ return 46; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// flags
		static get X(){ return 1; };
		static get Y(){ return 2; };
		static get Z(){ return 4; };
		static get Y_ROTATION(){ return 8; };
		static get X_ROTATION(){ return 16; };

		constructor(position={x:0,y:0,z:0}, yaw=.0, pitch=.0, flags=0, teleportId=0) {
			super();
			this.position = position;
			this.yaw = yaw;
			this.pitch = pitch;
			this.flags = flags;
			this.teleportId = teleportId;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(46);
			this.writeBigEndianDouble(this.position.x);
			this.writeBigEndianDouble(this.position.y);
			this.writeBigEndianDouble(this.position.z);
			this.writeBigEndianFloat(this.yaw);
			this.writeBigEndianFloat(this.pitch);
			this.writeByte(this.flags);
			this.writeVaruint(this.teleport_id);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position={};
			this.position.x=this.readBigEndianDouble();
			this.position.y=this.readBigEndianDouble();
			this.position.z=this.readBigEndianDouble();
			this.yaw=this.readBigEndianFloat();
			this.pitch=this.readBigEndianFloat();
			this.flags=this.readByte();
			this.teleport_id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.PlayerPositionAndLook().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PlayerPositionAndLook(position: " + this.position + ", yaw: " + this.yaw + ", pitch: " + this.pitch + ", flags: " + this.flags + ", teleport_id: " + this.teleport_id + ")";
		}

	}
	,

	UseBed: class extends Buffer {

		static get ID(){ return 47; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, position=0) {
			super();
			this.entityId = entityId;
			this.position = position;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(47);
			this.writeVaruint(this.entity_id);
			this.writeBigEndianLong(this.position);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.position=this.readBigEndianLong();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.UseBed().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "UseBed(entity_id: " + this.entity_id + ", position: " + this.position + ")";
		}

	}
	,

	DestroyEntities: class extends Buffer {

		static get ID(){ return 48; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityIds=[]) {
			super();
			this.entityIds = entityIds;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(48);
			this.writeVaruint(this.entity_ids.length);
			for(var dhc5brdl in this.entity_ids) {
				this.writeVaruint(this.entity_ids[dhc5brdl]);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var aramz5ar=this.readVaruint();
			this.entity_ids=[];
			for(var dhc5brdl=0;dhc5brdl<aramz5ar;dhc5brdl++) {
				this.entity_ids[dhc5brdl]=this.readVaruint();
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.DestroyEntities().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "DestroyEntities(entity_ids: " + this.entity_ids + ")";
		}

	}
	,

	RemoveEntityEffect: class extends Buffer {

		static get ID(){ return 49; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, effectId=0) {
			super();
			this.entityId = entityId;
			this.effectId = effectId;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(49);
			this.writeVaruint(this.entity_id);
			this.writeByte(this.effect_id);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.effect_id=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.RemoveEntityEffect().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "RemoveEntityEffect(entity_id: " + this.entity_id + ", effect_id: " + this.effect_id + ")";
		}

	}
	,

	ResourcePackSend: class extends Buffer {

		static get ID(){ return 50; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(url="", hash="") {
			super();
			this.url = url;
			this.hash = hash;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(50);
			var dhc5cw=this.encodeString(this.url);
			this.writeVaruint(dhc5cw.length);
			this.writeBytes(dhc5cw);
			var dhc5yn=this.encodeString(this.hash);
			this.writeVaruint(dhc5yn.length);
			this.writeBytes(dhc5yn);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5cw=this.readVaruint();
			this.url=this.decodeString(this.readBytes(dhc5cw));
			var dhc5yn=this.readVaruint();
			this.hash=this.decodeString(this.readBytes(dhc5yn));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.ResourcePackSend().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ResourcePackSend(url: " + this.url + ", hash: " + this.hash + ")";
		}

	}
	,

	Respawn: class extends Buffer {

		static get ID(){ return 51; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// dimension
		static get NETHER(){ return -1; };
		static get OVERWORLD(){ return 0; };
		static get END(){ return 1; };

		// difficulty
		static get PEACEFUL(){ return 0; };
		static get EASY(){ return 1; };
		static get NORMAL(){ return 2; };
		static get HARD(){ return 3; };

		// gamemode
		static get SURVIVAL(){ return 0; };
		static get CREATIVE(){ return 1; };
		static get ADVENTURE(){ return 2; };
		static get SPECTATOR(){ return 3; };

		// level type
		static get INFINITY(){ return default; };
		static get FLAT(){ return flat; };
		static get AMPLIFIED(){ return amplified; };
		static get LARGE_BIOMES(){ return largeBiomes; };

		constructor(dimension=0, difficulty=0, gamemode=0, levelType="") {
			super();
			this.dimension = dimension;
			this.difficulty = difficulty;
			this.gamemode = gamemode;
			this.levelType = levelType;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(51);
			this.writeBigEndianInt(this.dimension);
			this.writeByte(this.difficulty);
			this.writeByte(this.gamemode);
			var dhc5zzb9=this.encodeString(this.level_type);
			this.writeVaruint(dhc5zzb9.length);
			this.writeBytes(dhc5zzb9);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.dimension=this.readBigEndianInt();
			this.difficulty=this.readByte();
			this.gamemode=this.readByte();
			var dhc5zzb9=this.readVaruint();
			this.level_type=this.decodeString(this.readBytes(dhc5zzb9));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.Respawn().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Respawn(dimension: " + this.dimension + ", difficulty: " + this.difficulty + ", gamemode: " + this.gamemode + ", level_type: " + this.level_type + ")";
		}

	}
	,

	EntityHeadLook: class extends Buffer {

		static get ID(){ return 52; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, headYaw=0) {
			super();
			this.entityId = entityId;
			this.headYaw = headYaw;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(52);
			this.writeVaruint(this.entity_id);
			this.writeByte(this.head_yaw);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.head_yaw=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.EntityHeadLook().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityHeadLook(entity_id: " + this.entity_id + ", head_yaw: " + this.head_yaw + ")";
		}

	}
	,

	WorldBorder: class extends Buffer {

		static get ID(){ return 53; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// action (variant)
		static get SET_SIZE(){ return 0; };
		static get LERP_SIZE(){ return 1; };
		static get SET_CENTER(){ return 2; };
		static get INITIALIZE(){ return 3; };
		static get SET_WARNING_TIME(){ return 4; };
		static get SET_WARNING_BLOCKS(){ return 5; };

		constructor(action=0) {
			super();
			this.action = action;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(53);
			this.writeVaruint(this.action);
			switch(this.action) {
				case 0:
					this.writeVaruint(this.action);
					break;
				case 1:
					this.writeVaruint(this.action);
					break;
				case 2:
					this.writeVaruint(this.action);
					break;
				case 3:
					this.writeVaruint(this.action);
					break;
				case 4:
					this.writeVaruint(this.action);
					break;
				case 5:
					this.writeVaruint(this.action);
					break;
				default: break;
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.action=this.readVaruint();
			switch(this.action) {
				case 0:
					this.diameter=this.readBigEndianDouble();
					break;
				case 1:
					this.old_diameter=this.readBigEndianDouble();
					this.new_diameter=this.readBigEndianDouble();
					this.speed=this.readVarulong();
					break;
				case 2:
					this.center={};
					this.center.x=this.readBigEndianDouble();
					this.center.y=this.readBigEndianDouble();
					this.center.z=this.readBigEndianDouble();
					break;
				case 3:
					this.center={};
					this.center.x=this.readBigEndianDouble();
					this.center.y=this.readBigEndianDouble();
					this.center.z=this.readBigEndianDouble();
					this.old_diameter=this.readBigEndianDouble();
					this.new_diameter=this.readBigEndianDouble();
					this.speed=this.readVarulong();
					this.portal_teleport_boundary=this.readVaruint();
					this.warning_time=this.readVaruint();
					this.warning_blocks=this.readVaruint();
					break;
				case 4:
					this.warning_time=this.readVaruint();
					break;
				case 5:
					this.warning_blocks=this.readVaruint();
					break;
				default: break;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.WorldBorder().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "WorldBorder(action: " + this.action + ")";
		}

	}
	,

	Camera: class extends Buffer {

		static get ID(){ return 54; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0) {
			super();
			this.entityId = entityId;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(54);
			this.writeVaruint(this.entity_id);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.Camera().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Camera(entity_id: " + this.entity_id + ")";
		}

	}
	,

	HeldItemChange: class extends Buffer {

		static get ID(){ return 55; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(slot=0) {
			super();
			this.slot = slot;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(55);
			this.writeByte(this.slot);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.slot=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.HeldItemChange().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "HeldItemChange(slot: " + this.slot + ")";
		}

	}
	,

	DisplayScoreboard: class extends Buffer {

		static get ID(){ return 56; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// position
		static get LIST(){ return 0; };
		static get SIDEBAR(){ return 1; };
		static get BELOW_NAME(){ return 2; };

		constructor(position=0, scoreName="") {
			super();
			this.position = position;
			this.scoreName = scoreName;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(56);
			this.writeByte(this.position);
			var dhc5y9z9=this.encodeString(this.score_name);
			this.writeVaruint(dhc5y9z9.length);
			this.writeBytes(dhc5y9z9);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position=this.readByte();
			var dhc5y9z9=this.readVaruint();
			this.score_name=this.decodeString(this.readBytes(dhc5y9z9));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.DisplayScoreboard().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "DisplayScoreboard(position: " + this.position + ", score_name: " + this.score_name + ")";
		}

	}
	,

	EntityMetadata: class extends Buffer {

		static get ID(){ return 57; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, metadata=new Metadata()) {
			super();
			this.entityId = entityId;
			this.metadata = metadata;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(57);
			this.writeVaruint(this.entity_id);
			this.writeBytes(this.metadata.encode());
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.metadata=Metadata.fromBuffer(this._buffer);
			this._buffer=this.metadata._buffer;
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.EntityMetadata().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityMetadata(entity_id: " + this.entity_id + ", metadata: " + this.metadata + ")";
		}

	}
	,

	AttachEntity: class extends Buffer {

		static get ID(){ return 58; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(target=0, holder=0) {
			super();
			this.target = target;
			this.holder = holder;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(58);
			this.writeBigEndianInt(this.target);
			this.writeBigEndianInt(this.holder);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.target=this.readBigEndianInt();
			this.holder=this.readBigEndianInt();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.AttachEntity().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "AttachEntity(target: " + this.target + ", holder: " + this.holder + ")";
		}

	}
	,

	EntityVelocity: class extends Buffer {

		static get ID(){ return 59; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, velocity={x:0,y:0,z:0}) {
			super();
			this.entityId = entityId;
			this.velocity = velocity;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(59);
			this.writeVaruint(this.entity_id);
			this.writeBigEndianShort(this.velocity.x);
			this.writeBigEndianShort(this.velocity.y);
			this.writeBigEndianShort(this.velocity.z);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.velocity={};
			this.velocity.x=this.readBigEndianShort();
			this.velocity.y=this.readBigEndianShort();
			this.velocity.z=this.readBigEndianShort();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.EntityVelocity().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityVelocity(entity_id: " + this.entity_id + ", velocity: " + this.velocity + ")";
		}

	}
	,

	EntityEquipment: class extends Buffer {

		static get ID(){ return 60; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, slot=0, item=null) {
			super();
			this.entityId = entityId;
			this.slot = slot;
			this.item = item;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(60);
			this.writeVaruint(this.entity_id);
			this.writeVaruint(this.slot);
			this.writeBytes(this.item.encode());
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.slot=this.readVaruint();
			this.item=Types.Slot.fromBuffer(this._buffer);
			this._buffer=this.item._buffer;
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.EntityEquipment().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityEquipment(entity_id: " + this.entity_id + ", slot: " + this.slot + ", item: " + this.item + ")";
		}

	}
	,

	SetExperience: class extends Buffer {

		static get ID(){ return 61; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(experience=.0, level=0, totalExperience=0) {
			super();
			this.experience = experience;
			this.level = level;
			this.totalExperience = totalExperience;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(61);
			this.writeBigEndianFloat(this.experience);
			this.writeVaruint(this.level);
			this.writeVaruint(this.total_experience);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.experience=this.readBigEndianFloat();
			this.level=this.readVaruint();
			this.total_experience=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.SetExperience().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetExperience(experience: " + this.experience + ", level: " + this.level + ", total_experience: " + this.total_experience + ")";
		}

	}
	,

	UpdateHealth: class extends Buffer {

		static get ID(){ return 62; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(health=.0, hunger=0, saturation=.0) {
			super();
			this.health = health;
			this.hunger = hunger;
			this.saturation = saturation;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(62);
			this.writeBigEndianFloat(this.health);
			this.writeVaruint(this.hunger);
			this.writeBigEndianFloat(this.saturation);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.health=this.readBigEndianFloat();
			this.hunger=this.readVaruint();
			this.saturation=this.readBigEndianFloat();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.UpdateHealth().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "UpdateHealth(health: " + this.health + ", hunger: " + this.hunger + ", saturation: " + this.saturation + ")";
		}

	}
	,

	ScoreboardObjective: class extends Buffer {

		static get ID(){ return 63; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// mode
		static get CREATE(){ return 0; };
		static get REMOVE(){ return 1; };
		static get UPDATE(){ return 2; };

		// type
		static get NUMERIC(){ return integer; };
		static get GRAPHIC(){ return hearts; };

		constructor(name="", mode=0, value="", type="") {
			super();
			this.name = name;
			this.mode = mode;
			this.value = value;
			this.type = type;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(63);
			var dhc5y1=this.encodeString(this.name);
			this.writeVaruint(dhc5y1.length);
			this.writeBytes(dhc5y1);
			this.writeByte(this.mode);
			if(mode!=1) {
				var dhc5yxz=this.encodeString(this.value);
				this.writeVaruint(dhc5yxz.length);
				this.writeBytes(dhc5yxz);
			}
			if(mode!=1) {
				var dhc5eb=this.encodeString(this.type);
				this.writeVaruint(dhc5eb.length);
				this.writeBytes(dhc5eb);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5y1=this.readVaruint();
			this.name=this.decodeString(this.readBytes(dhc5y1));
			this.mode=this.readByte();
			if(mode!=1) {
				var dhc5yxz=this.readVaruint();
				this.value=this.decodeString(this.readBytes(dhc5yxz));
			}
			if(mode!=1) {
				var dhc5eb=this.readVaruint();
				this.type=this.decodeString(this.readBytes(dhc5eb));
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.ScoreboardObjective().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ScoreboardObjective(name: " + this.name + ", mode: " + this.mode + ", value: " + this.value + ", type: " + this.type + ")";
		}

	}
	,

	SetPassengers: class extends Buffer {

		static get ID(){ return 64; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, passengers=[]) {
			super();
			this.entityId = entityId;
			this.passengers = passengers;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(64);
			this.writeVaruint(this.entity_id);
			this.writeVaruint(this.passengers.length);
			for(var dhc5ynz5 in this.passengers) {
				this.writeVaruint(this.passengers[dhc5ynz5]);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			var aramcfcv=this.readVaruint();
			this.passengers=[];
			for(var dhc5ynz5=0;dhc5ynz5<aramcfcv;dhc5ynz5++) {
				this.passengers[dhc5ynz5]=this.readVaruint();
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.SetPassengers().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetPassengers(entity_id: " + this.entity_id + ", passengers: " + this.passengers + ")";
		}

	}
	,

	Teams: class extends Buffer {

		static get ID(){ return 65; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// mode (variant)
		static get CREATE_TEAM(){ return 0; };
		static get REMOVE_TEAM(){ return 1; };
		static get UPDATE_TEAM_INFO(){ return 2; };
		static get ADD_PLAYERS(){ return 3; };
		static get REMOVE_PLAYERS(){ return 4; };

		constructor(name="", mode=0) {
			super();
			this.name = name;
			this.mode = mode;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(65);
			var dhc5y1=this.encodeString(this.name);
			this.writeVaruint(dhc5y1.length);
			this.writeBytes(dhc5y1);
			this.writeByte(this.mode);
			switch(this.mode) {
				case 0:
					var dhc5y1=this.encodeString(this.name);
					this.writeVaruint(dhc5y1.length);
					this.writeBytes(dhc5y1);
					this.writeByte(this.mode);
					break;
				case 1:
					var dhc5y1=this.encodeString(this.name);
					this.writeVaruint(dhc5y1.length);
					this.writeBytes(dhc5y1);
					this.writeByte(this.mode);
					break;
				case 2:
					var dhc5y1=this.encodeString(this.name);
					this.writeVaruint(dhc5y1.length);
					this.writeBytes(dhc5y1);
					this.writeByte(this.mode);
					break;
				case 3:
					var dhc5y1=this.encodeString(this.name);
					this.writeVaruint(dhc5y1.length);
					this.writeBytes(dhc5y1);
					this.writeByte(this.mode);
					break;
				case 4:
					var dhc5y1=this.encodeString(this.name);
					this.writeVaruint(dhc5y1.length);
					this.writeBytes(dhc5y1);
					this.writeByte(this.mode);
					break;
				default: break;
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5y1=this.readVaruint();
			this.name=this.decodeString(this.readBytes(dhc5y1));
			this.mode=this.readByte();
			switch(this.mode) {
				case 0:
					var dhc5anbf=this.readVaruint();
					this.display_name=this.decodeString(this.readBytes(dhc5anbf));
					var dhc5cvag=this.readVaruint();
					this.prefix=this.decodeString(this.readBytes(dhc5cvag));
					var dhc5dzag=this.readVaruint();
					this.suffix=this.decodeString(this.readBytes(dhc5dzag));
					this.friendly_flags=this.readByte();
					var dhc5y1df=this.readVaruint();
					this.nametag_visibility=this.decodeString(this.readBytes(dhc5y1df));
					var dhc5bxan=this.readVaruint();
					this.collision_rule=this.decodeString(this.readBytes(dhc5bxan));
					this.color=this.readByte();
					var aramcxev=this.readVaruint();
					this.players=[];
					for(var dhc5bfzj=0;dhc5bfzj<aramcxev;dhc5bfzj++) {
						var dhc5bfzj=this.readVaruint();
						this.players[dhc5bfzj]=this.decodeString(this.readBytes(dhc5bfzj));
					}
					break;
				case 1:
					break;
				case 2:
					var dhc5anbf=this.readVaruint();
					this.display_name=this.decodeString(this.readBytes(dhc5anbf));
					var dhc5cvag=this.readVaruint();
					this.prefix=this.decodeString(this.readBytes(dhc5cvag));
					var dhc5dzag=this.readVaruint();
					this.suffix=this.decodeString(this.readBytes(dhc5dzag));
					this.friendly_flags=this.readByte();
					var dhc5y1df=this.readVaruint();
					this.nametag_visibility=this.decodeString(this.readBytes(dhc5y1df));
					var dhc5bxan=this.readVaruint();
					this.collision_rule=this.decodeString(this.readBytes(dhc5bxan));
					this.color=this.readByte();
					break;
				case 3:
					var aramcxev=this.readVaruint();
					this.players=[];
					for(var dhc5bfzj=0;dhc5bfzj<aramcxev;dhc5bfzj++) {
						var dhc5bfzj=this.readVaruint();
						this.players[dhc5bfzj]=this.decodeString(this.readBytes(dhc5bfzj));
					}
					break;
				case 4:
					var aramcxev=this.readVaruint();
					this.players=[];
					for(var dhc5bfzj=0;dhc5bfzj<aramcxev;dhc5bfzj++) {
						var dhc5bfzj=this.readVaruint();
						this.players[dhc5bfzj]=this.decodeString(this.readBytes(dhc5bfzj));
					}
					break;
				default: break;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.Teams().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Teams(name: " + this.name + ", mode: " + this.mode + ")";
		}

	}
	,

	UpdateScore: class extends Buffer {

		static get ID(){ return 66; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// action
		static get UPDATE(){ return 0; };
		static get REMOVE(){ return 1; };

		constructor(scoreName="", action=0, objectiveName="", value=0) {
			super();
			this.scoreName = scoreName;
			this.action = action;
			this.objectiveName = objectiveName;
			this.value = value;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(66);
			var dhc5y9z9=this.encodeString(this.score_name);
			this.writeVaruint(dhc5y9z9.length);
			this.writeBytes(dhc5y9z9);
			this.writeByte(this.action);
			var dhc5ypyr=this.encodeString(this.objective_name);
			this.writeVaruint(dhc5ypyr.length);
			this.writeBytes(dhc5ypyr);
			if(action==0) {
				this.writeVaruint(this.value);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5y9z9=this.readVaruint();
			this.score_name=this.decodeString(this.readBytes(dhc5y9z9));
			this.action=this.readByte();
			var dhc5ypyr=this.readVaruint();
			this.objective_name=this.decodeString(this.readBytes(dhc5ypyr));
			if(action==0) {
				this.value=this.readVaruint();
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.UpdateScore().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "UpdateScore(score_name: " + this.score_name + ", action: " + this.action + ", objective_name: " + this.objective_name + ", value: " + this.value + ")";
		}

	}
	,

	SpawnPosition: class extends Buffer {

		static get ID(){ return 67; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position=0) {
			super();
			this.position = position;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(67);
			this.writeBigEndianLong(this.position);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position=this.readBigEndianLong();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.SpawnPosition().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SpawnPosition(position: " + this.position + ")";
		}

	}
	,

	TimeUpdate: class extends Buffer {

		static get ID(){ return 68; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(worldAge=0, time=0) {
			super();
			this.worldAge = worldAge;
			this.time = time;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(68);
			this.writeBigEndianLong(this.world_age);
			this.writeBigEndianLong(this.time);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.world_age=this.readBigEndianLong();
			this.time=this.readBigEndianLong();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.TimeUpdate().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "TimeUpdate(world_age: " + this.world_age + ", time: " + this.time + ")";
		}

	}
	,

	Title: class extends Buffer {

		static get ID(){ return 69; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// action (variant)
		static get SET_TITLE(){ return 0; };
		static get SET_SUBTITLE(){ return 1; };
		static get SET_ACTION_BAR(){ return 2; };
		static get SET_TIMINGS(){ return 3; };
		static get HIDE(){ return 4; };
		static get RESET(){ return 5; };

		constructor(action=0) {
			super();
			this.action = action;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(69);
			this.writeVaruint(this.action);
			switch(this.action) {
				case 0:
					this.writeVaruint(this.action);
					break;
				case 1:
					this.writeVaruint(this.action);
					break;
				case 2:
					this.writeVaruint(this.action);
					break;
				case 3:
					this.writeVaruint(this.action);
					break;
				case 4:
					this.writeVaruint(this.action);
					break;
				case 5:
					this.writeVaruint(this.action);
					break;
				default: break;
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.action=this.readVaruint();
			switch(this.action) {
				case 0:
					var dhc5zh=this.readVaruint();
					this.text=this.decodeString(this.readBytes(dhc5zh));
					break;
				case 1:
					var dhc5zh=this.readVaruint();
					this.text=this.decodeString(this.readBytes(dhc5zh));
					break;
				case 2:
					var dhc5zh=this.readVaruint();
					this.text=this.decodeString(this.readBytes(dhc5zh));
					break;
				case 3:
					this.fade_in=this.readBigEndianInt();
					this.stay=this.readBigEndianInt();
					this.fade_out=this.readBigEndianInt();
					break;
				case 4:
					break;
				case 5:
					break;
				default: break;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.Title().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Title(action: " + this.action + ")";
		}

	}
	,

	SoundEffect: class extends Buffer {

		static get ID(){ return 70; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(soundId=0, category=0, position={x:0,y:0,z:0}, volume=.0, pitch=.0) {
			super();
			this.soundId = soundId;
			this.category = category;
			this.position = position;
			this.volume = volume;
			this.pitch = pitch;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(70);
			this.writeVaruint(this.sound_id);
			this.writeVaruint(this.category);
			this.writeBigEndianInt(this.position.x);
			this.writeBigEndianInt(this.position.y);
			this.writeBigEndianInt(this.position.z);
			this.writeBigEndianFloat(this.volume);
			this.writeBigEndianFloat(this.pitch);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.sound_id=this.readVaruint();
			this.category=this.readVaruint();
			this.position={};
			this.position.x=this.readBigEndianInt();
			this.position.y=this.readBigEndianInt();
			this.position.z=this.readBigEndianInt();
			this.volume=this.readBigEndianFloat();
			this.pitch=this.readBigEndianFloat();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.SoundEffect().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SoundEffect(sound_id: " + this.sound_id + ", category: " + this.category + ", position: " + this.position + ", volume: " + this.volume + ", pitch: " + this.pitch + ")";
		}

	}
	,

	PlayerListHeaderAndFooter: class extends Buffer {

		static get ID(){ return 71; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(header="", footer="") {
			super();
			this.header = header;
			this.footer = footer;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(71);
			var dhc5zfzi=this.encodeString(this.header);
			this.writeVaruint(dhc5zfzi.length);
			this.writeBytes(dhc5zfzi);
			var dhc5b9zi=this.encodeString(this.footer);
			this.writeVaruint(dhc5b9zi.length);
			this.writeBytes(dhc5b9zi);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5zfzi=this.readVaruint();
			this.header=this.decodeString(this.readBytes(dhc5zfzi));
			var dhc5b9zi=this.readVaruint();
			this.footer=this.decodeString(this.readBytes(dhc5b9zi));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.PlayerListHeaderAndFooter().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PlayerListHeaderAndFooter(header: " + this.header + ", footer: " + this.footer + ")";
		}

	}
	,

	CollectItem: class extends Buffer {

		static get ID(){ return 72; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(collected=0, collector=0, count=0) {
			super();
			this.collected = collected;
			this.collector = collector;
			this.count = count;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(72);
			this.writeVaruint(this.collected);
			this.writeVaruint(this.collector);
			this.writeVaruint(this.count);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.collected=this.readVaruint();
			this.collector=this.readVaruint();
			this.count=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.CollectItem().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "CollectItem(collected: " + this.collected + ", collector: " + this.collector + ", count: " + this.count + ")";
		}

	}
	,

	EntityTeleport: class extends Buffer {

		static get ID(){ return 73; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, position={x:0,y:0,z:0}, yaw=0, pitch=0, onGround=false) {
			super();
			this.entityId = entityId;
			this.position = position;
			this.yaw = yaw;
			this.pitch = pitch;
			this.onGround = onGround;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(73);
			this.writeVaruint(this.entity_id);
			this.writeBigEndianDouble(this.position.x);
			this.writeBigEndianDouble(this.position.y);
			this.writeBigEndianDouble(this.position.z);
			this.writeByte(this.yaw);
			this.writeByte(this.pitch);
			this.writeBool(this.on_ground);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.position={};
			this.position.x=this.readBigEndianDouble();
			this.position.y=this.readBigEndianDouble();
			this.position.z=this.readBigEndianDouble();
			this.yaw=this.readByte();
			this.pitch=this.readByte();
			this.on_ground=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.EntityTeleport().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityTeleport(entity_id: " + this.entity_id + ", position: " + this.position + ", yaw: " + this.yaw + ", pitch: " + this.pitch + ", on_ground: " + this.on_ground + ")";
		}

	}
	,

	EntityProperties: class extends Buffer {

		static get ID(){ return 74; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, attributes=null) {
			super();
			this.entityId = entityId;
			this.attributes = attributes;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(74);
			this.writeVaruint(this.entity_id);
			this.writeBigEndianInt(this.attributes.length);
			for(var dhc5draj in this.attributes) {
				this.writeBytes(this.attributes[dhc5draj].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			var aramyrcl=this.readBigEndianInt();
			this.attributes=[];
			for(var dhc5draj=0;dhc5draj<aramyrcl;dhc5draj++) {
				this.attributes[dhc5draj]=Types.Attribute.fromBuffer(this._buffer);
				this._buffer=this.attributes[dhc5draj]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.EntityProperties().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityProperties(entity_id: " + this.entity_id + ", attributes: " + this.attributes + ")";
		}

	}
	,

	EntityEffect: class extends Buffer {

		static get ID(){ return 75; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// flags
		static get AMBIENT(){ return 1; };
		static get SHOW_PARTICLES(){ return 2; };

		constructor(entityId=0, effectId=0, amplifier=0, duration=0, flags=0) {
			super();
			this.entityId = entityId;
			this.effectId = effectId;
			this.amplifier = amplifier;
			this.duration = duration;
			this.flags = flags;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(75);
			this.writeVaruint(this.entity_id);
			this.writeByte(this.effect_id);
			this.writeByte(this.amplifier);
			this.writeVaruint(this.duration);
			this.writeByte(this.flags);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVaruint();
			this.effect_id=this.readByte();
			this.amplifier=this.readByte();
			this.duration=this.readVaruint();
			this.flags=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Clientbound.EntityEffect().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityEffect(entity_id: " + this.entity_id + ", effect_id: " + this.effect_id + ", amplifier: " + this.amplifier + ", duration: " + this.duration + ", flags: " + this.flags + ")";
		}

	}

}