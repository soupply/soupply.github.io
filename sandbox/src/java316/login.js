/*
 * This file has been automatically generated by Soupply and released under the MIT license.
 * Generated from data/java316.xml
 */
// module soupply.java316.login;

const Login = {

	Disconnect: class extends Buffer {

		static get ID(){ return 0; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(reason="") {
			super();
			this.reason = reason;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(0);
			var dhc5zfb4=this.encodeString(this.reason);
			this.writeVaruint(dhc5zfb4.length);
			this.writeBytes(dhc5zfb4);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5zfb4=this.readVaruint();
			this.reason=this.decodeString(this.readBytes(dhc5zfb4));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Login.Disconnect().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Disconnect(reason: " + this.reason + ")";
		}

	}
	,

	LoginStart: class extends Buffer {

		static get ID(){ return 0; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(username="") {
			super();
			this.username = username;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(0);
			var dhc5cvbf=this.encodeString(this.username);
			this.writeVaruint(dhc5cvbf.length);
			this.writeBytes(dhc5cvbf);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5cvbf=this.readVaruint();
			this.username=this.decodeString(this.readBytes(dhc5cvbf));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Login.LoginStart().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "LoginStart(username: " + this.username + ")";
		}

	}
	,

	EncryptionRequest: class extends Buffer {

		static get ID(){ return 1; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(serverId="", publicKey=[], verifyToken=[]) {
			super();
			this.serverId = serverId;
			this.publicKey = publicKey;
			this.verifyToken = verifyToken;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(1);
			var dhc5zjzj=this.encodeString(this.server_id);
			this.writeVaruint(dhc5zjzj.length);
			this.writeBytes(dhc5zjzj);
			this.writeVaruint(this.public_key.length);
			this.writeBytes(this.public_key);
			this.writeVaruint(this.verify_token.length);
			this.writeBytes(this.verify_token);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5zjzj=this.readVaruint();
			this.server_id=this.decodeString(this.readBytes(dhc5zjzj));
			var aramcvbl=this.readVaruint();
			this.public_key=this.readBytes(aramcvbl);
			var aramdvaz=this.readVaruint();
			this.verify_token=this.readBytes(aramdvaz);
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Login.EncryptionRequest().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EncryptionRequest(server_id: " + this.server_id + ", public_key: " + this.public_key + ", verify_token: " + this.verify_token + ")";
		}

	}
	,

	EncryptionResponse: class extends Buffer {

		static get ID(){ return 1; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(sharedSecret=[], verifyToken=[]) {
			super();
			this.sharedSecret = sharedSecret;
			this.verifyToken = verifyToken;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(1);
			this.writeVaruint(this.shared_secret.length);
			this.writeBytes(this.shared_secret);
			this.writeVaruint(this.verify_token.length);
			this.writeBytes(this.verify_token);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var aramchcv=this.readVaruint();
			this.shared_secret=this.readBytes(aramchcv);
			var aramdvaz=this.readVaruint();
			this.verify_token=this.readBytes(aramdvaz);
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Login.EncryptionResponse().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EncryptionResponse(shared_secret: " + this.shared_secret + ", verify_token: " + this.verify_token + ")";
		}

	}
	,

	LoginSuccess: class extends Buffer {

		static get ID(){ return 2; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(uuid="", username="") {
			super();
			this.uuid = uuid;
			this.username = username;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(2);
			var dhc5dl=this.encodeString(this.uuid);
			this.writeVaruint(dhc5dl.length);
			this.writeBytes(dhc5dl);
			var dhc5cvbf=this.encodeString(this.username);
			this.writeVaruint(dhc5cvbf.length);
			this.writeBytes(dhc5cvbf);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5dl=this.readVaruint();
			this.uuid=this.decodeString(this.readBytes(dhc5dl));
			var dhc5cvbf=this.readVaruint();
			this.username=this.decodeString(this.readBytes(dhc5cvbf));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Login.LoginSuccess().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "LoginSuccess(uuid: " + this.uuid + ", username: " + this.username + ")";
		}

	}
	,

	SetCompression: class extends Buffer {

		static get ID(){ return 3; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(thresold=0) {
			super();
			this.thresold = thresold;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(3);
			this.writeVaruint(this.thresold);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.thresold=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Login.SetCompression().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetCompression(thresold: " + this.thresold + ")";
		}

	}

}