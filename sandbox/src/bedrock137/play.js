/*
 * This file has been automatically generated by Soupply and released under the MIT license.
 * Generated from data/bedrock137.xml
 */
// module soupply.bedrock137.play;

const Play = {

	Login: class extends Buffer {

		static get ID(){ return 1; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(protocol=137, body=null) {
			super();
			this.protocol = protocol;
			this.body = body;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(1);
			this.writeBigEndianInt(this.protocol);
			this.writeBytes(this.body.encode());
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.protocol=this.readBigEndianInt();
			this.body=Types.LoginBody.fromBuffer(this._buffer);
			this._buffer=this.body._buffer;
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.Login().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Login(protocol: " + this.protocol + ", body: " + this.body + ")";
		}

	}
	,

	PlayStatus: class extends Buffer {

		static get ID(){ return 2; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// status
		static get OK(){ return 0; };
		static get OUTDATED_CLIENT(){ return 1; };
		static get OUTDATED_SERVER(){ return 2; };
		static get SPAWNED(){ return 3; };
		static get INVALID_TENANT(){ return 4; };
		static get EDITION_MISMATCH_EDU_TO_VANILLA(){ return 5; };
		static get EDITION_MISMATCH_VANILLA_TO_EDU(){ return 6; };

		constructor(status=0) {
			super();
			this.status = status;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(2);
			this.writeBigEndianInt(this.status);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.status=this.readBigEndianInt();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.PlayStatus().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PlayStatus(status: " + this.status + ")";
		}

	}
	,

	ServerToClientHandshake: class extends Buffer {

		static get ID(){ return 3; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(serverPublicKey="", token=[]) {
			super();
			this.serverPublicKey = serverPublicKey;
			this.token = token;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(3);
			var dhc5zjzj=this.encodeString(this.server_public_key);
			this.writeVaruint(dhc5zjzj.length);
			this.writeBytes(dhc5zjzj);
			this.writeVaruint(this.token.length);
			this.writeBytes(this.token);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5zjzj=this.readVaruint();
			this.server_public_key=this.decodeString(this.readBytes(dhc5zjzj));
			var aramd9z4=this.readVaruint();
			this.token=this.readBytes(aramd9z4);
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ServerToClientHandshake().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ServerToClientHandshake(server_public_key: " + this.server_public_key + ", token: " + this.token + ")";
		}

	}
	,

	ClientToServerHandshake: class extends Buffer {

		static get ID(){ return 4; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor() {
			super();
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(4);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ClientToServerHandshake().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ClientToServerHandshake()";
		}

	}
	,

	Disconnect: class extends Buffer {

		static get ID(){ return 5; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(hideDisconnectionScreen=false, message="") {
			super();
			this.hideDisconnectionScreen = hideDisconnectionScreen;
			this.message = message;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(5);
			this.writeBool(this.hide_disconnection_screen);
			if(hideDisconnectionScreen==false) {
				var dhc5znyd=this.encodeString(this.message);
				this.writeVaruint(dhc5znyd.length);
				this.writeBytes(dhc5znyd);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.hide_disconnection_screen=this.readBool();
			if(hideDisconnectionScreen==false) {
				var dhc5znyd=this.readVaruint();
				this.message=this.decodeString(this.readBytes(dhc5znyd));
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.Disconnect().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Disconnect(hide_disconnection_screen: " + this.hide_disconnection_screen + ", message: " + this.message + ")";
		}

	}
	,

	ResourcePacksInfo: class extends Buffer {

		static get ID(){ return 6; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(mustAccept=false, behaviourPacks=null, resourcePacks=null) {
			super();
			this.mustAccept = mustAccept;
			this.behaviourPacks = behaviourPacks;
			this.resourcePacks = resourcePacks;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(6);
			this.writeBool(this.must_accept);
			this.writeBigEndianShort(this.behaviour_packs.length);
			for(var dhc5zhdl in this.behaviour_packs) {
				this.writeBytes(this.behaviour_packs[dhc5zhdl].encode());
			}
			this.writeBigEndianShort(this.resource_packs.length);
			for(var dhc5zndj in this.resource_packs) {
				this.writeBytes(this.resource_packs[dhc5zndj].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.must_accept=this.readBool();
			var aramyvyz=this.readBigEndianShort();
			this.behaviour_packs=[];
			for(var dhc5zhdl=0;dhc5zhdl<aramyvyz;dhc5zhdl++) {
				this.behaviour_packs[dhc5zhdl]=Types.PackWithSize.fromBuffer(this._buffer);
				this._buffer=this.behaviour_packs[dhc5zhdl]._buffer;
			}
			var aramcvbv=this.readBigEndianShort();
			this.resource_packs=[];
			for(var dhc5zndj=0;dhc5zndj<aramcvbv;dhc5zndj++) {
				this.resource_packs[dhc5zndj]=Types.PackWithSize.fromBuffer(this._buffer);
				this._buffer=this.resource_packs[dhc5zndj]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ResourcePacksInfo().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ResourcePacksInfo(must_accept: " + this.must_accept + ", behaviour_packs: " + this.behaviour_packs + ", resource_packs: " + this.resource_packs + ")";
		}

	}
	,

	ResourcePacksStackPacket: class extends Buffer {

		static get ID(){ return 7; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(mustAccept=false, behaviourPacks=[], resourcePacks=[]) {
			super();
			this.mustAccept = mustAccept;
			this.behaviourPacks = behaviourPacks;
			this.resourcePacks = resourcePacks;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(7);
			this.writeBool(this.must_accept);
			this.writeVaruint(this.behaviour_packs.length);
			for(var dhc5zhdl in this.behaviour_packs) {
				this.writeBytes(this.behaviour_packs[dhc5zhdl].encode());
			}
			this.writeVaruint(this.resource_packs.length);
			for(var dhc5zndj in this.resource_packs) {
				this.writeBytes(this.resource_packs[dhc5zndj].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.must_accept=this.readBool();
			var aramyvyz=this.readVaruint();
			this.behaviour_packs=[];
			for(var dhc5zhdl=0;dhc5zhdl<aramyvyz;dhc5zhdl++) {
				this.behaviour_packs[dhc5zhdl]=Types.Pack.fromBuffer(this._buffer);
				this._buffer=this.behaviour_packs[dhc5zhdl]._buffer;
			}
			var aramcvbv=this.readVaruint();
			this.resource_packs=[];
			for(var dhc5zndj=0;dhc5zndj<aramcvbv;dhc5zndj++) {
				this.resource_packs[dhc5zndj]=Types.Pack.fromBuffer(this._buffer);
				this._buffer=this.resource_packs[dhc5zndj]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ResourcePacksStackPacket().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ResourcePacksStackPacket(must_accept: " + this.must_accept + ", behaviour_packs: " + this.behaviour_packs + ", resource_packs: " + this.resource_packs + ")";
		}

	}
	,

	ResourcePackClientResponse: class extends Buffer {

		static get ID(){ return 8; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		// status
		static get REFUSED(){ return 1; };
		static get SEND_PACKS(){ return 2; };
		static get HAVE_ALL_PACKS(){ return 3; };
		static get COMPLETED(){ return 4; };

		constructor(status=0, packIds=null) {
			super();
			this.status = status;
			this.packIds = packIds;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(8);
			this.writeByte(this.status);
			this.writeLittleEndianShort(this.pack_ids.length);
			for(var dhc5ynxl in this.pack_ids) {
				var dhc5ynxl=this.encodeString(this.pack_ids[dhc5ynxl]);
				this.writeVaruint(dhc5ynxl.length);
				this.writeBytes(dhc5ynxl);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.status=this.readByte();
			var aramcfa9=this.readLittleEndianShort();
			this.pack_ids=[];
			for(var dhc5ynxl=0;dhc5ynxl<aramcfa9;dhc5ynxl++) {
				var dhc5ynxl=this.readVaruint();
				this.pack_ids[dhc5ynxl]=this.decodeString(this.readBytes(dhc5ynxl));
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ResourcePackClientResponse().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ResourcePackClientResponse(status: " + this.status + ", pack_ids: " + this.pack_ids + ")";
		}

	}
	,

	Text: class extends Buffer {

		static get ID(){ return 9; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		// type (variant)
		static get RAW(){ return 0; };
		static get CHAT(){ return 1; };
		static get TRANSLATION(){ return 2; };
		static get POPUP(){ return 3; };
		static get JUKEBOX_POPUP(){ return 4; };
		static get TIP(){ return 5; };
		static get SYSTEM(){ return 6; };
		static get WHISPER(){ return 7; };
		static get ANNOUNCEMENT(){ return 8; };

		constructor(type=0, unknown1=false) {
			super();
			this.type = type;
			this.unknown1 = unknown1;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(9);
			this.writeByte(this.type);
			this.writeBool(this.unknown1);
			switch(this.type) {
				case 0:
					this.writeByte(this.type);
					this.writeBool(this.unknown3);
					break;
				case 1:
					this.writeByte(this.type);
					this.writeBool(this.unknown3);
					break;
				case 2:
					this.writeByte(this.type);
					this.writeBool(this.unknown3);
					break;
				case 3:
					this.writeByte(this.type);
					this.writeBool(this.unknown3);
					break;
				case 4:
					this.writeByte(this.type);
					this.writeBool(this.unknown3);
					break;
				case 5:
					this.writeByte(this.type);
					this.writeBool(this.unknown3);
					break;
				case 6:
					this.writeByte(this.type);
					this.writeBool(this.unknown3);
					break;
				case 7:
					this.writeByte(this.type);
					this.writeBool(this.unknown3);
					break;
				case 8:
					this.writeByte(this.type);
					this.writeBool(this.unknown3);
					break;
				default: break;
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.type=this.readByte();
			this.unknown1=this.readBool();
			switch(this.type) {
				case 0:
					var dhc5znyd=this.readVaruint();
					this.message=this.decodeString(this.readBytes(dhc5znyd));
					var dhc5dl=this.readVaruint();
					this.xuid=this.decodeString(this.readBytes(dhc5dl));
					break;
				case 1:
					var dhc5z5zi=this.readVaruint();
					this.sender=this.decodeString(this.readBytes(dhc5z5zi));
					var dhc5znyd=this.readVaruint();
					this.message=this.decodeString(this.readBytes(dhc5znyd));
					var dhc5dl=this.readVaruint();
					this.xuid=this.decodeString(this.readBytes(dhc5dl));
					break;
				case 2:
					var dhc5znyd=this.readVaruint();
					this.message=this.decodeString(this.readBytes(dhc5znyd));
					var aramcfy1=this.readVaruint();
					this.parameters=[];
					for(var dhc5yjbv=0;dhc5yjbv<aramcfy1;dhc5yjbv++) {
						var dhc5yjbv=this.readVaruint();
						this.parameters[dhc5yjbv]=this.decodeString(this.readBytes(dhc5yjbv));
					}
					break;
				case 3:
					var dhc5arz=this.readVaruint();
					this.title=this.decodeString(this.readBytes(dhc5arz));
					var dhc5djar=this.readVaruint();
					this.subtitle=this.decodeString(this.readBytes(dhc5djar));
					break;
				case 4:
					var dhc5znyd=this.readVaruint();
					this.message=this.decodeString(this.readBytes(dhc5znyd));
					var aramcfy1=this.readVaruint();
					this.parameters=[];
					for(var dhc5yjbv=0;dhc5yjbv<aramcfy1;dhc5yjbv++) {
						var dhc5yjbv=this.readVaruint();
						this.parameters[dhc5yjbv]=this.decodeString(this.readBytes(dhc5yjbv));
					}
					break;
				case 5:
					var dhc5znyd=this.readVaruint();
					this.message=this.decodeString(this.readBytes(dhc5znyd));
					break;
				case 6:
					var dhc5znyd=this.readVaruint();
					this.message=this.decodeString(this.readBytes(dhc5znyd));
					break;
				case 7:
					var dhc5z5zi=this.readVaruint();
					this.sender=this.decodeString(this.readBytes(dhc5z5zi));
					var dhc5znyd=this.readVaruint();
					this.message=this.decodeString(this.readBytes(dhc5znyd));
					break;
				case 8:
					var dhc5b5d5=this.readVaruint();
					this.announcer=this.decodeString(this.readBytes(dhc5b5d5));
					var dhc5znyd=this.readVaruint();
					this.message=this.decodeString(this.readBytes(dhc5znyd));
					break;
				default: break;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.Text().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Text(type: " + this.type + ", unknown1: " + this.unknown1 + ")";
		}

	}
	,

	SetTime: class extends Buffer {

		static get ID(){ return 10; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(time=0) {
			super();
			this.time = time;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(10);
			this.writeVarint(this.time);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.time=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SetTime().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetTime(time: " + this.time + ")";
		}

	}
	,

	StartGame: class extends Buffer {

		static get ID(){ return 11; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// gamemode
		static get SURVIVAL(){ return 0; };
		static get CREATIVE(){ return 1; };
		static get ADVENTURE(){ return 2; };

		// dimension
		static get OVERWORLD(){ return 0; };
		static get NETHER(){ return 1; };
		static get END(){ return 2; };

		// generator
		static get OLD(){ return 0; };
		static get INFINITE(){ return 1; };
		static get FLAT(){ return 2; };

		// difficulty
		static get PEACEFUL(){ return 0; };
		static get EASY(){ return 1; };
		static get NORMAL(){ return 2; };
		static get HARD(){ return 3; };

		// version
		static get VANILLA(){ return 0; };
		static get EDUCATION(){ return 1; };

		constructor(entityId=0, runtimeId=0, gamemode=0, position={x:0,y:0,z:0}, yaw=.0, pitch=.0, seed=0, dimension=0, generator=1, worldGamemode=0, difficulty=0, spawnPosition={x:0,y:0,z:0}, loadedInCreative=false, time=0, version=0, rainLevel=.0, lightningLevel=.0, multiplayerGame=true, broadcastToLan=false, broadcastToXbl=false, commandsEnabled=false, textureRequired=false, gameRules=[], bonusChestEnabled=false, startWithMapEnabled=false, trustPlayersEnabled=false, permissionLevel=0, unknown27=0, levelId="", worldName="", premiumWorldTemplate="", unknown31=false, worldTicks=0, unknown33=0) {
			super();
			this.entityId = entityId;
			this.runtimeId = runtimeId;
			this.gamemode = gamemode;
			this.position = position;
			this.yaw = yaw;
			this.pitch = pitch;
			this.seed = seed;
			this.dimension = dimension;
			this.generator = generator;
			this.worldGamemode = worldGamemode;
			this.difficulty = difficulty;
			this.spawnPosition = spawnPosition;
			this.loadedInCreative = loadedInCreative;
			this.time = time;
			this.version = version;
			this.rainLevel = rainLevel;
			this.lightningLevel = lightningLevel;
			this.multiplayerGame = multiplayerGame;
			this.broadcastToLan = broadcastToLan;
			this.broadcastToXbl = broadcastToXbl;
			this.commandsEnabled = commandsEnabled;
			this.textureRequired = textureRequired;
			this.gameRules = gameRules;
			this.bonusChestEnabled = bonusChestEnabled;
			this.startWithMapEnabled = startWithMapEnabled;
			this.trustPlayersEnabled = trustPlayersEnabled;
			this.permissionLevel = permissionLevel;
			this.unknown27 = unknown27;
			this.levelId = levelId;
			this.worldName = worldName;
			this.premiumWorldTemplate = premiumWorldTemplate;
			this.unknown31 = unknown31;
			this.worldTicks = worldTicks;
			this.unknown33 = unknown33;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(11);
			this.writeVarlong(this.entity_id);
			this.writeVarulong(this.runtime_id);
			this.writeVarint(this.gamemode);
			this.writeLittleEndianFloat(this.position.x);
			this.writeLittleEndianFloat(this.position.y);
			this.writeLittleEndianFloat(this.position.z);
			this.writeLittleEndianFloat(this.yaw);
			this.writeLittleEndianFloat(this.pitch);
			this.writeVarint(this.seed);
			this.writeVarint(this.dimension);
			this.writeVarint(this.generator);
			this.writeVarint(this.world_gamemode);
			this.writeVarint(this.difficulty);
			this.writeVarint(this.spawn_position.x);
			this.writeVarint(this.spawn_position.y);
			this.writeVarint(this.spawn_position.z);
			this.writeBool(this.loaded_in_creative);
			this.writeVarint(this.time);
			this.writeByte(this.version);
			this.writeLittleEndianFloat(this.rain_level);
			this.writeLittleEndianFloat(this.lightning_level);
			this.writeBool(this.multiplayer_game);
			this.writeBool(this.broadcast_to_lan);
			this.writeBool(this.broadcast_to_xbl);
			this.writeBool(this.commands_enabled);
			this.writeBool(this.texture_required);
			this.writeVaruint(this.game_rules.length);
			for(var dhc5y1xj in this.game_rules) {
				this.writeBytes(this.game_rules[dhc5y1xj].encode());
			}
			this.writeBool(this.bonus_chest_enabled);
			this.writeBool(this.start_with_map_enabled);
			this.writeBool(this.trust_players_enabled);
			this.writeVarint(this.permission_level);
			this.writeVarint(this.unknown27);
			var dhc5zzb9=this.encodeString(this.level_id);
			this.writeVaruint(dhc5zzb9.length);
			this.writeBytes(dhc5zzb9);
			var dhc5bjz9=this.encodeString(this.world_name);
			this.writeVaruint(dhc5bjz9.length);
			this.writeBytes(dhc5bjz9);
			var dhc5cvav=this.encodeString(this.premium_world_template);
			this.writeVaruint(dhc5cvav.length);
			this.writeBytes(dhc5cvav);
			this.writeBool(this.unknown31);
			this.writeLittleEndianLong(this.world_ticks);
			this.writeVarint(this.unknown33);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.runtime_id=this.readVarulong();
			this.gamemode=this.readVarint();
			this.position={};
			this.position.x=this.readLittleEndianFloat();
			this.position.y=this.readLittleEndianFloat();
			this.position.z=this.readLittleEndianFloat();
			this.yaw=this.readLittleEndianFloat();
			this.pitch=this.readLittleEndianFloat();
			this.seed=this.readVarint();
			this.dimension=this.readVarint();
			this.generator=this.readVarint();
			this.world_gamemode=this.readVarint();
			this.difficulty=this.readVarint();
			this.spawn_position={};
			this.spawn_position.x=this.readVarint();
			this.spawn_position.y=this.readVarint();
			this.spawn_position.z=this.readVarint();
			this.loaded_in_creative=this.readBool();
			this.time=this.readVarint();
			this.version=this.readByte();
			this.rain_level=this.readLittleEndianFloat();
			this.lightning_level=this.readLittleEndianFloat();
			this.multiplayer_game=this.readBool();
			this.broadcast_to_lan=this.readBool();
			this.broadcast_to_xbl=this.readBool();
			this.commands_enabled=this.readBool();
			this.texture_required=this.readBool();
			var aramzfz9=this.readVaruint();
			this.game_rules=[];
			for(var dhc5y1xj=0;dhc5y1xj<aramzfz9;dhc5y1xj++) {
				this.game_rules[dhc5y1xj]=Types.Rule.fromBuffer(this._buffer);
				this._buffer=this.game_rules[dhc5y1xj]._buffer;
			}
			this.bonus_chest_enabled=this.readBool();
			this.start_with_map_enabled=this.readBool();
			this.trust_players_enabled=this.readBool();
			this.permission_level=this.readVarint();
			this.unknown27=this.readVarint();
			var dhc5zzb9=this.readVaruint();
			this.level_id=this.decodeString(this.readBytes(dhc5zzb9));
			var dhc5bjz9=this.readVaruint();
			this.world_name=this.decodeString(this.readBytes(dhc5bjz9));
			var dhc5cvav=this.readVaruint();
			this.premium_world_template=this.decodeString(this.readBytes(dhc5cvav));
			this.unknown31=this.readBool();
			this.world_ticks=this.readLittleEndianLong();
			this.unknown33=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.StartGame().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "StartGame(entity_id: " + this.entity_id + ", runtime_id: " + this.runtime_id + ", gamemode: " + this.gamemode + ", position: " + this.position + ", yaw: " + this.yaw + ", pitch: " + this.pitch + ", seed: " + this.seed + ", dimension: " + this.dimension + ", generator: " + this.generator + ", world_gamemode: " + this.world_gamemode + ", difficulty: " + this.difficulty + ", spawn_position: " + this.spawn_position + ", loaded_in_creative: " + this.loaded_in_creative + ", time: " + this.time + ", version: " + this.version + ", rain_level: " + this.rain_level + ", lightning_level: " + this.lightning_level + ", multiplayer_game: " + this.multiplayer_game + ", broadcast_to_lan: " + this.broadcast_to_lan + ", broadcast_to_xbl: " + this.broadcast_to_xbl + ", commands_enabled: " + this.commands_enabled + ", texture_required: " + this.texture_required + ", game_rules: " + this.game_rules + ", bonus_chest_enabled: " + this.bonus_chest_enabled + ", start_with_map_enabled: " + this.start_with_map_enabled + ", trust_players_enabled: " + this.trust_players_enabled + ", permission_level: " + this.permission_level + ", unknown27: " + this.unknown27 + ", level_id: " + this.level_id + ", world_name: " + this.world_name + ", premium_world_template: " + this.premium_world_template + ", unknown31: " + this.unknown31 + ", world_ticks: " + this.world_ticks + ", unknown33: " + this.unknown33 + ")";
		}

	}
	,

	AddPlayer: class extends Buffer {

		static get ID(){ return 12; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(uuid=null, username="", entityId=0, runtimeId=0, position={x:0,y:0,z:0}, motion={x:0,y:0,z:0}, pitch=.0, headYaw=.0, yaw=.0, heldItem=null, metadata=new Metadata(), unknown11=0, unknown12=0, unknown13=0, unknown14=0, unknown15=0, unknown16=0, links=[]) {
			super();
			this.uuid = uuid;
			this.username = username;
			this.entityId = entityId;
			this.runtimeId = runtimeId;
			this.position = position;
			this.motion = motion;
			this.pitch = pitch;
			this.headYaw = headYaw;
			this.yaw = yaw;
			this.heldItem = heldItem;
			this.metadata = metadata;
			this.unknown11 = unknown11;
			this.unknown12 = unknown12;
			this.unknown13 = unknown13;
			this.unknown14 = unknown14;
			this.unknown15 = unknown15;
			this.unknown16 = unknown16;
			this.links = links;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(12);
			this.writeBytes(this.uuid.encode());
			var dhc5cvbf=this.encodeString(this.username);
			this.writeVaruint(dhc5cvbf.length);
			this.writeBytes(dhc5cvbf);
			this.writeVarlong(this.entity_id);
			this.writeVarulong(this.runtime_id);
			this.writeLittleEndianFloat(this.position.x);
			this.writeLittleEndianFloat(this.position.y);
			this.writeLittleEndianFloat(this.position.z);
			this.writeLittleEndianFloat(this.motion.x);
			this.writeLittleEndianFloat(this.motion.y);
			this.writeLittleEndianFloat(this.motion.z);
			this.writeLittleEndianFloat(this.pitch);
			this.writeLittleEndianFloat(this.head_yaw);
			this.writeLittleEndianFloat(this.yaw);
			this.writeBytes(this.held_item.encode());
			this.writeBytes(this.metadata.encode());
			this.writeVaruint(this.unknown11);
			this.writeVaruint(this.unknown12);
			this.writeVaruint(this.unknown13);
			this.writeVaruint(this.unknown14);
			this.writeVaruint(this.unknown15);
			this.writeLittleEndianLong(this.unknown16);
			this.writeVaruint(this.links.length);
			for(var dhc5a5c in this.links) {
				this.writeBytes(this.links[dhc5a5c].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.uuid=Types.McpeUuid.fromBuffer(this._buffer);
			this._buffer=this.uuid._buffer;
			var dhc5cvbf=this.readVaruint();
			this.username=this.decodeString(this.readBytes(dhc5cvbf));
			this.entity_id=this.readVarlong();
			this.runtime_id=this.readVarulong();
			this.position={};
			this.position.x=this.readLittleEndianFloat();
			this.position.y=this.readLittleEndianFloat();
			this.position.z=this.readLittleEndianFloat();
			this.motion={};
			this.motion.x=this.readLittleEndianFloat();
			this.motion.y=this.readLittleEndianFloat();
			this.motion.z=this.readLittleEndianFloat();
			this.pitch=this.readLittleEndianFloat();
			this.head_yaw=this.readLittleEndianFloat();
			this.yaw=this.readLittleEndianFloat();
			this.held_item=Types.Slot.fromBuffer(this._buffer);
			this._buffer=this.held_item._buffer;
			this.metadata=Metadata.fromBuffer(this._buffer);
			this._buffer=this.metadata._buffer;
			this.unknown11=this.readVaruint();
			this.unknown12=this.readVaruint();
			this.unknown13=this.readVaruint();
			this.unknown14=this.readVaruint();
			this.unknown15=this.readVaruint();
			this.unknown16=this.readLittleEndianLong();
			var aramblam=this.readVaruint();
			this.links=[];
			for(var dhc5a5c=0;dhc5a5c<aramblam;dhc5a5c++) {
				this.links[dhc5a5c]=Types.Link.fromBuffer(this._buffer);
				this._buffer=this.links[dhc5a5c]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.AddPlayer().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "AddPlayer(uuid: " + this.uuid + ", username: " + this.username + ", entity_id: " + this.entity_id + ", runtime_id: " + this.runtime_id + ", position: " + this.position + ", motion: " + this.motion + ", pitch: " + this.pitch + ", head_yaw: " + this.head_yaw + ", yaw: " + this.yaw + ", held_item: " + this.held_item + ", metadata: " + this.metadata + ", unknown11: " + this.unknown11 + ", unknown12: " + this.unknown12 + ", unknown13: " + this.unknown13 + ", unknown14: " + this.unknown14 + ", unknown15: " + this.unknown15 + ", unknown16: " + this.unknown16 + ", links: " + this.links + ")";
		}

	}
	,

	AddEntity: class extends Buffer {

		static get ID(){ return 13; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, runtimeId=0, type=0, position={x:0,y:0,z:0}, motion={x:0,y:0,z:0}, pitch=.0, yaw=.0, attributes=[], metadata=new Metadata(), links=[]) {
			super();
			this.entityId = entityId;
			this.runtimeId = runtimeId;
			this.type = type;
			this.position = position;
			this.motion = motion;
			this.pitch = pitch;
			this.yaw = yaw;
			this.attributes = attributes;
			this.metadata = metadata;
			this.links = links;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(13);
			this.writeVarlong(this.entity_id);
			this.writeVarulong(this.runtime_id);
			this.writeVaruint(this.type);
			this.writeLittleEndianFloat(this.position.x);
			this.writeLittleEndianFloat(this.position.y);
			this.writeLittleEndianFloat(this.position.z);
			this.writeLittleEndianFloat(this.motion.x);
			this.writeLittleEndianFloat(this.motion.y);
			this.writeLittleEndianFloat(this.motion.z);
			this.writeLittleEndianFloat(this.pitch);
			this.writeLittleEndianFloat(this.yaw);
			this.writeVaruint(this.attributes.length);
			for(var dhc5draj in this.attributes) {
				this.writeBytes(this.attributes[dhc5draj].encode());
			}
			this.writeBytes(this.metadata.encode());
			this.writeVaruint(this.links.length);
			for(var dhc5a5c in this.links) {
				this.writeBytes(this.links[dhc5a5c].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.runtime_id=this.readVarulong();
			this.type=this.readVaruint();
			this.position={};
			this.position.x=this.readLittleEndianFloat();
			this.position.y=this.readLittleEndianFloat();
			this.position.z=this.readLittleEndianFloat();
			this.motion={};
			this.motion.x=this.readLittleEndianFloat();
			this.motion.y=this.readLittleEndianFloat();
			this.motion.z=this.readLittleEndianFloat();
			this.pitch=this.readLittleEndianFloat();
			this.yaw=this.readLittleEndianFloat();
			var aramyrcl=this.readVaruint();
			this.attributes=[];
			for(var dhc5draj=0;dhc5draj<aramyrcl;dhc5draj++) {
				this.attributes[dhc5draj]=Types.Attribute.fromBuffer(this._buffer);
				this._buffer=this.attributes[dhc5draj]._buffer;
			}
			this.metadata=Metadata.fromBuffer(this._buffer);
			this._buffer=this.metadata._buffer;
			var aramblam=this.readVaruint();
			this.links=[];
			for(var dhc5a5c=0;dhc5a5c<aramblam;dhc5a5c++) {
				this.links[dhc5a5c]=Types.Link.fromBuffer(this._buffer);
				this._buffer=this.links[dhc5a5c]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.AddEntity().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "AddEntity(entity_id: " + this.entity_id + ", runtime_id: " + this.runtime_id + ", type: " + this.type + ", position: " + this.position + ", motion: " + this.motion + ", pitch: " + this.pitch + ", yaw: " + this.yaw + ", attributes: " + this.attributes + ", metadata: " + this.metadata + ", links: " + this.links + ")";
		}

	}
	,

	RemoveEntity: class extends Buffer {

		static get ID(){ return 14; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0) {
			super();
			this.entityId = entityId;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(14);
			this.writeVarlong(this.entity_id);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.RemoveEntity().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "RemoveEntity(entity_id: " + this.entity_id + ")";
		}

	}
	,

	AddItemEntity: class extends Buffer {

		static get ID(){ return 15; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, runtimeId=0, item=null, position={x:0,y:0,z:0}, motion={x:0,y:0,z:0}, metadata=new Metadata()) {
			super();
			this.entityId = entityId;
			this.runtimeId = runtimeId;
			this.item = item;
			this.position = position;
			this.motion = motion;
			this.metadata = metadata;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(15);
			this.writeVarlong(this.entity_id);
			this.writeVarulong(this.runtime_id);
			this.writeBytes(this.item.encode());
			this.writeLittleEndianFloat(this.position.x);
			this.writeLittleEndianFloat(this.position.y);
			this.writeLittleEndianFloat(this.position.z);
			this.writeLittleEndianFloat(this.motion.x);
			this.writeLittleEndianFloat(this.motion.y);
			this.writeLittleEndianFloat(this.motion.z);
			this.writeBytes(this.metadata.encode());
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.runtime_id=this.readVarulong();
			this.item=Types.Slot.fromBuffer(this._buffer);
			this._buffer=this.item._buffer;
			this.position={};
			this.position.x=this.readLittleEndianFloat();
			this.position.y=this.readLittleEndianFloat();
			this.position.z=this.readLittleEndianFloat();
			this.motion={};
			this.motion.x=this.readLittleEndianFloat();
			this.motion.y=this.readLittleEndianFloat();
			this.motion.z=this.readLittleEndianFloat();
			this.metadata=Metadata.fromBuffer(this._buffer);
			this._buffer=this.metadata._buffer;
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.AddItemEntity().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "AddItemEntity(entity_id: " + this.entity_id + ", runtime_id: " + this.runtime_id + ", item: " + this.item + ", position: " + this.position + ", motion: " + this.motion + ", metadata: " + this.metadata + ")";
		}

	}
	,

	AddHangingEntity: class extends Buffer {

		static get ID(){ return 16; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, runtimeId=0, position=null, unknown3=0) {
			super();
			this.entityId = entityId;
			this.runtimeId = runtimeId;
			this.position = position;
			this.unknown3 = unknown3;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(16);
			this.writeVarlong(this.entity_id);
			this.writeVarulong(this.runtime_id);
			this.writeBytes(this.position.encode());
			this.writeVarint(this.unknown3);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.runtime_id=this.readVarulong();
			this.position=Types.BlockPosition.fromBuffer(this._buffer);
			this._buffer=this.position._buffer;
			this.unknown3=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.AddHangingEntity().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "AddHangingEntity(entity_id: " + this.entity_id + ", runtime_id: " + this.runtime_id + ", position: " + this.position + ", unknown3: " + this.unknown3 + ")";
		}

	}
	,

	TakeItemEntity: class extends Buffer {

		static get ID(){ return 17; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(collected=0, collector=0) {
			super();
			this.collected = collected;
			this.collector = collector;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(17);
			this.writeVarlong(this.collected);
			this.writeVarlong(this.collector);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.collected=this.readVarlong();
			this.collector=this.readVarlong();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.TakeItemEntity().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "TakeItemEntity(collected: " + this.collected + ", collector: " + this.collector + ")";
		}

	}
	,

	MoveEntity: class extends Buffer {

		static get ID(){ return 18; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, position={x:0,y:0,z:0}, pitch=0, headYaw=0, yaw=0, onGround=false, teleported=false) {
			super();
			this.entityId = entityId;
			this.position = position;
			this.pitch = pitch;
			this.headYaw = headYaw;
			this.yaw = yaw;
			this.onGround = onGround;
			this.teleported = teleported;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(18);
			this.writeVarlong(this.entity_id);
			this.writeLittleEndianFloat(this.position.x);
			this.writeLittleEndianFloat(this.position.y);
			this.writeLittleEndianFloat(this.position.z);
			this.writeByte(this.pitch);
			this.writeByte(this.head_yaw);
			this.writeByte(this.yaw);
			this.writeBool(this.on_ground);
			this.writeBool(this.teleported);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.position={};
			this.position.x=this.readLittleEndianFloat();
			this.position.y=this.readLittleEndianFloat();
			this.position.z=this.readLittleEndianFloat();
			this.pitch=this.readByte();
			this.head_yaw=this.readByte();
			this.yaw=this.readByte();
			this.on_ground=this.readBool();
			this.teleported=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.MoveEntity().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "MoveEntity(entity_id: " + this.entity_id + ", position: " + this.position + ", pitch: " + this.pitch + ", head_yaw: " + this.head_yaw + ", yaw: " + this.yaw + ", on_ground: " + this.on_ground + ", teleported: " + this.teleported + ")";
		}

	}
	,

	MovePlayer: class extends Buffer {

		static get ID(){ return 19; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		// animation
		static get FULL(){ return 0; };
		static get NONE(){ return 1; };
		static get TELEPORT(){ return 2; };
		static get PITCH(){ return 3; };

		constructor(entityId=0, position={x:0,y:0,z:0}, pitch=.0, headYaw=.0, yaw=.0, animation=0, onGround=false, unknown7=0, unknown8=0, unknown9=0) {
			super();
			this.entityId = entityId;
			this.position = position;
			this.pitch = pitch;
			this.headYaw = headYaw;
			this.yaw = yaw;
			this.animation = animation;
			this.onGround = onGround;
			this.unknown7 = unknown7;
			this.unknown8 = unknown8;
			this.unknown9 = unknown9;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(19);
			this.writeVarlong(this.entity_id);
			this.writeLittleEndianFloat(this.position.x);
			this.writeLittleEndianFloat(this.position.y);
			this.writeLittleEndianFloat(this.position.z);
			this.writeLittleEndianFloat(this.pitch);
			this.writeLittleEndianFloat(this.head_yaw);
			this.writeLittleEndianFloat(this.yaw);
			this.writeByte(this.animation);
			this.writeBool(this.on_ground);
			this.writeVarlong(this.unknown7);
			if(animation==3) {
				this.writeLittleEndianInt(this.unknown8);
			}
			if(animation==3) {
				this.writeLittleEndianInt(this.unknown9);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.position={};
			this.position.x=this.readLittleEndianFloat();
			this.position.y=this.readLittleEndianFloat();
			this.position.z=this.readLittleEndianFloat();
			this.pitch=this.readLittleEndianFloat();
			this.head_yaw=this.readLittleEndianFloat();
			this.yaw=this.readLittleEndianFloat();
			this.animation=this.readByte();
			this.on_ground=this.readBool();
			this.unknown7=this.readVarlong();
			if(animation==3) {
				this.unknown8=this.readLittleEndianInt();
			}
			if(animation==3) {
				this.unknown9=this.readLittleEndianInt();
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.MovePlayer().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "MovePlayer(entity_id: " + this.entity_id + ", position: " + this.position + ", pitch: " + this.pitch + ", head_yaw: " + this.head_yaw + ", yaw: " + this.yaw + ", animation: " + this.animation + ", on_ground: " + this.on_ground + ", unknown7: " + this.unknown7 + ", unknown8: " + this.unknown8 + ", unknown9: " + this.unknown9 + ")";
		}

	}
	,

	RiderJump: class extends Buffer {

		static get ID(){ return 20; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		constructor(rider=0) {
			super();
			this.rider = rider;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(20);
			this.writeVarlong(this.rider);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.rider=this.readVarlong();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.RiderJump().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "RiderJump(rider: " + this.rider + ")";
		}

	}
	,

	UpdateBlock: class extends Buffer {

		static get ID(){ return 21; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// flags and meta
		static get NEIGHBORS(){ return 1; };
		static get NETWORK(){ return 2; };
		static get NO_GRAPHIC(){ return 4; };
		static get PRIORITY(){ return 8; };

		constructor(position=null, block=0, flagsAndMeta=0) {
			super();
			this.position = position;
			this.block = block;
			this.flagsAndMeta = flagsAndMeta;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(21);
			this.writeBytes(this.position.encode());
			this.writeVaruint(this.block);
			this.writeVaruint(this.flags_and_meta);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position=Types.BlockPosition.fromBuffer(this._buffer);
			this._buffer=this.position._buffer;
			this.block=this.readVaruint();
			this.flags_and_meta=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.UpdateBlock().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "UpdateBlock(position: " + this.position + ", block: " + this.block + ", flags_and_meta: " + this.flags_and_meta + ")";
		}

	}
	,

	AddPainting: class extends Buffer {

		static get ID(){ return 22; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, runtimeId=0, position=null, direction=0, title="") {
			super();
			this.entityId = entityId;
			this.runtimeId = runtimeId;
			this.position = position;
			this.direction = direction;
			this.title = title;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(22);
			this.writeVarlong(this.entity_id);
			this.writeVarulong(this.runtime_id);
			this.writeBytes(this.position.encode());
			this.writeVarint(this.direction);
			var dhc5arz=this.encodeString(this.title);
			this.writeVaruint(dhc5arz.length);
			this.writeBytes(dhc5arz);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.runtime_id=this.readVarulong();
			this.position=Types.BlockPosition.fromBuffer(this._buffer);
			this._buffer=this.position._buffer;
			this.direction=this.readVarint();
			var dhc5arz=this.readVaruint();
			this.title=this.decodeString(this.readBytes(dhc5arz));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.AddPainting().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "AddPainting(entity_id: " + this.entity_id + ", runtime_id: " + this.runtime_id + ", position: " + this.position + ", direction: " + this.direction + ", title: " + this.title + ")";
		}

	}
	,

	Explode: class extends Buffer {

		static get ID(){ return 23; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position={x:0,y:0,z:0}, radius=.0, destroyedBlocks=[]) {
			super();
			this.position = position;
			this.radius = radius;
			this.destroyedBlocks = destroyedBlocks;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(23);
			this.writeLittleEndianFloat(this.position.x);
			this.writeLittleEndianFloat(this.position.y);
			this.writeLittleEndianFloat(this.position.z);
			this.writeLittleEndianFloat(this.radius);
			this.writeVaruint(this.destroyed_blocks.length);
			for(var dhc5znc9 in this.destroyed_blocks) {
				this.writeBytes(this.destroyed_blocks[dhc5znc9].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position={};
			this.position.x=this.readLittleEndianFloat();
			this.position.y=this.readLittleEndianFloat();
			this.position.z=this.readLittleEndianFloat();
			this.radius=this.readLittleEndianFloat();
			var aramzvdj=this.readVaruint();
			this.destroyed_blocks=[];
			for(var dhc5znc9=0;dhc5znc9<aramzvdj;dhc5znc9++) {
				this.destroyed_blocks[dhc5znc9]=Types.BlockPosition.fromBuffer(this._buffer);
				this._buffer=this.destroyed_blocks[dhc5znc9]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.Explode().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Explode(position: " + this.position + ", radius: " + this.radius + ", destroyed_blocks: " + this.destroyed_blocks + ")";
		}

	}
	,

	LevelSoundEvent: class extends Buffer {

		static get ID(){ return 24; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		// sound
		static get ITEM_USE_ON(){ return 0; };
		static get HIT(){ return 1; };
		static get STEP(){ return 2; };
		static get FLY(){ return 3; };
		static get JUMP(){ return 4; };
		static get BREAK(){ return 5; };
		static get PLACE(){ return 6; };
		static get HEAVY_STEP(){ return 7; };
		static get GALLOP(){ return 8; };
		static get FALL(){ return 9; };
		static get AMBIENT(){ return 10; };
		static get AMBIENT_BABY(){ return 11; };
		static get AMBIENT_IN_WATER(){ return 12; };
		static get BREATHE(){ return 13; };
		static get DEATH(){ return 14; };
		static get DEATH_IN_WATER(){ return 15; };
		static get DEATH_TO_ZOMBIE(){ return 16; };
		static get HURT(){ return 17; };
		static get HURT_IN_WATER(){ return 18; };
		static get MAD(){ return 19; };
		static get BOOST(){ return 20; };
		static get BOW(){ return 21; };
		static get SQUISH_BIG(){ return 22; };
		static get SQUISH_SMALL(){ return 23; };
		static get FALL_BIG(){ return 24; };
		static get FALL_SMALL(){ return 25; };
		static get SPLASH(){ return 26; };
		static get FIZZ(){ return 27; };
		static get FLAP(){ return 28; };
		static get SWIM(){ return 29; };
		static get DRINK(){ return 30; };
		static get EAT(){ return 31; };
		static get TAKEOFF(){ return 32; };
		static get SHAKE(){ return 33; };
		static get PLOP(){ return 34; };
		static get LAND(){ return 35; };
		static get SADDLE(){ return 36; };
		static get ARMOR(){ return 37; };
		static get ADD_CHEST(){ return 38; };
		static get THROW(){ return 39; };
		static get ATTACK(){ return 40; };
		static get ATTACK_NODAMAGE(){ return 41; };
		static get WARN(){ return 42; };
		static get SHEAR(){ return 43; };
		static get MILK(){ return 44; };
		static get THUNDER(){ return 45; };
		static get EXPLODE(){ return 46; };
		static get FIRE(){ return 47; };
		static get IGNITE(){ return 48; };
		static get FUSE(){ return 49; };
		static get STARE(){ return 50; };
		static get SPAWN(){ return 51; };
		static get SHOOT(){ return 52; };
		static get BREAK_BLOCK(){ return 53; };
		static get LAUNCH(){ return 54; };
		static get BLAST(){ return 55; };
		static get LARGE_BLAST(){ return 56; };
		static get TWINKLE(){ return 57; };
		static get REMEDY(){ return 58; };
		static get UNFECT(){ return 59; };
		static get LEVELUP(){ return 60; };
		static get BOW_HIT(){ return 61; };
		static get BULLET_HIT(){ return 62; };
		static get EXTINGUISH_FIRE(){ return 63; };
		static get ITEM_FIZZ(){ return 64; };
		static get CHEST_OPEN(){ return 65; };
		static get CHEST_CLOSED(){ return 66; };
		static get SHULKER_BOX_OPEN(){ return 67; };
		static get SHULKER_BOX_CLOSE(){ return 68; };
		static get POWER_ON(){ return 69; };
		static get POWER_OFF(){ return 70; };
		static get ATTACH(){ return 71; };
		static get DETACH(){ return 72; };
		static get DENY(){ return 73; };
		static get TRIPOD(){ return 74; };
		static get POP(){ return 75; };
		static get DROP_SLOT(){ return 76; };
		static get NOTE(){ return 77; };
		static get THORNS(){ return 78; };
		static get PISTON_IN(){ return 79; };
		static get PISTON_OUT(){ return 80; };
		static get PORTAL(){ return 81; };
		static get WATER(){ return 82; };
		static get LAVA_POP(){ return 83; };
		static get LAVA(){ return 84; };
		static get BURP(){ return 85; };
		static get BUCKET_FILL_WATER(){ return 86; };
		static get BUCKET_FILL_LAVA(){ return 87; };
		static get BUCKET_EMPTY_WATER(){ return 88; };
		static get BUCKET_EMPTY_LAVA(){ return 89; };
		static get RECORD_13(){ return 90; };
		static get RECORD_CAT(){ return 91; };
		static get RECORD_BLOCKS(){ return 92; };
		static get RECORD_CHIRP(){ return 93; };
		static get RECORD_FAR(){ return 94; };
		static get RECORD_MALL(){ return 95; };
		static get RECORD_MELLOHI(){ return 96; };
		static get RECORD_STAL(){ return 97; };
		static get RECORD_STRAD(){ return 98; };
		static get RECORD_WARD(){ return 99; };
		static get RECORD_11(){ return 100; };
		static get RECORD_WAIT(){ return 101; };
		static get GUARDIAN_FLOP(){ return 103; };
		static get ELDERGUARDIAN_CURSE(){ return 104; };
		static get MOB_WARNING(){ return 105; };
		static get MOB_WARNING_BABY(){ return 106; };
		static get TELEPORT(){ return 107; };
		static get SHULKER_OPEN(){ return 108; };
		static get SHULKER_CLOSE(){ return 109; };
		static get HAGGLE(){ return 110; };
		static get HAGGLE_YES(){ return 111; };
		static get HAGGLE_NO(){ return 112; };
		static get HAGGLE_IDLE(){ return 113; };
		static get CHORUS_GROW(){ return 114; };
		static get CHORUS_DEATH(){ return 115; };
		static get GLASS(){ return 116; };
		static get CAST_SPELL(){ return 117; };
		static get PREPARE_ATTACK(){ return 118; };
		static get PREPARE_SUMMON(){ return 119; };
		static get PREPARE_WOLOLO(){ return 120; };
		static get FANG(){ return 121; };
		static get CHARGE(){ return 122; };
		static get CAMERA_TAKE_PICTURE(){ return 123; };
		static get LEASHKNOT_PLACE(){ return 124; };
		static get LEASHKNOT_BREAK(){ return 125; };
		static get GROWL(){ return 126; };
		static get WHINE(){ return 127; };
		static get PANT(){ return 128; };
		static get PURR(){ return 129; };
		static get PURREOW(){ return 130; };
		static get DEATH_MIN_VOLUME(){ return 131; };
		static get DEATH_MID_VOLUME(){ return 132; };
		static get INITIATE_BLAZE(){ return 133; };
		static get INITIATE_CAVE_SPIDER(){ return 134; };
		static get INITIATE_CREEPER(){ return 135; };
		static get INITIATE_ELDER_GUARDIAN(){ return 136; };
		static get INITIATE_ENDER_DRAGON(){ return 137; };
		static get INITIATE_ENDERMAN(){ return 138; };
		static get INITIATE_EVOCATION_ILLAGER(){ return 140; };
		static get INITIATE_GHAST(){ return 141; };
		static get INITIATE_HUSK(){ return 142; };
		static get INITIATE_ILLUSION_ILLAGER(){ return 143; };
		static get INITIATE_MAGMA_CUBE(){ return 144; };
		static get INITIATE_POLAR_BEAR(){ return 145; };
		static get INITIATE_SHULKER(){ return 146; };
		static get INITIATE_SILVERFISH(){ return 147; };
		static get INITIATE_SKELETON(){ return 148; };
		static get INITIATE_SLIME(){ return 149; };
		static get INITIATE_SPIDER(){ return 150; };
		static get INITIATE_STRAY(){ return 151; };
		static get INITIATE_VEX(){ return 152; };
		static get INITIATE_VINDICATION_ILLAGER(){ return 153; };
		static get INITIATE_WITCH(){ return 154; };
		static get INITIATE_WITHER(){ return 155; };
		static get INITIATE_WITHER_SKELETON(){ return 156; };
		static get INITIATE_WOLF(){ return 157; };
		static get INITIATE_ZOMBIE(){ return 158; };
		static get INITIATE_ZOMBIE_PIGMAN(){ return 159; };
		static get INITIATE_ZOMBIE_VILLAGER(){ return 160; };
		static get DEFAULT(){ return 161; };
		static get UNDEFINED(){ return 162; };

		constructor(sound=0, position={x:0,y:0,z:0}, volume=0, pitch=0, unknown4=false, disableRelativeVolume=false) {
			super();
			this.sound = sound;
			this.position = position;
			this.volume = volume;
			this.pitch = pitch;
			this.unknown4 = unknown4;
			this.disableRelativeVolume = disableRelativeVolume;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(24);
			this.writeByte(this.sound);
			this.writeLittleEndianFloat(this.position.x);
			this.writeLittleEndianFloat(this.position.y);
			this.writeLittleEndianFloat(this.position.z);
			this.writeVaruint(this.volume);
			this.writeVarint(this.pitch);
			this.writeBool(this.unknown4);
			this.writeBool(this.disable_relative_volume);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.sound=this.readByte();
			this.position={};
			this.position.x=this.readLittleEndianFloat();
			this.position.y=this.readLittleEndianFloat();
			this.position.z=this.readLittleEndianFloat();
			this.volume=this.readVaruint();
			this.pitch=this.readVarint();
			this.unknown4=this.readBool();
			this.disable_relative_volume=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.LevelSoundEvent().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "LevelSoundEvent(sound: " + this.sound + ", position: " + this.position + ", volume: " + this.volume + ", pitch: " + this.pitch + ", unknown4: " + this.unknown4 + ", disable_relative_volume: " + this.disable_relative_volume + ")";
		}

	}
	,

	LevelEvent: class extends Buffer {

		static get ID(){ return 25; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// event id
		static get START_RAIN(){ return 3001; };
		static get START_THUNDER(){ return 3002; };
		static get STOP_RAIN(){ return 3003; };
		static get STOP_THUNDER(){ return 3004; };
		static get START_BLOCK_BREAK(){ return 3600; };
		static get STOP_BLOCK_BREAK(){ return 3601; };
		static get SET_DATA(){ return 4000; };
		static get PLAYERS_SLEEPING(){ return 9800; };
		static get PARTICLE_BUBBLE(){ return 16385; };
		static get PARTICLE_CRITICAL(){ return 16386; };
		static get PARTICLE_BLOCK_FORCE_FIELD(){ return 16387; };
		static get PARTICLE_SMOKE(){ return 16388; };
		static get PARTICLE_EXPLODE(){ return 16389; };
		static get PARTICLE_EVAPORATION(){ return 16390; };
		static get PARTICLE_FLAME(){ return 16391; };
		static get PARTICLE_LAVA(){ return 16392; };
		static get PARTICLE_LARGE_SMOKE(){ return 16393; };
		static get PARTICLE_REDSTONE(){ return 16394; };
		static get PARTICLE_RISING_RED_DUST(){ return 16395; };
		static get PARTICLE_ITEM_BREAK(){ return 16396; };
		static get PARTICLE_SNOWBALL_POOF(){ return 16397; };
		static get PARTICLE_HUGE_EXPLODE(){ return 16398; };
		static get PARTICLE_HUGE_EXPLODE_SEED(){ return 16399; };
		static get PARTICLE_MOB_FLAME(){ return 16400; };
		static get PARTICLE_HEART(){ return 16401; };
		static get PARTICLE_TERRAIN(){ return 16402; };
		static get PARTICLE_TOWN_AURA(){ return 16403; };
		static get PARTICLE_PORTAL(){ return 16404; };
		static get PARTICLE_WATER_SPLASH(){ return 16405; };
		static get PARTICLE_WATER_WAKE(){ return 16406; };
		static get PARTICLE_DRIP_WATER(){ return 16407; };
		static get PARTICLE_DRIP_LAVA(){ return 16408; };
		static get PARTICLE_FALLING_DUST(){ return 16409; };
		static get PARTICLE_MOB_SPELL(){ return 16410; };
		static get PARTICLE_MOB_SPELL_AMBIENT(){ return 16411; };
		static get PARTICLE_MOB_SPELL_INSTANTANEOUS(){ return 16412; };
		static get PARTICLE_INK(){ return 16413; };
		static get PARTICLE_SLIME(){ return 16414; };
		static get PARTICLE_RAIN_SPLASH(){ return 16415; };
		static get PARTICLE_VILLAGER_ANGRY(){ return 16416; };
		static get PARTICLE_VILLAGER_HAPPY(){ return 16417; };
		static get PARTICLE_ENCHANTMENT_TABLE(){ return 16418; };
		static get PARTICLE_TRACKING_EMITTER(){ return 16419; };
		static get PARTICLE_NOTE(){ return 16420; };
		static get PARTICLE_WITCH_SPELL(){ return 16421; };
		static get PARTICLE_CARROT(){ return 16422; };
		static get PARTICLE_END_ROD(){ return 16424; };
		static get PARTICLE_DRAGON_BREATH(){ return 16425; };
		static get PARTICLE_SHOOT(){ return 2000; };
		static get PARTICLE_DESTROY(){ return 2001; };
		static get PARTICLE_SPLASH(){ return 2002; };
		static get PARTICLE_EYE_DESPAWN(){ return 2003; };
		static get PARTICLE_SPAWN(){ return 2004; };

		constructor(eventId=0, position={x:0,y:0,z:0}, data=0) {
			super();
			this.eventId = eventId;
			this.position = position;
			this.data = data;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(25);
			this.writeVarint(this.event_id);
			this.writeLittleEndianFloat(this.position.x);
			this.writeLittleEndianFloat(this.position.y);
			this.writeLittleEndianFloat(this.position.z);
			this.writeVarint(this.data);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.event_id=this.readVarint();
			this.position={};
			this.position.x=this.readLittleEndianFloat();
			this.position.y=this.readLittleEndianFloat();
			this.position.z=this.readLittleEndianFloat();
			this.data=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.LevelEvent().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "LevelEvent(event_id: " + this.event_id + ", position: " + this.position + ", data: " + this.data + ")";
		}

	}
	,

	BlockEvent: class extends Buffer {

		static get ID(){ return 26; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position=null, data=new Int32Array(2)) {
			super();
			this.position = position;
			this.data = data;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(26);
			this.writeBytes(this.position.encode());
			for(var dhc5yr in this.data) {
				this.writeVarint(this.data[dhc5yr]);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position=Types.BlockPosition.fromBuffer(this._buffer);
			this._buffer=this.position._buffer;
			var aramzfy=2;
			this.data=[];
			for(var dhc5yr=0;dhc5yr<aramzfy;dhc5yr++) {
				this.data[dhc5yr]=this.readVarint();
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.BlockEvent().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "BlockEvent(position: " + this.position + ", data: " + this.data + ")";
		}

	}
	,

	EntityEvent: class extends Buffer {

		static get ID(){ return 27; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		// event id
		static get HURT_ANIMATION(){ return 2; };
		static get DEATH_ANIMATION(){ return 3; };
		static get TAME_FAIL(){ return 6; };
		static get TAME_SUCCESS(){ return 7; };
		static get SHAKE_WET(){ return 8; };
		static get USE_ITEM(){ return 9; };
		static get EAT_GRASS_ANIMATION(){ return 10; };
		static get FISH_HOOK_BUBBLES(){ return 11; };
		static get FISH_HOOK_POSITION(){ return 12; };
		static get FISH_HOOK_HOOK(){ return 13; };
		static get FISH_HOOK_TEASE(){ return 14; };
		static get SQUID_INK_CLOUD(){ return 15; };
		static get AMBIENT_SOUND(){ return 16; };
		static get RESPAWN(){ return 17; };
		static get UNLEASH(){ return 63; };

		constructor(entityId=0, eventId=0, data=0) {
			super();
			this.entityId = entityId;
			this.eventId = eventId;
			this.data = data;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(27);
			this.writeVarlong(this.entity_id);
			this.writeByte(this.event_id);
			this.writeVarint(this.data);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.event_id=this.readByte();
			this.data=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.EntityEvent().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityEvent(entity_id: " + this.entity_id + ", event_id: " + this.event_id + ", data: " + this.data + ")";
		}

	}
	,

	MobEffect: class extends Buffer {

		static get ID(){ return 28; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// event id
		static get ADD(){ return 1; };
		static get MODIFY(){ return 2; };
		static get REMOVE(){ return 3; };

		constructor(entityId=0, eventId=0, effect=0, amplifier=0, particles=false, duration=0) {
			super();
			this.entityId = entityId;
			this.eventId = eventId;
			this.effect = effect;
			this.amplifier = amplifier;
			this.particles = particles;
			this.duration = duration;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(28);
			this.writeVarlong(this.entity_id);
			this.writeByte(this.event_id);
			this.writeVarint(this.effect);
			this.writeVarint(this.amplifier);
			this.writeBool(this.particles);
			this.writeVarint(this.duration);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.event_id=this.readByte();
			this.effect=this.readVarint();
			this.amplifier=this.readVarint();
			this.particles=this.readBool();
			this.duration=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.MobEffect().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "MobEffect(entity_id: " + this.entity_id + ", event_id: " + this.event_id + ", effect: " + this.effect + ", amplifier: " + this.amplifier + ", particles: " + this.particles + ", duration: " + this.duration + ")";
		}

	}
	,

	UpdateAttributes: class extends Buffer {

		static get ID(){ return 29; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, attributes=[]) {
			super();
			this.entityId = entityId;
			this.attributes = attributes;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(29);
			this.writeVarlong(this.entity_id);
			this.writeVaruint(this.attributes.length);
			for(var dhc5draj in this.attributes) {
				this.writeBytes(this.attributes[dhc5draj].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			var aramyrcl=this.readVaruint();
			this.attributes=[];
			for(var dhc5draj=0;dhc5draj<aramyrcl;dhc5draj++) {
				this.attributes[dhc5draj]=Types.Attribute.fromBuffer(this._buffer);
				this._buffer=this.attributes[dhc5draj]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.UpdateAttributes().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "UpdateAttributes(entity_id: " + this.entity_id + ", attributes: " + this.attributes + ")";
		}

	}
	,

	InventoryTransaction: class extends Buffer {

		static get ID(){ return 30; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		// type (variant)
		static get NORMAL_0(){ return 0; };
		static get NORMAL_1(){ return 1; };
		static get USE_ITEM(){ return 2; };
		static get USE_ITEM_ON_ENTITY(){ return 3; };
		static get RELEASE_ITEM(){ return 4; };

		constructor(type=0, actions=[]) {
			super();
			this.type = type;
			this.actions = actions;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(30);
			this.writeVaruint(this.type);
			this.writeVaruint(this.actions.length);
			for(var dhc5yrb5 in this.actions) {
				this.writeBytes(this.actions[dhc5yrb5].encode());
			}
			switch(this.type) {
				case 0:
					this.writeVaruint(this.type);
					this.writeVaruint(this.actions.length);
					for(var dhc5yrb5 in this.actions) {
						this.writeBytes(this.actions[dhc5yrb5].encode());
					}
					break;
				case 1:
					this.writeVaruint(this.type);
					this.writeVaruint(this.actions.length);
					for(var dhc5yrb5 in this.actions) {
						this.writeBytes(this.actions[dhc5yrb5].encode());
					}
					break;
				case 2:
					this.writeVaruint(this.type);
					this.writeVaruint(this.actions.length);
					for(var dhc5yrb5 in this.actions) {
						this.writeBytes(this.actions[dhc5yrb5].encode());
					}
					break;
				case 3:
					this.writeVaruint(this.type);
					this.writeVaruint(this.actions.length);
					for(var dhc5yrb5 in this.actions) {
						this.writeBytes(this.actions[dhc5yrb5].encode());
					}
					break;
				case 4:
					this.writeVaruint(this.type);
					this.writeVaruint(this.actions.length);
					for(var dhc5yrb5 in this.actions) {
						this.writeBytes(this.actions[dhc5yrb5].encode());
					}
					break;
				default: break;
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.type=this.readVaruint();
			var aramyna9=this.readVaruint();
			this.actions=[];
			for(var dhc5yrb5=0;dhc5yrb5<aramyna9;dhc5yrb5++) {
				this.actions[dhc5yrb5]=Types.InventoryAction.fromBuffer(this._buffer);
				this._buffer=this.actions[dhc5yrb5]._buffer;
			}
			switch(this.type) {
				case 0:
					break;
				case 1:
					break;
				case 2:
					this.action_type=this.readVaruint();
					this.block_position=Types.BlockPosition.fromBuffer(this._buffer);
					this._buffer=this.block_position._buffer;
					this.face=this.readVarint();
					this.hotbar_slot=this.readVarint();
					this.item=Types.Slot.fromBuffer(this._buffer);
					this._buffer=this.item._buffer;
					this.player_position={};
					this.player_position.x=this.readLittleEndianFloat();
					this.player_position.y=this.readLittleEndianFloat();
					this.player_position.z=this.readLittleEndianFloat();
					this.click_position={};
					this.click_position.x=this.readLittleEndianFloat();
					this.click_position.y=this.readLittleEndianFloat();
					this.click_position.z=this.readLittleEndianFloat();
					break;
				case 3:
					this.entity_id=this.readVarlong();
					this.action_type=this.readVaruint();
					this.hotbar_slot=this.readVarint();
					this.item=Types.Slot.fromBuffer(this._buffer);
					this._buffer=this.item._buffer;
					this.unknown6={};
					this.unknown6.x=this.readLittleEndianFloat();
					this.unknown6.y=this.readLittleEndianFloat();
					this.unknown6.z=this.readLittleEndianFloat();
					this.unknown7={};
					this.unknown7.x=this.readLittleEndianFloat();
					this.unknown7.y=this.readLittleEndianFloat();
					this.unknown7.z=this.readLittleEndianFloat();
					break;
				case 4:
					this.action_type=this.readVaruint();
					this.hotbar_slot=this.readVarint();
					this.item=Types.Slot.fromBuffer(this._buffer);
					this._buffer=this.item._buffer;
					this.head_position={};
					this.head_position.x=this.readLittleEndianFloat();
					this.head_position.y=this.readLittleEndianFloat();
					this.head_position.z=this.readLittleEndianFloat();
					break;
				default: break;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.InventoryTransaction().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "InventoryTransaction(type: " + this.type + ", actions: " + this.actions + ")";
		}

	}
	,

	MobEquipment: class extends Buffer {

		static get ID(){ return 31; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		constructor(entityId=0, item=null, inventorySlot=0, hotbarSlot=0, unknown4=0) {
			super();
			this.entityId = entityId;
			this.item = item;
			this.inventorySlot = inventorySlot;
			this.hotbarSlot = hotbarSlot;
			this.unknown4 = unknown4;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(31);
			this.writeVarlong(this.entity_id);
			this.writeBytes(this.item.encode());
			this.writeByte(this.inventory_slot);
			this.writeByte(this.hotbar_slot);
			this.writeByte(this.unknown4);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.item=Types.Slot.fromBuffer(this._buffer);
			this._buffer=this.item._buffer;
			this.inventory_slot=this.readByte();
			this.hotbar_slot=this.readByte();
			this.unknown4=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.MobEquipment().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "MobEquipment(entity_id: " + this.entity_id + ", item: " + this.item + ", inventory_slot: " + this.inventory_slot + ", hotbar_slot: " + this.hotbar_slot + ", unknown4: " + this.unknown4 + ")";
		}

	}
	,

	MobArmorEquipment: class extends Buffer {

		static get ID(){ return 32; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		constructor(entityId=0, armor=[]) {
			super();
			this.entityId = entityId;
			this.armor = armor;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(32);
			this.writeVarlong(this.entity_id);
			for(var dhc5c1c in this.armor) {
				this.writeBytes(this.armor[dhc5c1c].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			var aramyjbi=4;
			this.armor=[];
			for(var dhc5c1c=0;dhc5c1c<aramyjbi;dhc5c1c++) {
				this.armor[dhc5c1c]=Types.Slot.fromBuffer(this._buffer);
				this._buffer=this.armor[dhc5c1c]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.MobArmorEquipment().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "MobArmorEquipment(entity_id: " + this.entity_id + ", armor: " + this.armor + ")";
		}

	}
	,

	Interact: class extends Buffer {

		static get ID(){ return 33; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		// action
		static get LEAVE_VEHICLE(){ return 3; };
		static get HOVER(){ return 4; };
		static get OPEN_INVENTORY(){ return 6; };

		constructor(action=0, target=0, targetPosition={x:0,y:0,z:0}) {
			super();
			this.action = action;
			this.target = target;
			this.targetPosition = targetPosition;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(33);
			this.writeByte(this.action);
			this.writeVarlong(this.target);
			if(action==4) {
				this.writeLittleEndianFloat(this.target_position.x);
				this.writeLittleEndianFloat(this.target_position.y);
				this.writeLittleEndianFloat(this.target_position.z);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.action=this.readByte();
			this.target=this.readVarlong();
			if(action==4) {
				this.target_position={};
				this.target_position.x=this.readLittleEndianFloat();
				this.target_position.y=this.readLittleEndianFloat();
				this.target_position.z=this.readLittleEndianFloat();
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.Interact().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Interact(action: " + this.action + ", target: " + this.target + ", target_position: " + this.target_position + ")";
		}

	}
	,

	BlockPickRequest: class extends Buffer {

		static get ID(){ return 34; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(position={x:0,y:0,z:0}, unknown1=false, slot=0) {
			super();
			this.position = position;
			this.unknown1 = unknown1;
			this.slot = slot;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(34);
			this.writeVarint(this.position.x);
			this.writeVarint(this.position.y);
			this.writeVarint(this.position.z);
			this.writeBool(this.unknown1);
			this.writeByte(this.slot);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position={};
			this.position.x=this.readVarint();
			this.position.y=this.readVarint();
			this.position.z=this.readVarint();
			this.unknown1=this.readBool();
			this.slot=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.BlockPickRequest().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "BlockPickRequest(position: " + this.position + ", unknown1: " + this.unknown1 + ", slot: " + this.slot + ")";
		}

	}
	,

	EntityPickRequest: class extends Buffer {

		static get ID(){ return 35; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(entityType=0, slot=0) {
			super();
			this.entityType = entityType;
			this.slot = slot;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(35);
			this.writeLittleEndianLong(this.entity_type);
			this.writeByte(this.slot);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_type=this.readLittleEndianLong();
			this.slot=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.EntityPickRequest().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityPickRequest(entity_type: " + this.entity_type + ", slot: " + this.slot + ")";
		}

	}
	,

	PlayerAction: class extends Buffer {

		static get ID(){ return 36; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		// action
		static get START_BREAK(){ return 0; };
		static get ABORT_BREAK(){ return 1; };
		static get STOP_BREAK(){ return 2; };
		static get GET_UPDATED_BLOCK(){ return 3; };
		static get DROP_ITEM(){ return 4; };
		static get START_SLEEPING(){ return 5; };
		static get STOP_SLEEPING(){ return 6; };
		static get RESPAWN(){ return 7; };
		static get JUMP(){ return 8; };
		static get START_SPRINT(){ return 9; };
		static get STOP_SPRINT(){ return 10; };
		static get START_SNEAK(){ return 11; };
		static get STOP_SNEAK(){ return 12; };
		static get START_GLIDING(){ return 15; };
		static get STOP_GLIDING(){ return 16; };
		static get BUILD_DENIED(){ return 17; };
		static get CONTINUE_BREAK(){ return 18; };
		static get CHANGE_SKIN(){ return 19; };

		constructor(entityId=0, action=0, position=null, face=0) {
			super();
			this.entityId = entityId;
			this.action = action;
			this.position = position;
			this.face = face;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(36);
			this.writeVarlong(this.entity_id);
			this.writeVarint(this.action);
			this.writeBytes(this.position.encode());
			this.writeVarint(this.face);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.action=this.readVarint();
			this.position=Types.BlockPosition.fromBuffer(this._buffer);
			this._buffer=this.position._buffer;
			this.face=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.PlayerAction().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PlayerAction(entity_id: " + this.entity_id + ", action: " + this.action + ", position: " + this.position + ", face: " + this.face + ")";
		}

	}
	,

	EntityFall: class extends Buffer {

		static get ID(){ return 37; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(entityId=0, distance=.0, unknown2=false) {
			super();
			this.entityId = entityId;
			this.distance = distance;
			this.unknown2 = unknown2;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(37);
			this.writeVarlong(this.entity_id);
			this.writeLittleEndianFloat(this.distance);
			this.writeBool(this.unknown2);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.distance=this.readLittleEndianFloat();
			this.unknown2=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.EntityFall().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "EntityFall(entity_id: " + this.entity_id + ", distance: " + this.distance + ", unknown2: " + this.unknown2 + ")";
		}

	}
	,

	HurtArmor: class extends Buffer {

		static get ID(){ return 38; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(unknown0=0) {
			super();
			this.unknown0 = unknown0;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(38);
			this.writeVarint(this.unknown0);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.unknown0=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.HurtArmor().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "HurtArmor(unknown0: " + this.unknown0 + ")";
		}

	}
	,

	SetEntityData: class extends Buffer {

		static get ID(){ return 39; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, metadata=new Metadata()) {
			super();
			this.entityId = entityId;
			this.metadata = metadata;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(39);
			this.writeVarlong(this.entity_id);
			this.writeBytes(this.metadata.encode());
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.metadata=Metadata.fromBuffer(this._buffer);
			this._buffer=this.metadata._buffer;
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SetEntityData().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetEntityData(entity_id: " + this.entity_id + ", metadata: " + this.metadata + ")";
		}

	}
	,

	SetEntityMotion: class extends Buffer {

		static get ID(){ return 40; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, motion={x:0,y:0,z:0}) {
			super();
			this.entityId = entityId;
			this.motion = motion;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(40);
			this.writeVarlong(this.entity_id);
			this.writeLittleEndianFloat(this.motion.x);
			this.writeLittleEndianFloat(this.motion.y);
			this.writeLittleEndianFloat(this.motion.z);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.motion={};
			this.motion.x=this.readLittleEndianFloat();
			this.motion.y=this.readLittleEndianFloat();
			this.motion.z=this.readLittleEndianFloat();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SetEntityMotion().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetEntityMotion(entity_id: " + this.entity_id + ", motion: " + this.motion + ")";
		}

	}
	,

	SetEntityLink: class extends Buffer {

		static get ID(){ return 41; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// action
		static get REMOVE(){ return 0; };
		static get ADD(){ return 1; };

		constructor(vehicle=0, passenger=0, action=0) {
			super();
			this.vehicle = vehicle;
			this.passenger = passenger;
			this.action = action;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(41);
			this.writeVarlong(this.vehicle);
			this.writeVarlong(this.passenger);
			this.writeByte(this.action);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.vehicle=this.readVarlong();
			this.passenger=this.readVarlong();
			this.action=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SetEntityLink().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetEntityLink(vehicle: " + this.vehicle + ", passenger: " + this.passenger + ", action: " + this.action + ")";
		}

	}
	,

	SetHealth: class extends Buffer {

		static get ID(){ return 42; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(health=0) {
			super();
			this.health = health;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(42);
			this.writeVarint(this.health);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.health=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SetHealth().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetHealth(health: " + this.health + ")";
		}

	}
	,

	SetSpawnPosition: class extends Buffer {

		static get ID(){ return 43; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// type
		static get PLAYER_SPAWN(){ return 0; };
		static get WORLD_SPAWN(){ return 1; };

		constructor(type=0, position=null, forced=false) {
			super();
			this.type = type;
			this.position = position;
			this.forced = forced;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(43);
			this.writeVarint(this.type);
			this.writeBytes(this.position.encode());
			this.writeBool(this.forced);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.type=this.readVarint();
			this.position=Types.BlockPosition.fromBuffer(this._buffer);
			this._buffer=this.position._buffer;
			this.forced=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SetSpawnPosition().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetSpawnPosition(type: " + this.type + ", position: " + this.position + ", forced: " + this.forced + ")";
		}

	}
	,

	Animate: class extends Buffer {

		static get ID(){ return 44; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		// action
		static get BREAKING(){ return 1; };
		static get WAKE_UP(){ return 3; };

		constructor(action=0, entityId=0, unknown2=.0) {
			super();
			this.action = action;
			this.entityId = entityId;
			this.unknown2 = unknown2;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(44);
			this.writeVarint(this.action);
			this.writeVarlong(this.entity_id);
			if(action>128) {
				this.writeLittleEndianFloat(this.unknown2);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.action=this.readVarint();
			this.entity_id=this.readVarlong();
			if(action>128) {
				this.unknown2=this.readLittleEndianFloat();
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.Animate().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Animate(action: " + this.action + ", entity_id: " + this.entity_id + ", unknown2: " + this.unknown2 + ")";
		}

	}
	,

	Respawn: class extends Buffer {

		static get ID(){ return 45; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position={x:0,y:0,z:0}) {
			super();
			this.position = position;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(45);
			this.writeLittleEndianFloat(this.position.x);
			this.writeLittleEndianFloat(this.position.y);
			this.writeLittleEndianFloat(this.position.z);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position={};
			this.position.x=this.readLittleEndianFloat();
			this.position.y=this.readLittleEndianFloat();
			this.position.z=this.readLittleEndianFloat();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.Respawn().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Respawn(position: " + this.position + ")";
		}

	}
	,

	ContainerOpen: class extends Buffer {

		static get ID(){ return 46; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(window=0, type=0, position=null, entityId=0) {
			super();
			this.window = window;
			this.type = type;
			this.position = position;
			this.entityId = entityId;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(46);
			this.writeByte(this.window);
			this.writeByte(this.type);
			this.writeBytes(this.position.encode());
			this.writeVarlong(this.entity_id);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.window=this.readByte();
			this.type=this.readByte();
			this.position=Types.BlockPosition.fromBuffer(this._buffer);
			this._buffer=this.position._buffer;
			this.entity_id=this.readVarlong();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ContainerOpen().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ContainerOpen(window: " + this.window + ", type: " + this.type + ", position: " + this.position + ", entity_id: " + this.entity_id + ")";
		}

	}
	,

	ContainerClose: class extends Buffer {

		static get ID(){ return 47; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		constructor(window=0) {
			super();
			this.window = window;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(47);
			this.writeByte(this.window);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.window=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ContainerClose().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ContainerClose(window: " + this.window + ")";
		}

	}
	,

	PlayerHotbar: class extends Buffer {

		static get ID(){ return 48; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return false; };

		constructor() {
			super();
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(48);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.PlayerHotbar().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PlayerHotbar()";
		}

	}
	,

	InventoryContent: class extends Buffer {

		static get ID(){ return 49; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(window=0, slots=[]) {
			super();
			this.window = window;
			this.slots = slots;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(49);
			this.writeVaruint(this.window);
			this.writeVaruint(this.slots.length);
			for(var dhc5b9c in this.slots) {
				this.writeBytes(this.slots[dhc5b9c].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.window=this.readVaruint();
			var aramcxdm=this.readVaruint();
			this.slots=[];
			for(var dhc5b9c=0;dhc5b9c<aramcxdm;dhc5b9c++) {
				this.slots[dhc5b9c]=Types.Slot.fromBuffer(this._buffer);
				this._buffer=this.slots[dhc5b9c]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.InventoryContent().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "InventoryContent(window: " + this.window + ", slots: " + this.slots + ")";
		}

	}
	,

	InventorySlot: class extends Buffer {

		static get ID(){ return 50; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor() {
			super();
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(50);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.InventorySlot().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "InventorySlot()";
		}

	}
	,

	ContainerSetData: class extends Buffer {

		static get ID(){ return 51; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(window=0, property=0, value=0) {
			super();
			this.window = window;
			this.property = property;
			this.value = value;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(51);
			this.writeByte(this.window);
			this.writeVarint(this.property);
			this.writeVarint(this.value);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.window=this.readByte();
			this.property=this.readVarint();
			this.value=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ContainerSetData().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ContainerSetData(window: " + this.window + ", property: " + this.property + ", value: " + this.value + ")";
		}

	}
	,

	CraftingData: class extends Buffer {

		static get ID(){ return 52; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(recipes=[]) {
			super();
			this.recipes = recipes;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(52);
			this.writeVaruint(this.recipes.length);
			for(var dhc5zncv in this.recipes) {
				this.writeBytes(this.recipes[dhc5zncv].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var aramcvab=this.readVaruint();
			this.recipes=[];
			for(var dhc5zncv=0;dhc5zncv<aramcvab;dhc5zncv++) {
				this.recipes[dhc5zncv]=Types.Recipe.fromBuffer(this._buffer);
				this._buffer=this.recipes[dhc5zncv]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.CraftingData().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "CraftingData(recipes: " + this.recipes + ")";
		}

	}
	,

	CraftingEvent: class extends Buffer {

		static get ID(){ return 53; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(window=0, type=0, uuid=null, input=[], output=[]) {
			super();
			this.window = window;
			this.type = type;
			this.uuid = uuid;
			this.input = input;
			this.output = output;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(53);
			this.writeByte(this.window);
			this.writeVarint(this.type);
			this.writeBytes(this.uuid.encode());
			this.writeVaruint(this.input.length);
			for(var dhc5bbd in this.input) {
				this.writeBytes(this.input[dhc5bbd].encode());
			}
			this.writeVaruint(this.output.length);
			for(var dhc5drdq in this.output) {
				this.writeBytes(this.output[dhc5drdq].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.window=this.readByte();
			this.type=this.readVarint();
			this.uuid=Types.McpeUuid.fromBuffer(this._buffer);
			this._buffer=this.uuid._buffer;
			var arama5dq=this.readVaruint();
			this.input=[];
			for(var dhc5bbd=0;dhc5bbd<arama5dq;dhc5bbd++) {
				this.input[dhc5bbd]=Types.Slot.fromBuffer(this._buffer);
				this._buffer=this.input[dhc5bbd]._buffer;
			}
			var arambvcv=this.readVaruint();
			this.output=[];
			for(var dhc5drdq=0;dhc5drdq<arambvcv;dhc5drdq++) {
				this.output[dhc5drdq]=Types.Slot.fromBuffer(this._buffer);
				this._buffer=this.output[dhc5drdq]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.CraftingEvent().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "CraftingEvent(window: " + this.window + ", type: " + this.type + ", uuid: " + this.uuid + ", input: " + this.input + ", output: " + this.output + ")";
		}

	}
	,

	GuiDataPickItem: class extends Buffer {

		static get ID(){ return 54; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(slot=0) {
			super();
			this.slot = slot;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(54);
			this.writeLittleEndianInt(this.slot);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.slot=this.readLittleEndianInt();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.GuiDataPickItem().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "GuiDataPickItem(slot: " + this.slot + ")";
		}

	}
	,

	AdventureSettings: class extends Buffer {

		static get ID(){ return 55; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		// flags
		static get IMMUTABLE_WORLD(){ return 1; };
		static get PVP_DISABLED(){ return 2; };
		static get PVM_DISABLED(){ return 4; };
		static get MVP_DISBALED(){ return 8; };
		static get EVP_DISABLED(){ return 16; };
		static get AUTO_JUMP(){ return 32; };
		static get ALLOW_FLIGHT(){ return 64; };
		static get NO_CLIP(){ return 128; };
		static get FLYING(){ return 512; };
		static get MUTED(){ return 1024; };

		// permission level
		static get LEVEL_USER(){ return 0; };
		static get LEVEL_OPERATOR(){ return 1; };
		static get LEVEL_HOST(){ return 2; };
		static get LEVEL_AUTOMATION(){ return 3; };
		static get LEVEL_ADMIN(){ return 4; };

		// abilities
		static get BUILD_AND_MINE(){ return 1; };
		static get DOORS_AND_SWITCHES(){ return 2; };
		static get OPEN_CONTAINERS(){ return 4; };
		static get ATTACK_PLAYERS(){ return 8; };
		static get ATTACK_MOBS(){ return 16; };
		static get OP(){ return 32; };
		static get TELEPORT(){ return 64; };

		// player rank
		static get VISITOR(){ return 0; };
		static get MEMBER(){ return 1; };
		static get OPERATOR(){ return 2; };
		static get CUSTOM(){ return 3; };

		constructor(flags=0, permissionLevel=0, abilities=0, playerRank=0, customPermissions=0, entityId=0) {
			super();
			this.flags = flags;
			this.permissionLevel = permissionLevel;
			this.abilities = abilities;
			this.playerRank = playerRank;
			this.customPermissions = customPermissions;
			this.entityId = entityId;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(55);
			this.writeVaruint(this.flags);
			this.writeVaruint(this.permission_level);
			this.writeVaruint(this.abilities);
			this.writeVaruint(this.player_rank);
			this.writeVaruint(this.custom_permissions);
			this.writeLittleEndianLong(this.entity_id);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.flags=this.readVaruint();
			this.permission_level=this.readVaruint();
			this.abilities=this.readVaruint();
			this.player_rank=this.readVaruint();
			this.custom_permissions=this.readVaruint();
			this.entity_id=this.readLittleEndianLong();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.AdventureSettings().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "AdventureSettings(flags: " + this.flags + ", permission_level: " + this.permission_level + ", abilities: " + this.abilities + ", player_rank: " + this.player_rank + ", custom_permissions: " + this.custom_permissions + ", entity_id: " + this.entity_id + ")";
		}

	}
	,

	BlockEntityData: class extends Buffer {

		static get ID(){ return 56; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		constructor(position=null, nbt=null) {
			super();
			this.position = position;
			this.nbt = nbt;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(56);
			this.writeBytes(this.position.encode());
			this.writeBytes(this.nbt);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position=Types.BlockPosition.fromBuffer(this._buffer);
			this._buffer=this.position._buffer;
			this.nbt=Array.from(this._buffer);
			this._buffer=[];
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.BlockEntityData().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "BlockEntityData(position: " + this.position + ", nbt: " + this.nbt + ")";
		}

	}
	,

	PlayerInput: class extends Buffer {

		static get ID(){ return 57; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(sideways=.0, forward=.0, unknown2=false, unknown3=false) {
			super();
			this.sideways = sideways;
			this.forward = forward;
			this.unknown2 = unknown2;
			this.unknown3 = unknown3;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(57);
			this.writeLittleEndianFloat(this.sideways);
			this.writeLittleEndianFloat(this.forward);
			this.writeBool(this.unknown2);
			this.writeBool(this.unknown3);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.sideways=this.readLittleEndianFloat();
			this.forward=this.readLittleEndianFloat();
			this.unknown2=this.readBool();
			this.unknown3=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.PlayerInput().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PlayerInput(sideways: " + this.sideways + ", forward: " + this.forward + ", unknown2: " + this.unknown2 + ", unknown3: " + this.unknown3 + ")";
		}

	}
	,

	FullChunkData: class extends Buffer {

		static get ID(){ return 58; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position={x:0,z:0}, data=null) {
			super();
			this.position = position;
			this.data = data;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(58);
			this.writeVarint(this.position.x);
			this.writeVarint(this.position.z);
			this.writeBytes(this.data.encode());
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position={};
			this.position.x=this.readVarint();
			this.position.z=this.readVarint();
			this.data=Types.ChunkData.fromBuffer(this._buffer);
			this._buffer=this.data._buffer;
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.FullChunkData().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "FullChunkData(position: " + this.position + ", data: " + this.data + ")";
		}

	}
	,

	SetCommandsEnabled: class extends Buffer {

		static get ID(){ return 59; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(enabled=false) {
			super();
			this.enabled = enabled;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(59);
			this.writeBool(this.enabled);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.enabled=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SetCommandsEnabled().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetCommandsEnabled(enabled: " + this.enabled + ")";
		}

	}
	,

	SetDifficulty: class extends Buffer {

		static get ID(){ return 60; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// difficulty
		static get PEACEFUL(){ return 0; };
		static get EASY(){ return 1; };
		static get NORMAL(){ return 2; };
		static get HARD(){ return 3; };

		constructor(difficulty=0) {
			super();
			this.difficulty = difficulty;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(60);
			this.writeVaruint(this.difficulty);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.difficulty=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SetDifficulty().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetDifficulty(difficulty: " + this.difficulty + ")";
		}

	}
	,

	ChangeDimension: class extends Buffer {

		static get ID(){ return 61; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// dimension
		static get OVERWORLD(){ return 0; };
		static get NETHER(){ return 1; };
		static get END(){ return 2; };

		constructor(dimension=0, position={x:0,y:0,z:0}, unknown2=false) {
			super();
			this.dimension = dimension;
			this.position = position;
			this.unknown2 = unknown2;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(61);
			this.writeVarint(this.dimension);
			this.writeLittleEndianFloat(this.position.x);
			this.writeLittleEndianFloat(this.position.y);
			this.writeLittleEndianFloat(this.position.z);
			this.writeBool(this.unknown2);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.dimension=this.readVarint();
			this.position={};
			this.position.x=this.readLittleEndianFloat();
			this.position.y=this.readLittleEndianFloat();
			this.position.z=this.readLittleEndianFloat();
			this.unknown2=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ChangeDimension().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ChangeDimension(dimension: " + this.dimension + ", position: " + this.position + ", unknown2: " + this.unknown2 + ")";
		}

	}
	,

	SetPlayerGameType: class extends Buffer {

		static get ID(){ return 62; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		// gamemode
		static get SURVIVAL(){ return 0; };
		static get CREATIVE(){ return 1; };
		static get ADVENTURE(){ return 2; };

		constructor(gamemode=0) {
			super();
			this.gamemode = gamemode;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(62);
			this.writeVarint(this.gamemode);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.gamemode=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SetPlayerGameType().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetPlayerGameType(gamemode: " + this.gamemode + ")";
		}

	}
	,

	PlayerList: class extends Buffer {

		static get ID(){ return 63; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// action (variant)
		static get ADD(){ return 0; };
		static get REMOVE(){ return 1; };

		constructor(action=0) {
			super();
			this.action = action;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(63);
			this.writeByte(this.action);
			switch(this.action) {
				case 0:
					this.writeByte(this.action);
					break;
				case 1:
					this.writeByte(this.action);
					break;
				default: break;
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.action=this.readByte();
			switch(this.action) {
				case 0:
					var aramcxev=this.readVaruint();
					this.players=[];
					for(var dhc5bfzj=0;dhc5bfzj<aramcxev;dhc5bfzj++) {
						this.players[dhc5bfzj]=Types.PlayerList.fromBuffer(this._buffer);
						this._buffer=this.players[dhc5bfzj]._buffer;
					}
					break;
				case 1:
					var aramcxev=this.readVaruint();
					this.players=[];
					for(var dhc5bfzj=0;dhc5bfzj<aramcxev;dhc5bfzj++) {
						this.players[dhc5bfzj]=Types.McpeUuid.fromBuffer(this._buffer);
						this._buffer=this.players[dhc5bfzj]._buffer;
					}
					break;
				default: break;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.PlayerList().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PlayerList(action: " + this.action + ")";
		}

	}
	,

	SimpleEvent: class extends Buffer {

		static get ID(){ return 64; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		constructor() {
			super();
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(64);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SimpleEvent().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SimpleEvent()";
		}

	}
	,

	TelemetryEvent: class extends Buffer {

		static get ID(){ return 65; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(entityId=0, eventId=0) {
			super();
			this.entityId = entityId;
			this.eventId = eventId;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(65);
			this.writeVarlong(this.entity_id);
			this.writeVarint(this.event_id);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.event_id=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.TelemetryEvent().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "TelemetryEvent(entity_id: " + this.entity_id + ", event_id: " + this.event_id + ")";
		}

	}
	,

	SpawnExperienceOrb: class extends Buffer {

		static get ID(){ return 66; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position={x:0,y:0,z:0}, count=0) {
			super();
			this.position = position;
			this.count = count;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(66);
			this.writeLittleEndianFloat(this.position.x);
			this.writeLittleEndianFloat(this.position.y);
			this.writeLittleEndianFloat(this.position.z);
			this.writeVarint(this.count);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position={};
			this.position.x=this.readLittleEndianFloat();
			this.position.y=this.readLittleEndianFloat();
			this.position.z=this.readLittleEndianFloat();
			this.count=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SpawnExperienceOrb().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SpawnExperienceOrb(position: " + this.position + ", count: " + this.count + ")";
		}

	}
	,

	ClientboundMapItemData: class extends Buffer {

		static get ID(){ return 67; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// update
		static get TEXTURE(){ return 2; };
		static get DECORATIONS(){ return 4; };
		static get ENTITIES(){ return 8; };

		constructor(mapId=0, update=0, scale=0, size={x:0,z:0}, offset={x:0,z:0}, data=null, decorations=[]) {
			super();
			this.mapId = mapId;
			this.update = update;
			this.scale = scale;
			this.size = size;
			this.offset = offset;
			this.data = data;
			this.decorations = decorations;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(67);
			this.writeVarlong(this.map_id);
			this.writeVaruint(this.update);
			if(update==2||update==4) {
				this.writeByte(this.scale);
			}
			if(update==2) {
				this.writeVarint(this.size.x);
				this.writeVarint(this.size.z);
			}
			if(update==2) {
				this.writeVarint(this.offset.x);
				this.writeVarint(this.offset.z);
			}
			if(update==2) {
				this.writeBytes(this.data);
			}
			if(update==4) {
				this.writeVaruint(this.decorations.length);
				for(var dhc5zncf in this.decorations) {
					this.writeBytes(this.decorations[dhc5zncf].encode());
				}
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.map_id=this.readVarlong();
			this.update=this.readVaruint();
			if(update==2||update==4) {
				this.scale=this.readByte();
			}
			if(update==2) {
				this.size={};
				this.size.x=this.readVarint();
				this.size.z=this.readVarint();
			}
			if(update==2) {
				this.offset={};
				this.offset.x=this.readVarint();
				this.offset.z=this.readVarint();
			}
			if(update==2) {
				this.data=Array.from(this._buffer);
				this._buffer=[];
			}
			if(update==4) {
				var aramzvbj=this.readVaruint();
				this.decorations=[];
				for(var dhc5zncf=0;dhc5zncf<aramzvbj;dhc5zncf++) {
					this.decorations[dhc5zncf]=Types.Decoration.fromBuffer(this._buffer);
					this._buffer=this.decorations[dhc5zncf]._buffer;
				}
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ClientboundMapItemData().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ClientboundMapItemData(map_id: " + this.map_id + ", update: " + this.update + ", scale: " + this.scale + ", size: " + this.size + ", offset: " + this.offset + ", data: " + this.data + ", decorations: " + this.decorations + ")";
		}

	}
	,

	MapInfoRequest: class extends Buffer {

		static get ID(){ return 68; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(mapId=0) {
			super();
			this.mapId = mapId;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(68);
			this.writeVarlong(this.map_id);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.map_id=this.readVarlong();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.MapInfoRequest().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "MapInfoRequest(map_id: " + this.map_id + ")";
		}

	}
	,

	RequestChunkRadius: class extends Buffer {

		static get ID(){ return 69; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(radius=0) {
			super();
			this.radius = radius;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(69);
			this.writeVarint(this.radius);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.radius=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.RequestChunkRadius().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "RequestChunkRadius(radius: " + this.radius + ")";
		}

	}
	,

	ChunkRadiusUpdated: class extends Buffer {

		static get ID(){ return 70; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(radius=0) {
			super();
			this.radius = radius;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(70);
			this.writeVarint(this.radius);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.radius=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ChunkRadiusUpdated().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ChunkRadiusUpdated(radius: " + this.radius + ")";
		}

	}
	,

	ItemFrameDropItem: class extends Buffer {

		static get ID(){ return 71; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(position=null, item=null) {
			super();
			this.position = position;
			this.item = item;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(71);
			this.writeBytes(this.position.encode());
			this.writeBytes(this.item.encode());
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.position=Types.BlockPosition.fromBuffer(this._buffer);
			this._buffer=this.position._buffer;
			this.item=Types.Slot.fromBuffer(this._buffer);
			this._buffer=this.item._buffer;
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ItemFrameDropItem().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ItemFrameDropItem(position: " + this.position + ", item: " + this.item + ")";
		}

	}
	,

	GameRulesChanged: class extends Buffer {

		static get ID(){ return 72; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(rules=[]) {
			super();
			this.rules = rules;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(72);
			this.writeVaruint(this.rules.length);
			for(var dhc5dxc in this.rules) {
				this.writeBytes(this.rules[dhc5dxc].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var aramcvzm=this.readVaruint();
			this.rules=[];
			for(var dhc5dxc=0;dhc5dxc<aramcvzm;dhc5dxc++) {
				this.rules[dhc5dxc]=Types.Rule.fromBuffer(this._buffer);
				this._buffer=this.rules[dhc5dxc]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.GameRulesChanged().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "GameRulesChanged(rules: " + this.rules + ")";
		}

	}
	,

	Camera: class extends Buffer {

		static get ID(){ return 73; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(unknown0=0, unknown1=0) {
			super();
			this.unknown0 = unknown0;
			this.unknown1 = unknown1;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(73);
			this.writeVarlong(this.unknown0);
			this.writeVarlong(this.unknown1);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.unknown0=this.readVarlong();
			this.unknown1=this.readVarlong();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.Camera().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Camera(unknown0: " + this.unknown0 + ", unknown1: " + this.unknown1 + ")";
		}

	}
	,

	BossEvent: class extends Buffer {

		static get ID(){ return 74; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// event id
		static get ADD(){ return 0; };
		static get UPDATE(){ return 1; };
		static get REMOVE(){ return 2; };

		constructor(entityId=0, eventId=0) {
			super();
			this.entityId = entityId;
			this.eventId = eventId;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(74);
			this.writeVarlong(this.entity_id);
			this.writeVaruint(this.event_id);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.event_id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.BossEvent().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "BossEvent(entity_id: " + this.entity_id + ", event_id: " + this.event_id + ")";
		}

	}
	,

	ShowCredits: class extends Buffer {

		static get ID(){ return 75; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		// status
		static get START(){ return 0; };
		static get END(){ return 1; };

		constructor(entityId=0, status=0) {
			super();
			this.entityId = entityId;
			this.status = status;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(75);
			this.writeVarlong(this.entity_id);
			this.writeVarint(this.status);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.status=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ShowCredits().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ShowCredits(entity_id: " + this.entity_id + ", status: " + this.status + ")";
		}

	}
	,

	AvailableCommands: class extends Buffer {

		static get ID(){ return 76; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(enumValues=[], unknown1=[], enums=[], commands=[]) {
			super();
			this.enumValues = enumValues;
			this.unknown1 = unknown1;
			this.enums = enums;
			this.commands = commands;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(76);
			this.writeVaruint(this.enum_values.length);
			for(var dhc5bvxz in this.enum_values) {
				var dhc5bvxz=this.encodeString(this.enum_values[dhc5bvxz]);
				this.writeVaruint(dhc5bvxz.length);
				this.writeBytes(dhc5bvxz);
			}
			this.writeVaruint(this.unknown1.length);
			for(var dhc5btbd in this.unknown1) {
				var dhc5btbd=this.encodeString(this.unknown1[dhc5btbd]);
				this.writeVaruint(dhc5btbd.length);
				this.writeBytes(dhc5btbd);
			}
			this.writeVaruint(this.enums.length);
			for(var dhc5bvc in this.enums) {
				this.writeBytes(this.enums[dhc5bvc].encode());
			}
			this.writeVaruint(this.commands.length);
			for(var dhc5b1y5 in this.commands) {
				this.writeBytes(this.commands[dhc5b1y5].encode());
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var aramz5b9=this.readVaruint();
			this.enum_values=[];
			for(var dhc5bvxz=0;dhc5bvxz<aramz5b9;dhc5bvxz++) {
				var dhc5bvxz=this.readVaruint();
				this.enum_values[dhc5bvxz]=this.decodeString(this.readBytes(dhc5bvxz));
			}
			var aramd5b9=this.readVaruint();
			this.unknown1=[];
			for(var dhc5btbd=0;dhc5btbd<aramd5b9;dhc5btbd++) {
				var dhc5btbd=this.readVaruint();
				this.unknown1[dhc5btbd]=this.decodeString(this.readBytes(dhc5btbd));
			}
			var aramz5bm=this.readVaruint();
			this.enums=[];
			for(var dhc5bvc=0;dhc5bvc<aramz5bm;dhc5bvc++) {
				this.enums[dhc5bvc]=Types.Enum.fromBuffer(this._buffer);
				this._buffer=this.enums[dhc5bvc]._buffer;
			}
			var aramy9bf=this.readVaruint();
			this.commands=[];
			for(var dhc5b1y5=0;dhc5b1y5<aramy9bf;dhc5b1y5++) {
				this.commands[dhc5b1y5]=Types.Command.fromBuffer(this._buffer);
				this._buffer=this.commands[dhc5b1y5]._buffer;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.AvailableCommands().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "AvailableCommands(enum_values: " + this.enum_values + ", unknown1: " + this.unknown1 + ", enums: " + this.enums + ", commands: " + this.commands + ")";
		}

	}
	,

	CommandRequest: class extends Buffer {

		static get ID(){ return 77; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		// type
		static get PLAYER(){ return 0; };
		static get COMMAND_BLOCK(){ return 1; };
		static get MINECART_COMMAND_BLOCK(){ return 2; };
		static get DEV_CONSOLE(){ return 3; };

		constructor(command="", type=0, requestId="", playerId=0) {
			super();
			this.command = command;
			this.type = type;
			this.requestId = requestId;
			this.playerId = playerId;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(77);
			var dhc5b1y5=this.encodeString(this.command);
			this.writeVaruint(dhc5b1y5.length);
			this.writeBytes(dhc5b1y5);
			this.writeVaruint(this.type);
			var dhc5zfzn=this.encodeString(this.request_id);
			this.writeVaruint(dhc5zfzn.length);
			this.writeBytes(dhc5zfzn);
			if(type==3) {
				this.writeVarint(this.player_id);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5b1y5=this.readVaruint();
			this.command=this.decodeString(this.readBytes(dhc5b1y5));
			this.type=this.readVaruint();
			var dhc5zfzn=this.readVaruint();
			this.request_id=this.decodeString(this.readBytes(dhc5zfzn));
			if(type==3) {
				this.player_id=this.readVarint();
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.CommandRequest().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "CommandRequest(command: " + this.command + ", type: " + this.type + ", request_id: " + this.request_id + ", player_id: " + this.player_id + ")";
		}

	}
	,

	CommandBlockUpdate: class extends Buffer {

		static get ID(){ return 78; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		constructor(updateBlock=false, position=null, mode=0, redstoneMode=false, conditional=false, minecart=0, command="", lastOutput="", hover="", trackOutput=false) {
			super();
			this.updateBlock = updateBlock;
			this.position = position;
			this.mode = mode;
			this.redstoneMode = redstoneMode;
			this.conditional = conditional;
			this.minecart = minecart;
			this.command = command;
			this.lastOutput = lastOutput;
			this.hover = hover;
			this.trackOutput = trackOutput;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(78);
			this.writeBool(this.update_block);
			if(updateBlock==true) {
				this.writeBytes(this.position.encode());
			}
			if(updateBlock==true) {
				this.writeVaruint(this.mode);
			}
			if(updateBlock==true) {
				this.writeBool(this.redstone_mode);
			}
			if(updateBlock==true) {
				this.writeBool(this.conditional);
			}
			if(updateBlock==false) {
				this.writeVarlong(this.minecart);
			}
			var dhc5b1y5=this.encodeString(this.command);
			this.writeVaruint(dhc5b1y5.length);
			this.writeBytes(dhc5b1y5);
			var dhc5ynx9=this.encodeString(this.last_output);
			this.writeVaruint(dhc5ynx9.length);
			this.writeBytes(dhc5ynx9);
			var dhc5bzc=this.encodeString(this.hover);
			this.writeVaruint(dhc5bzc.length);
			this.writeBytes(dhc5bzc);
			this.writeBool(this.track_output);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.update_block=this.readBool();
			if(updateBlock==true) {
				this.position=Types.BlockPosition.fromBuffer(this._buffer);
				this._buffer=this.position._buffer;
			}
			if(updateBlock==true) {
				this.mode=this.readVaruint();
			}
			if(updateBlock==true) {
				this.redstone_mode=this.readBool();
			}
			if(updateBlock==true) {
				this.conditional=this.readBool();
			}
			if(updateBlock==false) {
				this.minecart=this.readVarlong();
			}
			var dhc5b1y5=this.readVaruint();
			this.command=this.decodeString(this.readBytes(dhc5b1y5));
			var dhc5ynx9=this.readVaruint();
			this.last_output=this.decodeString(this.readBytes(dhc5ynx9));
			var dhc5bzc=this.readVaruint();
			this.hover=this.decodeString(this.readBytes(dhc5bzc));
			this.track_output=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.CommandBlockUpdate().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "CommandBlockUpdate(update_block: " + this.update_block + ", position: " + this.position + ", mode: " + this.mode + ", redstone_mode: " + this.redstone_mode + ", conditional: " + this.conditional + ", minecart: " + this.minecart + ", command: " + this.command + ", last_output: " + this.last_output + ", hover: " + this.hover + ", track_output: " + this.track_output + ")";
		}

	}
	,

	UpdateTrade: class extends Buffer {

		static get ID(){ return 80; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(window=0, windowType=15, unknown2=0, unknown3=0, willing=false, trader=0, player=0, displayName="", offers=null) {
			super();
			this.window = window;
			this.windowType = windowType;
			this.unknown2 = unknown2;
			this.unknown3 = unknown3;
			this.willing = willing;
			this.trader = trader;
			this.player = player;
			this.displayName = displayName;
			this.offers = offers;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(80);
			this.writeByte(this.window);
			this.writeByte(this.window_type);
			this.writeVarint(this.unknown2);
			this.writeVarint(this.unknown3);
			this.writeBool(this.willing);
			this.writeVarlong(this.trader);
			this.writeVarlong(this.player);
			var dhc5anbf=this.encodeString(this.display_name);
			this.writeVaruint(dhc5anbf.length);
			this.writeBytes(dhc5anbf);
			this.writeBytes(this.offers);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.window=this.readByte();
			this.window_type=this.readByte();
			this.unknown2=this.readVarint();
			this.unknown3=this.readVarint();
			this.willing=this.readBool();
			this.trader=this.readVarlong();
			this.player=this.readVarlong();
			var dhc5anbf=this.readVaruint();
			this.display_name=this.decodeString(this.readBytes(dhc5anbf));
			this.offers=Array.from(this._buffer);
			this._buffer=[];
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.UpdateTrade().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "UpdateTrade(window: " + this.window + ", window_type: " + this.window_type + ", unknown2: " + this.unknown2 + ", unknown3: " + this.unknown3 + ", willing: " + this.willing + ", trader: " + this.trader + ", player: " + this.player + ", display_name: " + this.display_name + ", offers: " + this.offers + ")";
		}

	}
	,

	UpdateEquip: class extends Buffer {

		static get ID(){ return 81; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor() {
			super();
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(81);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.UpdateEquip().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "UpdateEquip()";
		}

	}
	,

	ResourcePackDataInfo: class extends Buffer {

		static get ID(){ return 82; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(id="", maxChunkSize=0, chunkCount=0, compressedPackSize=0, sha256="") {
			super();
			this.id = id;
			this.maxChunkSize = maxChunkSize;
			this.chunkCount = chunkCount;
			this.compressedPackSize = compressedPackSize;
			this.sha256 = sha256;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(82);
			var dhc5z=this.encodeString(this.id);
			this.writeVaruint(dhc5z.length);
			this.writeBytes(dhc5z);
			this.writeLittleEndianInt(this.max_chunk_size);
			this.writeLittleEndianInt(this.chunk_count);
			this.writeLittleEndianLong(this.compressed_pack_size);
			var dhc5aeny=this.encodeString(this.sha256);
			this.writeVaruint(dhc5aeny.length);
			this.writeBytes(dhc5aeny);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5z=this.readVaruint();
			this.id=this.decodeString(this.readBytes(dhc5z));
			this.max_chunk_size=this.readLittleEndianInt();
			this.chunk_count=this.readLittleEndianInt();
			this.compressed_pack_size=this.readLittleEndianLong();
			var dhc5aeny=this.readVaruint();
			this.sha256=this.decodeString(this.readBytes(dhc5aeny));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ResourcePackDataInfo().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ResourcePackDataInfo(id: " + this.id + ", max_chunk_size: " + this.max_chunk_size + ", chunk_count: " + this.chunk_count + ", compressed_pack_size: " + this.compressed_pack_size + ", sha256: " + this.sha256 + ")";
		}

	}
	,

	ResourcePackChunkData: class extends Buffer {

		static get ID(){ return 83; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(id="", chunkIndex=0, progress=0, data=null) {
			super();
			this.id = id;
			this.chunkIndex = chunkIndex;
			this.progress = progress;
			this.data = data;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(83);
			var dhc5z=this.encodeString(this.id);
			this.writeVaruint(dhc5z.length);
			this.writeBytes(dhc5z);
			this.writeLittleEndianInt(this.chunk_index);
			this.writeLittleEndianLong(this.progress);
			this.writeLittleEndianInt(this.data.length);
			this.writeBytes(this.data);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5z=this.readVaruint();
			this.id=this.decodeString(this.readBytes(dhc5z));
			this.chunk_index=this.readLittleEndianInt();
			this.progress=this.readLittleEndianLong();
			var aramzfy=this.readLittleEndianInt();
			this.data=this.readBytes(aramzfy);
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ResourcePackChunkData().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ResourcePackChunkData(id: " + this.id + ", chunk_index: " + this.chunk_index + ", progress: " + this.progress + ", data: " + this.data + ")";
		}

	}
	,

	ResourcePackChunkRequest: class extends Buffer {

		static get ID(){ return 84; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(id="", chunkIndex=0) {
			super();
			this.id = id;
			this.chunkIndex = chunkIndex;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(84);
			var dhc5z=this.encodeString(this.id);
			this.writeVaruint(dhc5z.length);
			this.writeBytes(dhc5z);
			this.writeLittleEndianInt(this.chunk_index);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5z=this.readVaruint();
			this.id=this.decodeString(this.readBytes(dhc5z));
			this.chunk_index=this.readLittleEndianInt();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ResourcePackChunkRequest().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ResourcePackChunkRequest(id: " + this.id + ", chunk_index: " + this.chunk_index + ")";
		}

	}
	,

	Transfer: class extends Buffer {

		static get ID(){ return 85; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(ip="", port=19132) {
			super();
			this.ip = ip;
			this.port = port;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(85);
			var dhc5c=this.encodeString(this.ip);
			this.writeVaruint(dhc5c.length);
			this.writeBytes(dhc5c);
			this.writeLittleEndianShort(this.port);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5c=this.readVaruint();
			this.ip=this.decodeString(this.readBytes(dhc5c));
			this.port=this.readLittleEndianShort();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.Transfer().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "Transfer(ip: " + this.ip + ", port: " + this.port + ")";
		}

	}
	,

	PlaySound: class extends Buffer {

		static get ID(){ return 86; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(name="", position=null, volume=.0, pitch=.0) {
			super();
			this.name = name;
			this.position = position;
			this.volume = volume;
			this.pitch = pitch;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(86);
			var dhc5y1=this.encodeString(this.name);
			this.writeVaruint(dhc5y1.length);
			this.writeBytes(dhc5y1);
			this.writeBytes(this.position.encode());
			this.writeLittleEndianFloat(this.volume);
			this.writeLittleEndianFloat(this.pitch);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5y1=this.readVaruint();
			this.name=this.decodeString(this.readBytes(dhc5y1));
			this.position=Types.BlockPosition.fromBuffer(this._buffer);
			this._buffer=this.position._buffer;
			this.volume=this.readLittleEndianFloat();
			this.pitch=this.readLittleEndianFloat();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.PlaySound().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PlaySound(name: " + this.name + ", position: " + this.position + ", volume: " + this.volume + ", pitch: " + this.pitch + ")";
		}

	}
	,

	StopSound: class extends Buffer {

		static get ID(){ return 87; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(name="", stopAll=false) {
			super();
			this.name = name;
			this.stopAll = stopAll;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(87);
			var dhc5y1=this.encodeString(this.name);
			this.writeVaruint(dhc5y1.length);
			this.writeBytes(dhc5y1);
			this.writeBool(this.stop_all);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5y1=this.readVaruint();
			this.name=this.decodeString(this.readBytes(dhc5y1));
			this.stop_all=this.readBool();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.StopSound().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "StopSound(name: " + this.name + ", stop_all: " + this.stop_all + ")";
		}

	}
	,

	SetTitle: class extends Buffer {

		static get ID(){ return 88; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// action
		static get HIDE(){ return 0; };
		static get RESET(){ return 1; };
		static get SET_TITLE(){ return 2; };
		static get SET_SUBTITLE(){ return 3; };
		static get SET_ACTION_BAR(){ return 4; };
		static get SET_TIMINGS(){ return 5; };

		constructor(action=0, text="", fadeIn=0, stay=0, fadeOut=0) {
			super();
			this.action = action;
			this.text = text;
			this.fadeIn = fadeIn;
			this.stay = stay;
			this.fadeOut = fadeOut;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(88);
			this.writeVarint(this.action);
			var dhc5zh=this.encodeString(this.text);
			this.writeVaruint(dhc5zh.length);
			this.writeBytes(dhc5zh);
			this.writeVarint(this.fade_in);
			this.writeVarint(this.stay);
			this.writeVarint(this.fade_out);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.action=this.readVarint();
			var dhc5zh=this.readVaruint();
			this.text=this.decodeString(this.readBytes(dhc5zh));
			this.fade_in=this.readVarint();
			this.stay=this.readVarint();
			this.fade_out=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SetTitle().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetTitle(action: " + this.action + ", text: " + this.text + ", fade_in: " + this.fade_in + ", stay: " + this.stay + ", fade_out: " + this.fade_out + ")";
		}

	}
	,

	AddBehaviorTree: class extends Buffer {

		static get ID(){ return 89; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(unknown0="") {
			super();
			this.unknown0 = unknown0;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(89);
			var dhc5btbd=this.encodeString(this.unknown0);
			this.writeVaruint(dhc5btbd.length);
			this.writeBytes(dhc5btbd);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5btbd=this.readVaruint();
			this.unknown0=this.decodeString(this.readBytes(dhc5btbd));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.AddBehaviorTree().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "AddBehaviorTree(unknown0: " + this.unknown0 + ")";
		}

	}
	,

	StructureBlockUpdate: class extends Buffer {

		static get ID(){ return 90; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor() {
			super();
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(90);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.StructureBlockUpdate().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "StructureBlockUpdate()";
		}

	}
	,

	ShowStoreOffer: class extends Buffer {

		static get ID(){ return 91; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(unknown0="", unknown1=false, unknown2="") {
			super();
			this.unknown0 = unknown0;
			this.unknown1 = unknown1;
			this.unknown2 = unknown2;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(91);
			var dhc5btbd=this.encodeString(this.unknown0);
			this.writeVaruint(dhc5btbd.length);
			this.writeBytes(dhc5btbd);
			this.writeBool(this.unknown1);
			var dhc5btbd=this.encodeString(this.unknown2);
			this.writeVaruint(dhc5btbd.length);
			this.writeBytes(dhc5btbd);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5btbd=this.readVaruint();
			this.unknown0=this.decodeString(this.readBytes(dhc5btbd));
			this.unknown1=this.readBool();
			var dhc5btbd=this.readVaruint();
			this.unknown2=this.decodeString(this.readBytes(dhc5btbd));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ShowStoreOffer().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ShowStoreOffer(unknown0: " + this.unknown0 + ", unknown1: " + this.unknown1 + ", unknown2: " + this.unknown2 + ")";
		}

	}
	,

	PurchaseReceipt: class extends Buffer {

		static get ID(){ return 92; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(unknown0=[]) {
			super();
			this.unknown0 = unknown0;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(92);
			this.writeVaruint(this.unknown0.length);
			for(var dhc5btbd in this.unknown0) {
				var dhc5btbd=this.encodeString(this.unknown0[dhc5btbd]);
				this.writeVaruint(dhc5btbd.length);
				this.writeBytes(dhc5btbd);
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var aramd5b9=this.readVaruint();
			this.unknown0=[];
			for(var dhc5btbd=0;dhc5btbd<aramd5b9;dhc5btbd++) {
				var dhc5btbd=this.readVaruint();
				this.unknown0[dhc5btbd]=this.decodeString(this.readBytes(dhc5btbd));
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.PurchaseReceipt().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PurchaseReceipt(unknown0: " + this.unknown0 + ")";
		}

	}
	,

	PlayerSkin: class extends Buffer {

		static get ID(){ return 93; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(uuid=null, skinId="", skinName="", unknown3="", skinData=[], capeData=[], geometryModel="", geometryData=[]) {
			super();
			this.uuid = uuid;
			this.skinId = skinId;
			this.skinName = skinName;
			this.unknown3 = unknown3;
			this.skinData = skinData;
			this.capeData = capeData;
			this.geometryModel = geometryModel;
			this.geometryData = geometryData;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(93);
			this.writeBytes(this.uuid.encode());
			var dhc5alxl=this.encodeString(this.skin_id);
			this.writeVaruint(dhc5alxl.length);
			this.writeBytes(dhc5alxl);
			var dhc5alx5=this.encodeString(this.skin_name);
			this.writeVaruint(dhc5alx5.length);
			this.writeBytes(dhc5alx5);
			var dhc5btbd=this.encodeString(this.unknown3);
			this.writeVaruint(dhc5btbd.length);
			this.writeBytes(dhc5btbd);
			this.writeVaruint(this.skin_data.length);
			this.writeBytes(this.skin_data);
			this.writeVaruint(this.cape_data.length);
			this.writeBytes(this.cape_data);
			var dhc5z9zr=this.encodeString(this.geometry_model);
			this.writeVaruint(dhc5z9zr.length);
			this.writeBytes(dhc5z9zr);
			this.writeVaruint(this.geometry_data.length);
			this.writeBytes(this.geometry_data);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.uuid=Types.McpeUuid.fromBuffer(this._buffer);
			this._buffer=this.uuid._buffer;
			var dhc5alxl=this.readVaruint();
			this.skin_id=this.decodeString(this.readBytes(dhc5alxl));
			var dhc5alx5=this.readVaruint();
			this.skin_name=this.decodeString(this.readBytes(dhc5alx5));
			var dhc5btbd=this.readVaruint();
			this.unknown3=this.decodeString(this.readBytes(dhc5btbd));
			var aramctb9=this.readVaruint();
			this.skin_data=this.readBytes(aramctb9);
			var aramyfz9=this.readVaruint();
			this.cape_data=this.readBytes(aramyfz9);
			var dhc5z9zr=this.readVaruint();
			this.geometry_model=this.decodeString(this.readBytes(dhc5z9zr));
			var aramzvbv=this.readVaruint();
			this.geometry_data=this.readBytes(aramzvbv);
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.PlayerSkin().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PlayerSkin(uuid: " + this.uuid + ", skin_id: " + this.skin_id + ", skin_name: " + this.skin_name + ", unknown3: " + this.unknown3 + ", skin_data: " + this.skin_data + ", cape_data: " + this.cape_data + ", geometry_model: " + this.geometry_model + ", geometry_data: " + this.geometry_data + ")";
		}

	}
	,

	SubClientLogin: class extends Buffer {

		static get ID(){ return 94; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor() {
			super();
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(94);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SubClientLogin().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SubClientLogin()";
		}

	}
	,

	InitiateWebSocketConnection: class extends Buffer {

		static get ID(){ return 95; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return false; };

		constructor(unknown0="") {
			super();
			this.unknown0 = unknown0;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(95);
			var dhc5btbd=this.encodeString(this.unknown0);
			this.writeVaruint(dhc5btbd.length);
			this.writeBytes(dhc5btbd);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5btbd=this.readVaruint();
			this.unknown0=this.decodeString(this.readBytes(dhc5btbd));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.InitiateWebSocketConnection().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "InitiateWebSocketConnection(unknown0: " + this.unknown0 + ")";
		}

	}
	,

	SetLastHurtBy: class extends Buffer {

		static get ID(){ return 96; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(unknown0=0) {
			super();
			this.unknown0 = unknown0;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(96);
			this.writeVarint(this.unknown0);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.unknown0=this.readVarint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SetLastHurtBy().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetLastHurtBy(unknown0: " + this.unknown0 + ")";
		}

	}
	,

	BookEdit: class extends Buffer {

		static get ID(){ return 97; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return true; };

		// type (variant)
		static get REPLACE_PAGE(){ return 0; };
		static get ADD_PAGE(){ return 1; };
		static get DELETE_PAGE(){ return 2; };
		static get SWAP_PAGES(){ return 3; };
		static get SIGN(){ return 4; };

		constructor(type=0, slot=0) {
			super();
			this.type = type;
			this.slot = slot;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(97);
			this.writeByte(this.type);
			this.writeByte(this.slot);
			switch(this.type) {
				case 0:
					this.writeByte(this.type);
					this.writeByte(this.slot);
					break;
				case 1:
					this.writeByte(this.type);
					this.writeByte(this.slot);
					break;
				case 2:
					this.writeByte(this.type);
					this.writeByte(this.slot);
					break;
				case 3:
					this.writeByte(this.type);
					this.writeByte(this.slot);
					break;
				case 4:
					this.writeByte(this.type);
					this.writeByte(this.slot);
					break;
				default: break;
			}
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.type=this.readByte();
			this.slot=this.readByte();
			switch(this.type) {
				case 0:
					this.page_number=this.readByte();
					var dhc5btbd=this.readVaruint();
					this.unknown3=this.decodeString(this.readBytes(dhc5btbd));
					var dhc5btbd=this.readVaruint();
					this.unknown4=this.decodeString(this.readBytes(dhc5btbd));
					break;
				case 1:
					this.page_number=this.readByte();
					var dhc5btbd=this.readVaruint();
					this.unknown3=this.decodeString(this.readBytes(dhc5btbd));
					var dhc5btbd=this.readVaruint();
					this.unknown4=this.decodeString(this.readBytes(dhc5btbd));
					break;
				case 2:
					this.page_number=this.readByte();
					break;
				case 3:
					this.page_1=this.readByte();
					this.page_2=this.readByte();
					break;
				case 4:
					var dhc5arz=this.readVaruint();
					this.title=this.decodeString(this.readBytes(dhc5arz));
					var dhc5drbi=this.readVaruint();
					this.author=this.decodeString(this.readBytes(dhc5drbi));
					break;
				default: break;
			}
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.BookEdit().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "BookEdit(type: " + this.type + ", slot: " + this.slot + ")";
		}

	}
	,

	NpcRequest: class extends Buffer {

		static get ID(){ return 98; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(entityId=0, requestType=0, command="", actionType=0) {
			super();
			this.entityId = entityId;
			this.requestType = requestType;
			this.command = command;
			this.actionType = actionType;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(98);
			this.writeVarlong(this.entity_id);
			this.writeByte(this.request_type);
			var dhc5b1y5=this.encodeString(this.command);
			this.writeVaruint(dhc5b1y5.length);
			this.writeBytes(dhc5b1y5);
			this.writeByte(this.action_type);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.entity_id=this.readVarlong();
			this.request_type=this.readByte();
			var dhc5b1y5=this.readVaruint();
			this.command=this.decodeString(this.readBytes(dhc5b1y5));
			this.action_type=this.readByte();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.NpcRequest().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "NpcRequest(entity_id: " + this.entity_id + ", request_type: " + this.request_type + ", command: " + this.command + ", action_type: " + this.action_type + ")";
		}

	}
	,

	PhotoTransfer: class extends Buffer {

		static get ID(){ return 99; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor(unknown0="", unknown1="", unknown2="") {
			super();
			this.unknown0 = unknown0;
			this.unknown1 = unknown1;
			this.unknown2 = unknown2;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(99);
			var dhc5btbd=this.encodeString(this.unknown0);
			this.writeVaruint(dhc5btbd.length);
			this.writeBytes(dhc5btbd);
			var dhc5btbd=this.encodeString(this.unknown1);
			this.writeVaruint(dhc5btbd.length);
			this.writeBytes(dhc5btbd);
			var dhc5btbd=this.encodeString(this.unknown2);
			this.writeVaruint(dhc5btbd.length);
			this.writeBytes(dhc5btbd);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			var dhc5btbd=this.readVaruint();
			this.unknown0=this.decodeString(this.readBytes(dhc5btbd));
			var dhc5btbd=this.readVaruint();
			this.unknown1=this.decodeString(this.readBytes(dhc5btbd));
			var dhc5btbd=this.readVaruint();
			this.unknown2=this.decodeString(this.readBytes(dhc5btbd));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.PhotoTransfer().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "PhotoTransfer(unknown0: " + this.unknown0 + ", unknown1: " + this.unknown1 + ", unknown2: " + this.unknown2 + ")";
		}

	}
	,

	ModalFormRequest: class extends Buffer {

		static get ID(){ return 100; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(formId=0, data="") {
			super();
			this.formId = formId;
			this.data = data;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(100);
			this.writeVaruint(this.form_id);
			var dhc5yr=this.encodeString(this.data);
			this.writeVaruint(dhc5yr.length);
			this.writeBytes(dhc5yr);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.form_id=this.readVaruint();
			var dhc5yr=this.readVaruint();
			this.data=this.decodeString(this.readBytes(dhc5yr));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ModalFormRequest().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ModalFormRequest(form_id: " + this.form_id + ", data: " + this.data + ")";
		}

	}
	,

	ModalFormResponse: class extends Buffer {

		static get ID(){ return 101; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(formId=0, data="") {
			super();
			this.formId = formId;
			this.data = data;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(101);
			this.writeVaruint(this.form_id);
			var dhc5yr=this.encodeString(this.data);
			this.writeVaruint(dhc5yr.length);
			this.writeBytes(dhc5yr);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.form_id=this.readVaruint();
			var dhc5yr=this.readVaruint();
			this.data=this.decodeString(this.readBytes(dhc5yr));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ModalFormResponse().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ModalFormResponse(form_id: " + this.form_id + ", data: " + this.data + ")";
		}

	}
	,

	ServerSettingsRequest: class extends Buffer {

		static get ID(){ return 102; };

		static get CLIENTBOUND(){ return false; };
		static get SERVERBOUND(){ return true; };

		constructor() {
			super();
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(102);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ServerSettingsRequest().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ServerSettingsRequest()";
		}

	}
	,

	ServerSettingsResponse: class extends Buffer {

		static get ID(){ return 103; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor(formId=0, data="") {
			super();
			this.formId = formId;
			this.data = data;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(103);
			this.writeVaruint(this.form_id);
			var dhc5yr=this.encodeString(this.data);
			this.writeVaruint(dhc5yr.length);
			this.writeBytes(dhc5yr);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.form_id=this.readVaruint();
			var dhc5yr=this.readVaruint();
			this.data=this.decodeString(this.readBytes(dhc5yr));
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ServerSettingsResponse().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ServerSettingsResponse(form_id: " + this.form_id + ", data: " + this.data + ")";
		}

	}
	,

	ShowProfile: class extends Buffer {

		static get ID(){ return 104; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		constructor() {
			super();
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(104);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.ShowProfile().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "ShowProfile()";
		}

	}
	,

	SetDefaultGameType: class extends Buffer {

		static get ID(){ return 105; };

		static get CLIENTBOUND(){ return true; };
		static get SERVERBOUND(){ return false; };

		// game type
		static get SURVIVAL(){ return 0; };
		static get CREATIVE(){ return 1; };
		static get ADVENTURE(){ return 2; };

		constructor(gameType=0) {
			super();
			this.gameType = gameType;
		}

		/** @return {Uint8Array} */
		encode() {
			this._buffer = [];
			this.writeVaruint(105);
			this.writeVaruint(this.game_type);
			return new Uint8Array(this._buffer);
		}

		/** @param {(Uint8Array|Array)} buffer */
		decode(_buffer) {
			this._buffer = Array.from(_buffer);
			var _id=this.readVaruint();
			this.game_type=this.readVaruint();
			return this;
		}

		/** @param {(Uint8Array|Array)} buffer */
		static fromBuffer(buffer) {
			return new Play.SetDefaultGameType().decode(buffer);
		}

		/** @return {string} */
		toString() {
			return "SetDefaultGameType(game_type: " + this.game_type + ")";
		}

	}

}